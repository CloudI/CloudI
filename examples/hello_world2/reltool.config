{sys,
 [
  {lib_dirs,
   [
    "/usr/local/lib/cloudi-1.2.4/lib"
   ]},
  {erts, [{mod_cond, all}, {app_file, keep}]},
  {app_file, keep},
  {rel, "cloudi_hello_world2", "1",
   [
    % external dependencies
    cloudi_x_cowboy,
    % combonodefinder not started automatically
    cloudi_x_dynamic_compile,
    % ec2nodefinder not started automatically
    cloudi_x_ecouchdb,
    cloudi_x_ememcached,
    cloudi_x_emysql,
    cloudi_x_epgsql,
    cloudi_x_etokyotyrant,
    cloudi_x_jsx,
    % nodefinder not started automatically
    cloudi_x_ranch, % required for cowboy
    % CloudI
    cloudi_core,
    cloudi_services_internal,
    cloudi_services_databases,
    cloudi_services_messaging,
    cloudi_x_pqueue,
    cloudi_x_quickrand,
    cloudi_x_cpg,
    cloudi_x_uuid,
    cloudi_x_trie,
    cloudi_x_reltool_util,
    cloudi_x_key2value,
    % Erlang
    sasl,
    kernel,
    stdlib
   ]},
  {rel, "start_clean", "",
   [
    kernel,
    stdlib
   ]},
  {boot_rel, "cloudi_hello_world2"},
  {profile, embedded},
  {incl_cond, derived},
  {mod_cond, all},
  {excl_archive_filters, [".*"]},
  {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)",
                      "^erts.*/(doc|info|include|lib|man|src)"]},
  {app, hipe, [{incl_cond, exclude}]},
  % external dependencies
  {app, cloudi_x_combonodefinder,
   [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},
  {app, cloudi_x_ec2nodefinder,
   [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},
  {app, cloudi_x_nodefinder,
   [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},
  {app, hello_world2,
   [{mod_cond, app}, {incl_cond, include}, {lib_dir, "."}]}
]}.

{target_dir, "release"}.

{overlay, [
  {mkdir, "bin"},
  {mkdir, "etc/cloudi"},
  {mkdir, "logs"},
  {copy, "./cloudi_hello_world2", "bin/cloudi_hello_world2"},
  {copy, "./erl", "{{erts_vsn}}/bin/erl"},
  {copy, "./nodetool", "{{erts_vsn}}/bin/nodetool"},
  {copy, "./app.config", "etc/cloudi/app.config"},
  {copy, "./vm.args", "etc/cloudi/vm.args"},
  {copy, "./cloudi.conf", "etc/cloudi/cloudi.conf"}
]}.
