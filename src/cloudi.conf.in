{acl, [
    % Access Control Lists (ACLs) define service name prefixes that can be
    % referenced instead of the literal service name prefixes for the
    % destination allow list and/or the destination deny list.  The ACLs may
    % reference other ACLs (cyclic references and missing references
    % in this list generate errors).  ACLs always use an exact match on the
    % send operation destination service name when determining if a common
    % prefix is allowed or denied (while ignoring the "/" character).
    {all, [database, tests]},
    {database, ["/db/"]},
    {tests, ["/tests/"]},
    {api, ["/cloudi/api/"]}
]}.
{jobs, [
    % an internal job is a native Erlang job, using the cloudi_job behavior
    % the job below provides a queue for specific database queries
    {internal,
        % prefix specified for all subscriptions
        "/cloudi/api/",
        % module name of a module in a reachable path
        cloudi_job_api,
        % module arguments are supplied as a list for the
        % cloudi_job_init/2 function
        [],
        % destination refresh controls how quickly services propogate
        % any process that sends to long-lived processes can use
        % a 'lazy' prefix destination refresh (otherwise, if sending to
        % short-lived provesses, use an 'immediate' prefix destination refresh).
        % a 'closest' suffix destination refresh always prefers local processes
        % rather than using remote processes (processes on other nodes).  if a
        % destination should be automatically load balanced across all connected
        % nodes, the 'random' suffix destination refresh should be used.
        % if the process doesn't send to any other processes, then 'none' can
        % be used and the process will die if it attempts to send to another
        % process (it is as if the destination deny list contains all services).
        % (so the choices are:  'lazy_closest', 'lazy_random',
        %                       'immediate_closest', 'immediate_random',
        %                       'none')
        none,
        % timeout for executing the cloudi_job_init/2 function
        5000,
        % default timeout for asynchronous calls
        5000,
        % default timeout for synchronous calls
        5000,
        % destination deny list is used as an ACL (Access Control List) that
        % prevents the process from sending to destinations with the specified
        % prefixes.  if atoms are used within the list, they must exist as an
        % associative entry in the acl configuration list.
        % if the destination deny list is 'undefined' any destination is valid.
        % a blocked message will just return a timeout
        % (earlier than the timeout specified for the message).
        undefined,
        % destination allow list is used as an ACL (Access Control List) that
        % allows the process to send to destinations with the specified
        % prefixes.  if atoms are used within the list, they must exist as an
        % associative entry in the acl configuration list.
        % if the destination allow list is 'undefined' any destination is valid.
        % a blocked message will just return a timeout
        % (earlier than the timeout specified for the message).
        undefined,
        % specify how many processes should be created with this configuration
        1,
        % If more than MaxR restarts occur within MaxT seconds,
        % CloudI terminates the process
        % MaxR (maximum restarts)
        5,
        % MaxT (maximum time)
        300, % seconds
        % options, e.g.:
        % {queue_limit, 1024} % to limit the job's queue to a maximum
        %                     % of 1024 messages (to prevent excessive memory
        %                     % consumption while the job is busy, handling a
        %                     % previous message)
        % (see config_job_options in lib/cloudi/src/cloudi_configuration.hrl)
        []},

    % an external job is an OS process connected
    % with a socket to the loopback device for each thread
    % the job below processes the Hexidecimal digits of PI (as a test)
    {external,
        % prefix specified for all subscriptions
        "/tests/",
        % executable file path
        "tests/hexpi/priv/hexpi",
        % command line arguments for the executable
        "",
        % {Key, Value} pairs to specify environment variables
        [{"LD_LIBRARY_PATH", "api/c/lib/"},
         {"DYLD_LIBRARY_PATH", "api/c/lib/"}],
        % destination refresh controls how quickly services propogate
        % any process that sends to long-lived processes can use
        % a 'lazy' prefix destination refresh (otherwise, if sending to
        % short-lived provesses, use an 'immediate' prefix destination refresh).
        % a 'closest' suffix destination refresh always prefers local processes
        % rather than using remote processes (processes on other nodes).  if a
        % destination should be automatically load balanced across all connected
        % nodes, the 'random' suffix destination refresh should be used.
        % if the process doesn't send to any other processes, then 'none' can
        % be used and the process will die if it attempts to send to another
        % process (it is as if the destination deny list contains all services).
        % (so the choices are:  'lazy_closest', 'lazy_random',
        %                       'immediate_closest', 'immediate_random',
        %                       'none')
        none,
        % protocol used for each socket
        tcp,
        % buffer size used for each socket
        16384, % bytes
        % timeout for receiving an initialization message from a socket
        5000,
        % default timeout for asynchronous calls
        5000,
        % default timeout for synchronous calls
        5000,
        % destination deny list is used as an ACL (Access Control List) that
        % prevents the process from sending to destinations with the specified
        % prefixes.  if atoms are used within the list, they must exist as an
        % associative entry in the acl configuration list.
        % if the destination deny list is 'undefined' any destination is valid.
        % a blocked message will just return a timeout
        % (earlier than the timeout specified for the message).
        [api],
        % destination allow list is used as an ACL (Access Control List) that
        % allows the process to send to destinations with the specified
        % prefixes.  if atoms are used within the list, they must exist as an
        % associative entry in the acl configuration list.
        % if the destination allow list is 'undefined' any destination is valid.
        % a blocked message will just return a timeout
        % (earlier than the timeout specified for the message).
        undefined,
        % specify how many processes should be created with this configuration
        % (a float is a multiplier for the erlang VM scheduler count, i.e.,
        %  the desired cpu count)
        1,
        % specify how many threads should be created with this configuration
        % (i.e., how many sockets should be opened to each OS process)
        % (a float is a multiplier for the erlang VM scheduler count, i.e.,
        %  the desired cpu count)
        1.5,
        % If more than MaxR restarts occur within MaxT seconds,
        % CloudI terminates the process
        % MaxR (maximum restarts)
        5,
        % MaxT (maximum time)
        300, % seconds
        % options, e.g.:
        % {queue_limit, 1024} % to limit the job's queue to a maximum
        %                     % of 1024 messages (to prevent excessive memory
        %                     % consumption while the job is busy, handling a
        %                     % previous message)
        % (see config_job_options in lib/cloudi/src/cloudi_configuration.hrl)
        []},
    % the job below provides a connection to the cloudi_tests PostgreSQL DB
    %{internal,
    %    "/db/pgsql/",
    %    cloudi_job_db_pgsql,
    %    [{hostname, "192.168.2.4"},
    %     {username, "cloudi"},
    %     {password, "sdehmtr1g9qs"},
    %     {port, 5432},
    %     {database, "cloudi_tests"}],
    %    none,
    %    5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    % the job below provides a queue for specific database queries
    {internal,
        "/db/pgsql/",
        cloudi_job_work_manager,
        [{destination, "/db/pgsql/cloudi_tests"},
         {name, "cloudi_tests_proxy"}],
        lazy_closest,
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    {internal,
        "/db/mysql/",
        cloudi_job_work_manager,
        [{destination, "/db/mysql/cloudi_tests"},
         {name, "cloudi_tests_proxy"}],
        lazy_closest,
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    % the job below manages the Hexidecimal PI test
    {internal,
        "/tests/",
        cloudi_job_hexpi,
        [1,       % starting index
         65536,   % ending index
         1.5],    % concurrent tasks
        immediate_closest, % recover from failures (process deaths) immediately
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},

    % tests/http/ services
    {internal,
        "/tests/http/",
        cloudi_job_http,
        [{compress, true}, {port, 6464}, {output, binary}],
        lazy_closest,
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    {internal,
        "/tests/http/",
        cloudi_job_http,
        [{compress, true}, {port, 6465}, {output, list}],
        lazy_closest,
        5000, 5000, 5000, undefined, undefined, 1, 5, 300, []},
    {external,
        "/tests/http/",
        "@PYTHON@",
        "tests/http/service/service.py",
        [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 4, 5, 300, []},
    {external,
        "/tests/http/",
        "@JAVA@",
        "-jar tests/http/service/jar/service.jar", [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 4, 5, 300, []},
    {external,
        "/tests/http/",
        "@RUBY@",
        "tests/http/service/service.rb", [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 4, 5, 300, []},
    {external,
        "/tests/http_req/",
        "tests/http_req/priv/http_req", "",
        [{"LD_LIBRARY_PATH", "api/c/lib/"},
         {"DYLD_LIBRARY_PATH", "api/c/lib/"}],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/http_req/",
        "@RUBY@",
        "tests/http_req/http_req.rb", [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/http_req/",
        "@PYTHON@",
        "tests/http_req/http_req.py",
        [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/http_req/",
        "@JAVA@",
        "-jar tests/http_req/jar/http_req.jar", [],
        none, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {internal,
        "/tests/http_req/",
        cloudi_job_http_req,
        [],
        none,
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    {internal,
        "/tests/http_req/",
        cloudi_job_filesystem,
        [{directory, "tests/http_req/public_html/"}],
        none,
        5000, 5000, 5000, [api], undefined, 1, 5, 300, []},
    % Zig-Zag test
    {internal,
        "/tests/zeromq/",
        % inbound/outbound message paths much be acyclic
        % (if they are not, you will receive a erlzmq EFSM error
        %  because the ZeroMQ REQ has received 2 zmq_send calls)
        cloudi_job_zeromq,
        % outbound ZeroMQ requests connect a CloudI name to a ZeroMQ endpoint
        [{outbound, {"zigzag_start", ["ipc:///tmp/cloudizigzagstart"]}},
        % inbound ZeroMQ replies connect a ZeroMQ endpoint to a CloudI name
         {inbound, {"zigzag_step1", ["ipc:///tmp/cloudizigzagstart"]}},
         {outbound, {"zigzag_step1", ["inproc://zigzagstep1"]}},
         {inbound, {"zigzag_step2", ["inproc://zigzagstep1"]}},
        % ZeroMQ publish connects a CloudI name to a ZeroMQ (subscribe) name
        % as {CloudI name (suffix), ZeroMQ name for message prefix}
        % for any number of endpoints
         {publish, {[{"zigzag_step2", "/zeromq/step2"}],
                    ["inproc://zigzagstep2a",
                     "ipc:///tmp/cloudizigzagstep2b",
                     "inproc://zigzagstep2c",
                     "ipc:///tmp/cloudizigzagstep2d"]}},
        % ZeroMQ subscribe connects a CloudI name to a ZeroMQ (subscribe) name
        % as {CloudI name (suffix), ZeroMQ name for subscribe setsocketopt}
        % for any number of endpoints
         {subscribe, {[{"zigzag_step3a", "/zeromq/step2"},
                       {"zigzag_step3b", "/zeromq/step2"}],
                      ["inproc://zigzagstep2a",
                       "ipc:///tmp/cloudizigzagstep2b",
                       "inproc://zigzagstep2c",
                       "ipc:///tmp/cloudizigzagstep2d"]}},
         {outbound, {"zigzag_step3a", ["inproc://zigzagstep3"]}},
         {inbound, {"zigzag_finish", ["inproc://zigzagstep3"]}}],
        immediate_closest,
        5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    % Chain inproc test (50 endpoints in a sequential call path)
    {internal,
        "/tests/zeromq/",
        cloudi_job_zeromq,
        [{outbound, {"chain_inproc_start", ["inproc://chainstep1"]}},
         {inbound, {"chain_inproc_step1", ["inproc://chainstep1"]}},
         {outbound, {"chain_inproc_step1", ["inproc://chainstep2"]}},
         {inbound, {"chain_inproc_step2", ["inproc://chainstep2"]}},
         {outbound, {"chain_inproc_step2", ["inproc://chainstep3"]}},
         {inbound, {"chain_inproc_step3", ["inproc://chainstep3"]}},
         {outbound, {"chain_inproc_step3", ["inproc://chainstep4"]}},
         {inbound, {"chain_inproc_step4", ["inproc://chainstep4"]}},
         {outbound, {"chain_inproc_step4", ["inproc://chainstep5"]}},
         {inbound, {"chain_inproc_step5", ["inproc://chainstep5"]}},
         {outbound, {"chain_inproc_step5", ["inproc://chainstep6"]}},
         {inbound, {"chain_inproc_step6", ["inproc://chainstep6"]}},
         {outbound, {"chain_inproc_step6", ["inproc://chainstep7"]}},
         {inbound, {"chain_inproc_step7", ["inproc://chainstep7"]}},
         {outbound, {"chain_inproc_step7", ["inproc://chainstep8"]}},
         {inbound, {"chain_inproc_step8", ["inproc://chainstep8"]}},
         {outbound, {"chain_inproc_step8", ["inproc://chainstep9"]}},
         {inbound, {"chain_inproc_step9", ["inproc://chainstep9"]}},
         {outbound, {"chain_inproc_step9", ["inproc://chainstep10"]}},
         {inbound, {"chain_inproc_step10", ["inproc://chainstep10"]}},
         {outbound, {"chain_inproc_step10", ["inproc://chainstep11"]}},
         {inbound, {"chain_inproc_step11", ["inproc://chainstep11"]}},
         {outbound, {"chain_inproc_step11", ["inproc://chainstep12"]}},
         {inbound, {"chain_inproc_step12", ["inproc://chainstep12"]}},
         {outbound, {"chain_inproc_step12", ["inproc://chainstep13"]}},
         {inbound, {"chain_inproc_step13", ["inproc://chainstep13"]}},
         {outbound, {"chain_inproc_step13", ["inproc://chainstep14"]}},
         {inbound, {"chain_inproc_step14", ["inproc://chainstep14"]}},
         {outbound, {"chain_inproc_step14", ["inproc://chainstep15"]}},
         {inbound, {"chain_inproc_step15", ["inproc://chainstep15"]}},
         {outbound, {"chain_inproc_step15", ["inproc://chainstep16"]}},
         {inbound, {"chain_inproc_step16", ["inproc://chainstep16"]}},
         {outbound, {"chain_inproc_step16", ["inproc://chainstep17"]}},
         {inbound, {"chain_inproc_step17", ["inproc://chainstep17"]}},
         {outbound, {"chain_inproc_step17", ["inproc://chainstep18"]}},
         {inbound, {"chain_inproc_step18", ["inproc://chainstep18"]}},
         {outbound, {"chain_inproc_step18", ["inproc://chainstep19"]}},
         {inbound, {"chain_inproc_step19", ["inproc://chainstep19"]}},
         {outbound, {"chain_inproc_step19", ["inproc://chainstep20"]}},
         {inbound, {"chain_inproc_step20", ["inproc://chainstep20"]}},
         {outbound, {"chain_inproc_step20", ["inproc://chainstep21"]}},
         {inbound, {"chain_inproc_step21", ["inproc://chainstep21"]}},
         {outbound, {"chain_inproc_step21", ["inproc://chainstep22"]}},
         {inbound, {"chain_inproc_step22", ["inproc://chainstep22"]}},
         {outbound, {"chain_inproc_step22", ["inproc://chainstep23"]}},
         {inbound, {"chain_inproc_step23", ["inproc://chainstep23"]}},
         {outbound, {"chain_inproc_step23", ["inproc://chainstep24"]}},
         {inbound, {"chain_inproc_step24", ["inproc://chainstep24"]}},
         {outbound, {"chain_inproc_step24", ["inproc://chainstep25"]}},
         {inbound, {"chain_inproc_step25", ["inproc://chainstep25"]}},
         {outbound, {"chain_inproc_step25", ["inproc://chainstep26"]}},
         {inbound, {"chain_inproc_step26", ["inproc://chainstep26"]}},
         {outbound, {"chain_inproc_step26", ["inproc://chainstep27"]}},
         {inbound, {"chain_inproc_step27", ["inproc://chainstep27"]}},
         {outbound, {"chain_inproc_step27", ["inproc://chainstep28"]}},
         {inbound, {"chain_inproc_step28", ["inproc://chainstep28"]}},
         {outbound, {"chain_inproc_step28", ["inproc://chainstep29"]}},
         {inbound, {"chain_inproc_step29", ["inproc://chainstep29"]}},
         {outbound, {"chain_inproc_step29", ["inproc://chainstep30"]}},
         {inbound, {"chain_inproc_step30", ["inproc://chainstep30"]}},
         {outbound, {"chain_inproc_step30", ["inproc://chainstep31"]}},
         {inbound, {"chain_inproc_step31", ["inproc://chainstep31"]}},
         {outbound, {"chain_inproc_step31", ["inproc://chainstep32"]}},
         {inbound, {"chain_inproc_step32", ["inproc://chainstep32"]}},
         {outbound, {"chain_inproc_step32", ["inproc://chainstep33"]}},
         {inbound, {"chain_inproc_step33", ["inproc://chainstep33"]}},
         {outbound, {"chain_inproc_step33", ["inproc://chainstep34"]}},
         {inbound, {"chain_inproc_step34", ["inproc://chainstep34"]}},
         {outbound, {"chain_inproc_step34", ["inproc://chainstep35"]}},
         {inbound, {"chain_inproc_step35", ["inproc://chainstep35"]}},
         {outbound, {"chain_inproc_step35", ["inproc://chainstep36"]}},
         {inbound, {"chain_inproc_step36", ["inproc://chainstep36"]}},
         {outbound, {"chain_inproc_step36", ["inproc://chainstep37"]}},
         {inbound, {"chain_inproc_step37", ["inproc://chainstep37"]}},
         {outbound, {"chain_inproc_step37", ["inproc://chainstep38"]}},
         {inbound, {"chain_inproc_step38", ["inproc://chainstep38"]}},
         {outbound, {"chain_inproc_step38", ["inproc://chainstep39"]}},
         {inbound, {"chain_inproc_step39", ["inproc://chainstep39"]}},
         {outbound, {"chain_inproc_step39", ["inproc://chainstep40"]}},
         {inbound, {"chain_inproc_step40", ["inproc://chainstep40"]}},
         {outbound, {"chain_inproc_step40", ["inproc://chainstep41"]}},
         {inbound, {"chain_inproc_step41", ["inproc://chainstep41"]}},
         {outbound, {"chain_inproc_step41", ["inproc://chainstep42"]}},
         {inbound, {"chain_inproc_step42", ["inproc://chainstep42"]}},
         {outbound, {"chain_inproc_step42", ["inproc://chainstep43"]}},
         {inbound, {"chain_inproc_step43", ["inproc://chainstep43"]}},
         {outbound, {"chain_inproc_step43", ["inproc://chainstep44"]}},
         {inbound, {"chain_inproc_step44", ["inproc://chainstep44"]}},
         {outbound, {"chain_inproc_step44", ["inproc://chainstep45"]}},
         {inbound, {"chain_inproc_step45", ["inproc://chainstep45"]}},
         {outbound, {"chain_inproc_step45", ["inproc://chainstep46"]}},
         {inbound, {"chain_inproc_step46", ["inproc://chainstep46"]}},
         {outbound, {"chain_inproc_step46", ["inproc://chainstep47"]}},
         {inbound, {"chain_inproc_step47", ["inproc://chainstep47"]}},
         {outbound, {"chain_inproc_step47", ["inproc://chainstep48"]}},
         {inbound, {"chain_inproc_step48", ["inproc://chainstep48"]}},
         {outbound, {"chain_inproc_step48", ["inproc://chainstep49"]}},
         {inbound, {"chain_inproc_step49", ["inproc://chainstep49"]}},
         {outbound, {"chain_inproc_step49", ["inproc://chainstep50"]}},
         {inbound, {"chain_inproc_finish", ["inproc://chainstep50"]}}],
        immediate_closest,
        5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    % Chain ipc test (25 endpoints in a sequential call path)
    {internal,
        "/tests/zeromq/",
        cloudi_job_zeromq,
        [{outbound, {"chain_ipc_start", ["ipc:///tmp/cloudichainstep1"]}},
         {inbound, {"chain_ipc_step1", ["ipc:///tmp/cloudichainstep1"]}},
         {outbound, {"chain_ipc_step1", ["ipc:///tmp/cloudichainstep2"]}},
         {inbound, {"chain_ipc_step2", ["ipc:///tmp/cloudichainstep2"]}},
         {outbound, {"chain_ipc_step2", ["ipc:///tmp/cloudichainstep3"]}},
         {inbound, {"chain_ipc_step3", ["ipc:///tmp/cloudichainstep3"]}},
         {outbound, {"chain_ipc_step3", ["ipc:///tmp/cloudichainstep4"]}},
         {inbound, {"chain_ipc_step4", ["ipc:///tmp/cloudichainstep4"]}},
         {outbound, {"chain_ipc_step4", ["ipc:///tmp/cloudichainstep5"]}},
         {inbound, {"chain_ipc_step5", ["ipc:///tmp/cloudichainstep5"]}},
         {outbound, {"chain_ipc_step5", ["ipc:///tmp/cloudichainstep6"]}},
         {inbound, {"chain_ipc_step6", ["ipc:///tmp/cloudichainstep6"]}},
         {outbound, {"chain_ipc_step6", ["ipc:///tmp/cloudichainstep7"]}},
         {inbound, {"chain_ipc_step7", ["ipc:///tmp/cloudichainstep7"]}},
         {outbound, {"chain_ipc_step7", ["ipc:///tmp/cloudichainstep8"]}},
         {inbound, {"chain_ipc_step8", ["ipc:///tmp/cloudichainstep8"]}},
         {outbound, {"chain_ipc_step8", ["ipc:///tmp/cloudichainstep9"]}},
         {inbound, {"chain_ipc_step9", ["ipc:///tmp/cloudichainstep9"]}},
         {outbound, {"chain_ipc_step9", ["ipc:///tmp/cloudichainstep10"]}},
         {inbound, {"chain_ipc_step10", ["ipc:///tmp/cloudichainstep10"]}},
         {outbound, {"chain_ipc_step10", ["ipc:///tmp/cloudichainstep11"]}},
         {inbound, {"chain_ipc_step11", ["ipc:///tmp/cloudichainstep11"]}},
         {outbound, {"chain_ipc_step11", ["ipc:///tmp/cloudichainstep12"]}},
         {inbound, {"chain_ipc_step12", ["ipc:///tmp/cloudichainstep12"]}},
         {outbound, {"chain_ipc_step12", ["ipc:///tmp/cloudichainstep13"]}},
         {inbound, {"chain_ipc_step13", ["ipc:///tmp/cloudichainstep13"]}},
         {outbound, {"chain_ipc_step13", ["ipc:///tmp/cloudichainstep14"]}},
         {inbound, {"chain_ipc_step14", ["ipc:///tmp/cloudichainstep14"]}},
         {outbound, {"chain_ipc_step14", ["ipc:///tmp/cloudichainstep15"]}},
         {inbound, {"chain_ipc_step15", ["ipc:///tmp/cloudichainstep15"]}},
         {outbound, {"chain_ipc_step15", ["ipc:///tmp/cloudichainstep16"]}},
         {inbound, {"chain_ipc_step16", ["ipc:///tmp/cloudichainstep16"]}},
         {outbound, {"chain_ipc_step16", ["ipc:///tmp/cloudichainstep17"]}},
         {inbound, {"chain_ipc_step17", ["ipc:///tmp/cloudichainstep17"]}},
         {outbound, {"chain_ipc_step17", ["ipc:///tmp/cloudichainstep18"]}},
         {inbound, {"chain_ipc_step18", ["ipc:///tmp/cloudichainstep18"]}},
         {outbound, {"chain_ipc_step18", ["ipc:///tmp/cloudichainstep19"]}},
         {inbound, {"chain_ipc_step19", ["ipc:///tmp/cloudichainstep19"]}},
         {outbound, {"chain_ipc_step19", ["ipc:///tmp/cloudichainstep20"]}},
         {inbound, {"chain_ipc_step20", ["ipc:///tmp/cloudichainstep20"]}},
         {outbound, {"chain_ipc_step20", ["ipc:///tmp/cloudichainstep21"]}},
         {inbound, {"chain_ipc_step21", ["ipc:///tmp/cloudichainstep21"]}},
         {outbound, {"chain_ipc_step21", ["ipc:///tmp/cloudichainstep22"]}},
         {inbound, {"chain_ipc_step22", ["ipc:///tmp/cloudichainstep22"]}},
         {outbound, {"chain_ipc_step22", ["ipc:///tmp/cloudichainstep23"]}},
         {inbound, {"chain_ipc_step23", ["ipc:///tmp/cloudichainstep23"]}},
         {outbound, {"chain_ipc_step23", ["ipc:///tmp/cloudichainstep24"]}},
         {inbound, {"chain_ipc_step24", ["ipc:///tmp/cloudichainstep24"]}},
         {outbound, {"chain_ipc_step24", ["ipc:///tmp/cloudichainstep25"]}},
         {inbound, {"chain_ipc_finish", ["ipc:///tmp/cloudichainstep25"]}}],
        immediate_closest,
        5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    {external,
        "/tests/zeromq/",
        "@PYTHON@",
        "tests/zeromq/run.py",
        [],
        immediate_closest, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 4, 5, 300, []},
    {internal,
        "/tests/msg_size/",
        cloudi_job_msg_size,
        [],
        immediate_closest,
        5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    {external,
        "/tests/msg_size/",
        "tests/msg_size/priv/msg_size",
        "",
        [{"LD_LIBRARY_PATH", "api/c/lib/"},
         {"DYLD_LIBRARY_PATH", "api/c/lib/"}],
        immediate_closest, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 2, 1, 5, 300, []},
    {external,
        "/tests/msg_size/",
        "@JAVA@",
        "-jar tests/msg_size/jar/msg_size.jar", [],
        immediate_closest, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/msg_size/",
        "@PYTHON@",
        "tests/msg_size/msg_size.py",
        [],
        immediate_closest, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/msg_size/",
        "@RUBY@",
        "tests/msg_size/msg_size.rb", [],
        immediate_closest, tcp, 16384,
        5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    {external,
        "/tests/messaging/",
        "@PYTHON@",
        "tests/messaging/messaging.py",
        [],
        immediate_closest, tcp, 16384,
        5000, 10000, 10000, [api], undefined, 1, 4, 5, 300, []}
    %,
    % Flood tests configuration to generate 2K requests/second internally
    %{external,
    %    "/tests/flood/",
    %    "@PYTHON@",
    %    "tests/flood/service/flood.py",
    %    [],
    %    none, tcp, 16384,
    %    5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    %{external,
    %    "/tests/flood/",
    %    "@JAVA@",
    %    "-jar tests/flood/service/jar/flood.jar", [],
    %    none, tcp, 16384,
    %    5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    %{external,
    %    "/tests/flood/",
    %    "@RUBY@",
    %    "tests/flood/service/flood.rb", [],
    %    none, tcp, 16384,
    %    5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    %{external,
    %    "/tests/flood/",
    %    "tests/flood/service/flood", "",
    %    [{"LD_LIBRARY_PATH", "api/c/lib/"},
    %     {"DYLD_LIBRARY_PATH", "api/c/lib/"}],
    %    none, tcp, 16384,
    %    5000, 5000, 5000, [api], undefined, 1, 1, 5, 300, []},
    %{internal,
    %    "/tests/flood/",
    %    cloudi_job_flood,
    %    [{flood, "/tests/flood/does_not_exist", <<"DATA">>, 1000}],
    %    lazy_closest,
    %    5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    %{internal,
    %    "/tests/flood/",
    %    cloudi_job_flood,
    %    [{flood, "/tests/flood/c", <<"DATA">>, 1000}],
    %    lazy_closest,
    %    5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    %{internal,
    %    "/tests/flood/",
    %    cloudi_job_flood,
    %    [{flood, "/tests/flood/java", <<"DATA">>, 1000}],
    %    lazy_closest,
    %    5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    %{internal,
    %    "/tests/flood/",
    %    cloudi_job_flood,
    %    [{flood, "/tests/flood/python", <<"DATA">>, 1000}],
    %    lazy_closest,
    %    5000, 5000, 5000, [api], undefined, 2, 5, 300, []},
    %{internal,
    %    "/tests/flood/",
    %    cloudi_job_flood,
    %    [{flood, "/tests/flood/ruby", <<"DATA">>, 1000}],
    %    lazy_closest,
    %    5000, 5000, 5000, [api], undefined, 2, 5, 300, []}
]}.
{nodes, [
    'cloudi@host1',
    'cloudi@host2'
]}.
{logging, [
    {level, trace}, % levels: off, fatal, error, warn, info, debug, trace
    {redirect, undefined}
]}.

