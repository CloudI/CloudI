%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Jun 24 12:23:54 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 24 12:23:54 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 6400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1143 M
6052 0 V
stroke
LTb
938 1143 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1839 M
6052 0 V
stroke
LTb
938 1839 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2534 M
6052 0 V
stroke
LTb
938 2534 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3229 M
6052 0 V
stroke
LTb
938 3229 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3925 M
6052 0 V
stroke
LTb
938 3925 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4620 M
6052 0 V
stroke
LTb
938 4620 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4172 V
stroke
LTb
938 448 M
0 63 V
0 4109 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1803 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1803 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2667 448 M
0 4172 V
stroke
LTb
2667 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3532 448 M
0 4172 V
stroke
LTb
3532 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4396 448 M
0 4172 V
stroke
LTb
4396 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5261 448 M
0 4172 V
stroke
LTb
5261 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6125 448 M
0 4172 V
stroke
LTb
6125 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(unit = sec ) Cshow
LTb
3964 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1946 4487 M
(freemem@mc1) Rshow
LT0
2030 4487 M
399 0 V
955 4440 M
18 -51 V
17 -94 V
17 -46 V
17 -50 V
18 -59 V
17 -53 V
17 -55 V
18 -57 V
17 -62 V
17 -47 V
17 -41 V
18 -47 V
17 -51 V
17 -46 V
18 -67 V
17 -91 V
17 -73 V
18 -64 V
17 -34 V
17 -66 V
17 -34 V
18 -53 V
17 -43 V
17 -43 V
18 -44 V
17 -75 V
17 -75 V
17 -90 V
18 3 V
17 -90 V
17 -39 V
18 -28 V
17 17 V
17 -77 V
17 -60 V
18 -107 V
17 -22 V
17 -126 V
18 -40 V
17 -41 V
17 -55 V
18 -91 V
17 -101 V
17 26 V
17 -124 V
18 -41 V
17 15 V
17 -58 V
18 -28 V
17 -131 V
17 -99 V
17 -88 V
18 -5 V
17 38 V
17 -102 V
18 -136 V
17 -111 V
17 -8 V
17 -64 V
18 -140 V
17 69 V
17 103 V
18 -59 V
17 -77 V
17 29 V
18 -24 V
17 48 V
17 92 V
17 -131 V
18 50 V
17 -44 V
17 66 V
18 -15 V
17 -54 V
17 26 V
17 -114 V
18 96 V
17 -69 V
17 96 V
18 55 V
17 -207 V
17 24 V
17 106 V
18 -36 V
17 21 V
17 -30 V
18 65 V
17 -46 V
17 89 V
18 -52 V
17 -143 V
17 90 V
17 35 V
18 -100 V
17 52 V
17 91 V
18 16 V
17 -48 V
17 -40 V
17 -48 V
18 95 V
17 36 V
stroke 2719 1029 M
17 -61 V
18 -40 V
17 55 V
17 -29 V
17 160 V
18 -85 V
17 -8 V
17 -47 V
18 100 V
17 -148 V
17 47 V
18 73 V
17 -85 V
17 8 V
17 -75 V
18 54 V
17 26 V
17 -53 V
18 94 V
17 -139 V
17 159 V
17 4 V
18 -90 V
17 101 V
17 -136 V
18 93 V
17 -11 V
17 12 V
17 0 V
18 13 V
17 -43 V
17 -155 V
18 221 V
17 -38 V
17 -48 V
18 52 V
17 -46 V
17 -44 V
17 62 V
18 -19 V
17 4 V
17 -3 V
18 5 V
17 -72 V
17 119 V
17 -33 V
18 2 V
17 -53 V
17 -15 V
18 46 V
17 -9 V
17 29 V
17 -13 V
18 -24 V
17 -1 V
17 -3 V
18 7 V
17 85 V
17 -47 V
18 44 V
17 -121 V
17 110 V
17 58 V
18 -28 V
17 -15 V
17 -90 V
18 80 V
17 79 V
17 -152 V
17 35 V
18 29 V
17 -37 V
17 -107 V
18 176 V
17 31 V
17 -154 V
17 27 V
18 20 V
17 -11 V
17 73 V
18 -1 V
17 -77 V
17 13 V
17 78 V
18 -85 V
17 127 V
17 -40 V
18 -25 V
17 33 V
17 -152 V
18 13 V
17 -33 V
17 117 V
17 86 V
18 -129 V
17 45 V
17 -146 V
18 72 V
17 -32 V
17 192 V
17 -23 V
18 -55 V
17 -44 V
17 19 V
stroke 4517 987 M
18 19 V
17 -51 V
17 3 V
17 106 V
18 -70 V
17 -48 V
17 -3 V
18 137 V
17 -47 V
17 -26 V
18 73 V
17 -128 V
17 -113 V
17 62 V
18 94 V
17 4 V
17 -20 V
18 66 V
17 -29 V
17 138 V
17 -284 V
18 144 V
17 80 V
17 -198 V
18 116 V
17 -261 V
17 208 V
17 57 V
18 10 V
17 -24 V
17 0 V
18 -20 V
17 -17 V
17 134 V
18 -31 V
17 -97 V
17 53 V
17 -93 V
18 37 V
17 -17 V
17 51 V
18 55 V
17 -38 V
17 -108 V
17 67 V
18 39 V
17 -69 V
17 -149 V
18 326 V
17 -95 V
17 50 V
17 -97 V
18 29 V
17 49 V
17 21 V
18 33 V
17 -48 V
17 -41 V
18 189 V
17 -159 V
17 0 V
17 120 V
18 -54 V
17 70 V
17 -1 V
18 22 V
17 -27 V
17 -21 V
17 62 V
18 -107 V
17 75 V
17 30 V
18 -162 V
17 133 V
17 -2 V
17 11 V
18 27 V
17 9 V
17 -13 V
18 -28 V
17 100 V
17 -7 V
18 -13 V
17 -5 V
17 46 V
17 -47 V
18 39 V
17 40 V
17 -4 V
18 35 V
17 -22 V
17 -17 V
17 -26 V
18 74 V
17 3 V
17 43 V
18 -42 V
17 34 V
17 1 V
17 -19 V
18 78 V
17 18 V
17 -16 V
18 48 V
stroke 6316 1541 M
17 -6 V
17 6 V
18 45 V
17 54 V
17 33 V
17 21 V
18 34 V
17 18 V
17 16 V
18 14 V
17 36 V
17 21 V
17 57 V
18 24 V
17 86 V
17 172 V
18 398 V
17 509 V
17 507 V
17 292 V
18 168 V
17 59 V
17 7 V
18 41 V
955 4440 Pls
973 4389 Pls
990 4295 Pls
1007 4249 Pls
1024 4199 Pls
1042 4140 Pls
1059 4087 Pls
1076 4032 Pls
1094 3975 Pls
1111 3913 Pls
1128 3866 Pls
1145 3825 Pls
1163 3778 Pls
1180 3727 Pls
1197 3681 Pls
1215 3614 Pls
1232 3523 Pls
1249 3450 Pls
1267 3386 Pls
1284 3352 Pls
1301 3286 Pls
1318 3252 Pls
1336 3199 Pls
1353 3156 Pls
1370 3113 Pls
1388 3069 Pls
1405 2994 Pls
1422 2919 Pls
1439 2829 Pls
1457 2832 Pls
1474 2742 Pls
1491 2703 Pls
1509 2675 Pls
1526 2692 Pls
1543 2615 Pls
1560 2555 Pls
1578 2448 Pls
1595 2426 Pls
1612 2300 Pls
1630 2260 Pls
1647 2219 Pls
1664 2164 Pls
1682 2073 Pls
1699 1972 Pls
1716 1998 Pls
1733 1874 Pls
1751 1833 Pls
1768 1848 Pls
1785 1790 Pls
1803 1762 Pls
1820 1631 Pls
1837 1532 Pls
1854 1444 Pls
1872 1439 Pls
1889 1477 Pls
1906 1375 Pls
1924 1239 Pls
1941 1128 Pls
1958 1120 Pls
1975 1056 Pls
1993 916 Pls
2010 985 Pls
2027 1088 Pls
2045 1029 Pls
2062 952 Pls
2079 981 Pls
2097 957 Pls
2114 1005 Pls
2131 1097 Pls
2148 966 Pls
2166 1016 Pls
2183 972 Pls
2200 1038 Pls
2218 1023 Pls
2235 969 Pls
2252 995 Pls
2269 881 Pls
2287 977 Pls
2304 908 Pls
2321 1004 Pls
2339 1059 Pls
2356 852 Pls
2373 876 Pls
2390 982 Pls
2408 946 Pls
2425 967 Pls
2442 937 Pls
2460 1002 Pls
2477 956 Pls
2494 1045 Pls
2512 993 Pls
2529 850 Pls
2546 940 Pls
2563 975 Pls
2581 875 Pls
2598 927 Pls
2615 1018 Pls
2633 1034 Pls
2650 986 Pls
2667 946 Pls
2684 898 Pls
2702 993 Pls
2719 1029 Pls
2736 968 Pls
2754 928 Pls
2771 983 Pls
2788 954 Pls
2805 1114 Pls
2823 1029 Pls
2840 1021 Pls
2857 974 Pls
2875 1074 Pls
2892 926 Pls
2909 973 Pls
2927 1046 Pls
2944 961 Pls
2961 969 Pls
2978 894 Pls
2996 948 Pls
3013 974 Pls
3030 921 Pls
3048 1015 Pls
3065 876 Pls
3082 1035 Pls
3099 1039 Pls
3117 949 Pls
3134 1050 Pls
3151 914 Pls
3169 1007 Pls
3186 996 Pls
3203 1008 Pls
3220 1008 Pls
3238 1021 Pls
3255 978 Pls
3272 823 Pls
3290 1044 Pls
3307 1006 Pls
3324 958 Pls
3342 1010 Pls
3359 964 Pls
3376 920 Pls
3393 982 Pls
3411 963 Pls
3428 967 Pls
3445 964 Pls
3463 969 Pls
3480 897 Pls
3497 1016 Pls
3514 983 Pls
3532 985 Pls
3549 932 Pls
3566 917 Pls
3584 963 Pls
3601 954 Pls
3618 983 Pls
3635 970 Pls
3653 946 Pls
3670 945 Pls
3687 942 Pls
3705 949 Pls
3722 1034 Pls
3739 987 Pls
3757 1031 Pls
3774 910 Pls
3791 1020 Pls
3808 1078 Pls
3826 1050 Pls
3843 1035 Pls
3860 945 Pls
3878 1025 Pls
3895 1104 Pls
3912 952 Pls
3929 987 Pls
3947 1016 Pls
3964 979 Pls
3981 872 Pls
3999 1048 Pls
4016 1079 Pls
4033 925 Pls
4050 952 Pls
4068 972 Pls
4085 961 Pls
4102 1034 Pls
4120 1033 Pls
4137 956 Pls
4154 969 Pls
4171 1047 Pls
4189 962 Pls
4206 1089 Pls
4223 1049 Pls
4241 1024 Pls
4258 1057 Pls
4275 905 Pls
4293 918 Pls
4310 885 Pls
4327 1002 Pls
4344 1088 Pls
4362 959 Pls
4379 1004 Pls
4396 858 Pls
4414 930 Pls
4431 898 Pls
4448 1090 Pls
4465 1067 Pls
4483 1012 Pls
4500 968 Pls
4517 987 Pls
4535 1006 Pls
4552 955 Pls
4569 958 Pls
4586 1064 Pls
4604 994 Pls
4621 946 Pls
4638 943 Pls
4656 1080 Pls
4673 1033 Pls
4690 1007 Pls
4708 1080 Pls
4725 952 Pls
4742 839 Pls
4759 901 Pls
4777 995 Pls
4794 999 Pls
4811 979 Pls
4829 1045 Pls
4846 1016 Pls
4863 1154 Pls
4880 870 Pls
4898 1014 Pls
4915 1094 Pls
4932 896 Pls
4950 1012 Pls
4967 751 Pls
4984 959 Pls
5001 1016 Pls
5019 1026 Pls
5036 1002 Pls
5053 1002 Pls
5071 982 Pls
5088 965 Pls
5105 1099 Pls
5123 1068 Pls
5140 971 Pls
5157 1024 Pls
5174 931 Pls
5192 968 Pls
5209 951 Pls
5226 1002 Pls
5244 1057 Pls
5261 1019 Pls
5278 911 Pls
5295 978 Pls
5313 1017 Pls
5330 948 Pls
5347 799 Pls
5365 1125 Pls
5382 1030 Pls
5399 1080 Pls
5416 983 Pls
5434 1012 Pls
5451 1061 Pls
5468 1082 Pls
5486 1115 Pls
5503 1067 Pls
5520 1026 Pls
5538 1215 Pls
5555 1056 Pls
5572 1056 Pls
5589 1176 Pls
5607 1122 Pls
5624 1192 Pls
5641 1191 Pls
5659 1213 Pls
5676 1186 Pls
5693 1165 Pls
5710 1227 Pls
5728 1120 Pls
5745 1195 Pls
5762 1225 Pls
5780 1063 Pls
5797 1196 Pls
5814 1194 Pls
5831 1205 Pls
5849 1232 Pls
5866 1241 Pls
5883 1228 Pls
5901 1200 Pls
5918 1300 Pls
5935 1293 Pls
5953 1280 Pls
5970 1275 Pls
5987 1321 Pls
6004 1274 Pls
6022 1313 Pls
6039 1353 Pls
6056 1349 Pls
6074 1384 Pls
6091 1362 Pls
6108 1345 Pls
6125 1319 Pls
6143 1393 Pls
6160 1396 Pls
6177 1439 Pls
6195 1397 Pls
6212 1431 Pls
6229 1432 Pls
6246 1413 Pls
6264 1491 Pls
6281 1509 Pls
6298 1493 Pls
6316 1541 Pls
6333 1535 Pls
6350 1541 Pls
6368 1586 Pls
6385 1640 Pls
6402 1673 Pls
6419 1694 Pls
6437 1728 Pls
6454 1746 Pls
6471 1762 Pls
6489 1776 Pls
6506 1812 Pls
6523 1833 Pls
6540 1890 Pls
6558 1914 Pls
6575 2000 Pls
6592 2172 Pls
6610 2570 Pls
6627 3079 Pls
6644 3586 Pls
6661 3878 Pls
6679 4046 Pls
6696 4105 Pls
6713 4112 Pls
6731 4153 Pls
2229 4487 Pls
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
