%!PS-Adobe-2.0
%%Title: images/graphes-load-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Oct 26 23:01:54 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Oct 26 23:01:54 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6304 0 V
stroke
LTb
686 448 M
63 0 V
6241 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1143 M
6304 0 V
stroke
LTb
686 1143 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1839 M
6304 0 V
stroke
LTb
686 1839 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2534 M
6304 0 V
stroke
LTb
686 2534 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 3) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3229 M
6304 0 V
stroke
LTb
686 3229 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3925 M
6304 0 V
stroke
LTb
686 3925 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4620 M
6304 0 V
stroke
LTb
686 4620 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4172 V
stroke
LTb
686 448 M
0 63 V
0 4109 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1947 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3208 448 M
0 4172 V
stroke
LTb
3208 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 448 M
0 4172 V
stroke
LTb
4468 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5729 448 M
0 4172 V
stroke
LTb
5729 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3838 98 M
(unit = sec ) Cshow
LTb
3838 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1442 4487 M
(load@mc1) Rshow
LT0
1526 4487 M
399 0 V
711 448 M
25 0 V
26 0 V
25 152 V
25 141 V
25 14 V
26 201 V
25 133 V
25 117 V
25 258 V
25 223 V
26 -36 V
25 133 V
25 117 V
25 -22 V
25 -13 V
26 258 V
25 646 V
25 549 V
25 -187 V
26 342 V
25 -49 V
25 98 V
25 157 V
25 299 V
26 -5 V
25 -383 V
25 -117 V
25 -30 V
25 -304 V
26 19 V
25 334 V
25 -139 V
25 -179 V
26 -35 V
25 -93 V
25 454 V
25 334 V
25 388 V
26 -54 V
25 27 V
25 223 V
25 -92 V
26 97 V
25 -116 V
25 -383 V
25 277 V
25 62 V
26 -366 V
25 40 V
25 63 V
25 106 V
25 -30 V
26 -285 V
25 35 V
25 -98 V
25 133 V
26 223 V
25 14 V
25 298 V
25 -21 V
25 35 V
26 -446 V
25 49 V
25 -54 V
25 320 V
25 14 V
26 0 V
25 -223 V
25 -13 V
25 138 V
26 166 V
25 49 V
25 -139 V
25 -89 V
25 -76 V
26 -36 V
25 -92 V
25 -46 V
25 -120 V
25 340 V
26 -131 V
25 -84 V
25 201 V
25 -40 V
26 76 V
25 -411 V
25 120 V
25 160 V
25 -342 V
26 -27 V
25 304 V
25 8 V
25 201 V
26 231 V
25 -299 V
25 27 V
25 125 V
25 -374 V
26 334 V
25 -93 V
25 120 V
25 214 V
stroke 3283 4473 M
25 -402 V
26 -173 V
25 -321 V
25 14 V
25 312 V
26 76 V
25 204 V
25 -196 V
25 258 V
25 -13 V
26 -204 V
25 -389 V
25 85 V
25 27 V
25 -125 V
26 -71 V
25 209 V
25 -89 V
25 -334 V
26 -231 V
25 396 V
25 0 V
25 231 V
25 -201 V
26 76 V
25 -271 V
25 -27 V
25 48 V
26 -78 V
25 57 V
25 244 V
25 269 V
25 -138 V
26 -397 V
25 57 V
25 250 V
25 424 V
25 84 V
26 125 V
25 -370 V
25 -201 V
25 -285 V
26 258 V
25 304 V
25 98 V
25 120 V
25 -258 V
26 -209 V
25 43 V
25 -293 V
25 27 V
25 280 V
26 -299 V
25 -204 V
25 361 V
25 204 V
26 54 V
25 22 V
25 -320 V
25 -215 V
25 397 V
26 -142 V
25 -125 V
25 -152 V
25 27 V
26 120 V
25 277 V
25 -76 V
25 307 V
25 263 V
26 -62 V
25 62 V
25 -62 V
25 -103 V
25 -348 V
26 -22 V
25 -13 V
25 -120 V
25 155 V
26 -43 V
25 -85 V
25 -46 V
25 158 V
25 -237 V
26 -152 V
25 76 V
25 8 V
25 63 V
25 117 V
26 35 V
25 -277 V
25 299 V
25 49 V
26 81 V
25 174 V
25 98 V
25 -237 V
25 120 V
26 258 V
25 -57 V
25 -187 V
25 138 V
25 139 V
26 -6 V
stroke 5906 4245 M
25 -369 V
25 -90 V
711 448 Pls
736 448 Pls
762 448 Pls
787 600 Pls
812 741 Pls
837 755 Pls
863 956 Pls
888 1089 Pls
913 1206 Pls
938 1464 Pls
963 1687 Pls
989 1651 Pls
1014 1784 Pls
1039 1901 Pls
1064 1879 Pls
1089 1866 Pls
1115 2124 Pls
1140 2770 Pls
1165 3319 Pls
1190 3132 Pls
1216 3474 Pls
1241 3425 Pls
1266 3523 Pls
1291 3680 Pls
1316 3979 Pls
1342 3974 Pls
1367 3591 Pls
1392 3474 Pls
1417 3444 Pls
1442 3140 Pls
1468 3159 Pls
1493 3493 Pls
1518 3354 Pls
1543 3175 Pls
1569 3140 Pls
1594 3047 Pls
1619 3501 Pls
1644 3835 Pls
1669 4223 Pls
1695 4169 Pls
1720 4196 Pls
1745 4419 Pls
1770 4327 Pls
1796 4424 Pls
1821 4308 Pls
1846 3925 Pls
1871 4202 Pls
1896 4264 Pls
1922 3898 Pls
1947 3938 Pls
1972 4001 Pls
1997 4107 Pls
2022 4077 Pls
2048 3792 Pls
2073 3827 Pls
2098 3729 Pls
2123 3862 Pls
2149 4085 Pls
2174 4099 Pls
2199 4397 Pls
2224 4376 Pls
2249 4411 Pls
2275 3965 Pls
2300 4014 Pls
2325 3960 Pls
2350 4280 Pls
2375 4294 Pls
2401 4294 Pls
2426 4071 Pls
2451 4058 Pls
2476 4196 Pls
2502 4362 Pls
2527 4411 Pls
2552 4272 Pls
2577 4183 Pls
2602 4107 Pls
2628 4071 Pls
2653 3979 Pls
2678 3933 Pls
2703 3813 Pls
2728 4153 Pls
2754 4022 Pls
2779 3938 Pls
2804 4139 Pls
2829 4099 Pls
2855 4175 Pls
2880 3764 Pls
2905 3884 Pls
2930 4044 Pls
2955 3702 Pls
2981 3675 Pls
3006 3979 Pls
3031 3987 Pls
3056 4188 Pls
3082 4419 Pls
3107 4120 Pls
3132 4147 Pls
3157 4272 Pls
3182 3898 Pls
3208 4232 Pls
3233 4139 Pls
3258 4259 Pls
3283 4473 Pls
3308 4071 Pls
3334 3898 Pls
3359 3577 Pls
3384 3591 Pls
3409 3903 Pls
3435 3979 Pls
3460 4183 Pls
3485 3987 Pls
3510 4245 Pls
3535 4232 Pls
3561 4028 Pls
3586 3639 Pls
3611 3724 Pls
3636 3751 Pls
3661 3626 Pls
3687 3555 Pls
3712 3764 Pls
3737 3675 Pls
3762 3341 Pls
3788 3110 Pls
3813 3506 Pls
3838 3506 Pls
3863 3737 Pls
3888 3536 Pls
3914 3612 Pls
3939 3341 Pls
3964 3314 Pls
3989 3362 Pls
4015 3284 Pls
4040 3341 Pls
4065 3585 Pls
4090 3854 Pls
4115 3716 Pls
4141 3319 Pls
4166 3376 Pls
4191 3626 Pls
4216 4050 Pls
4241 4134 Pls
4267 4259 Pls
4292 3889 Pls
4317 3688 Pls
4342 3403 Pls
4368 3661 Pls
4393 3965 Pls
4418 4063 Pls
4443 4183 Pls
4468 3925 Pls
4494 3716 Pls
4519 3759 Pls
4544 3466 Pls
4569 3493 Pls
4594 3773 Pls
4620 3474 Pls
4645 3270 Pls
4670 3631 Pls
4695 3835 Pls
4721 3889 Pls
4746 3911 Pls
4771 3591 Pls
4796 3376 Pls
4821 3773 Pls
4847 3631 Pls
4872 3506 Pls
4897 3354 Pls
4922 3381 Pls
4948 3501 Pls
4973 3778 Pls
4998 3702 Pls
5023 4009 Pls
5048 4272 Pls
5074 4210 Pls
5099 4272 Pls
5124 4210 Pls
5149 4107 Pls
5174 3759 Pls
5200 3737 Pls
5225 3724 Pls
5250 3604 Pls
5275 3759 Pls
5301 3716 Pls
5326 3631 Pls
5351 3585 Pls
5376 3743 Pls
5401 3506 Pls
5427 3354 Pls
5452 3430 Pls
5477 3438 Pls
5502 3501 Pls
5527 3618 Pls
5553 3653 Pls
5578 3376 Pls
5603 3675 Pls
5628 3724 Pls
5654 3805 Pls
5679 3979 Pls
5704 4077 Pls
5729 3840 Pls
5754 3960 Pls
5780 4218 Pls
5805 4161 Pls
5830 3974 Pls
5855 4112 Pls
5880 4251 Pls
5906 4245 Pls
5931 3876 Pls
5956 3786 Pls
1725 4487 Pls
1.000 UL
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
