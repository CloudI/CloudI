%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 00:37:33 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 00:37:33 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
770 448 M
6220 0 V
stroke
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 912 M
6220 0 V
stroke
LTb
770 912 M
63 0 V
6157 0 R
-63 0 V
686 912 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1375 M
6220 0 V
stroke
LTb
770 1375 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1839 M
6220 0 V
stroke
LTb
770 1839 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2302 M
6220 0 V
stroke
LTb
770 2302 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2766 M
6220 0 V
stroke
LTb
770 2766 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3229 M
6220 0 V
stroke
LTb
770 3229 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3693 M
6220 0 V
stroke
LTb
770 3693 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4156 M
6220 0 V
stroke
LTb
770 4156 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4620 M
6220 0 V
stroke
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 90) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 4172 V
stroke
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
770 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2325 448 M
0 4172 V
stroke
LTb
2325 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3880 448 M
0 4172 V
stroke
LTb
3880 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5435 448 M
0 4172 V
stroke
LTb
5435 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3880 98 M
(unit = sec ) Cshow
LTb
3880 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1442 4487 M
(cpu@mc1) Rshow
LT0
1526 4487 M
399 0 V
770 639 M
801 487 L
31 110 V
31 128 V
31 107 V
31 146 V
32 66 V
31 65 V
31 60 V
31 24 V
31 91 V
31 -4 V
31 84 V
31 70 V
31 287 V
31 101 V
32 189 V
31 -56 V
31 203 V
31 -153 V
31 212 V
31 -4 V
31 78 V
31 60 V
31 158 V
31 133 V
32 23 V
31 40 V
31 74 V
31 -1 V
31 72 V
31 -16 V
31 100 V
31 20 V
31 45 V
31 -23 V
32 121 V
31 -16 V
31 50 V
31 6 V
31 48 V
31 67 V
31 21 V
31 63 V
31 49 V
31 24 V
32 70 V
31 24 V
31 61 V
31 39 V
31 18 V
31 62 V
31 16 V
31 69 V
31 -9 V
31 61 V
32 61 V
31 79 V
31 65 V
31 70 V
31 59 V
31 37 V
31 -40 V
31 10 V
31 -31 V
31 51 V
32 -51 V
31 -57 V
31 53 V
31 -1 V
31 64 V
31 7 V
31 -7 V
31 -43 V
31 -5 V
31 -38 V
32 58 V
31 -4 V
31 0 V
31 11 V
31 -44 V
31 55 V
31 1 V
31 -30 V
31 34 V
31 28 V
32 -28 V
31 20 V
31 -2 V
31 -58 V
31 34 V
31 -2 V
31 25 V
31 -14 V
31 -10 V
31 0 V
32 35 V
31 -35 V
31 49 V
31 10 V
31 -4 V
31 -43 V
31 39 V
31 -54 V
31 -12 V
31 40 V
stroke 4035 4202 M
32 42 V
31 10 V
31 -84 V
31 33 V
31 4 V
31 5 V
31 -30 V
31 50 V
31 7 V
31 -48 V
32 -11 V
31 50 V
31 -16 V
31 46 V
31 17 V
31 -40 V
31 17 V
31 5 V
31 -28 V
31 -66 V
32 -3 V
31 -75 V
31 -55 V
31 -8 V
31 -60 V
31 -19 V
31 -64 V
31 -41 V
31 -77 V
31 -29 V
32 -64 V
31 -23 V
31 -54 V
31 -62 V
31 -57 V
31 -36 V
31 -77 V
31 -26 V
31 -46 V
31 -42 V
32 -23 V
31 -89 V
31 -12 V
31 -61 V
31 6 V
31 -66 V
31 -30 V
31 -30 V
31 -87 V
31 -23 V
32 -48 V
31 -30 V
31 -102 V
31 71 V
31 -198 V
31 96 V
31 -125 V
31 7 V
31 -36 V
31 -76 V
32 23 V
31 -117 V
31 14 V
31 -72 V
31 65 V
31 -34 V
31 150 V
31 48 V
31 152 V
31 -45 V
32 68 V
31 -223 V
31 -195 V
31 -228 V
31 -459 V
31 -265 V
31 -263 V
31 -54 V
31 -176 V
31 -6 V
32 -120 V
31 19 V
31 -88 V
31 -5 V
31 -30 V
31 -19 V
31 -3 V
31 -16 V
31 -4 V
31 -9 V
32 5 V
31 -4 V
31 -2 V
31 -5 V
31 1 V
770 639 Pls
801 487 Pls
832 597 Pls
863 725 Pls
894 832 Pls
925 978 Pls
957 1044 Pls
988 1109 Pls
1019 1169 Pls
1050 1193 Pls
1081 1284 Pls
1112 1280 Pls
1143 1364 Pls
1174 1434 Pls
1205 1721 Pls
1236 1822 Pls
1268 2011 Pls
1299 1955 Pls
1330 2158 Pls
1361 2005 Pls
1392 2217 Pls
1423 2213 Pls
1454 2291 Pls
1485 2351 Pls
1516 2509 Pls
1547 2642 Pls
1579 2665 Pls
1610 2705 Pls
1641 2779 Pls
1672 2778 Pls
1703 2850 Pls
1734 2834 Pls
1765 2934 Pls
1796 2954 Pls
1827 2999 Pls
1858 2976 Pls
1890 3097 Pls
1921 3081 Pls
1952 3131 Pls
1983 3137 Pls
2014 3185 Pls
2045 3252 Pls
2076 3273 Pls
2107 3336 Pls
2138 3385 Pls
2169 3409 Pls
2201 3479 Pls
2232 3503 Pls
2263 3564 Pls
2294 3603 Pls
2325 3621 Pls
2356 3683 Pls
2387 3699 Pls
2418 3768 Pls
2449 3759 Pls
2480 3820 Pls
2512 3881 Pls
2543 3960 Pls
2574 4025 Pls
2605 4095 Pls
2636 4154 Pls
2667 4191 Pls
2698 4151 Pls
2729 4161 Pls
2760 4130 Pls
2791 4181 Pls
2823 4130 Pls
2854 4073 Pls
2885 4126 Pls
2916 4125 Pls
2947 4189 Pls
2978 4196 Pls
3009 4189 Pls
3040 4146 Pls
3071 4141 Pls
3102 4103 Pls
3134 4161 Pls
3165 4157 Pls
3196 4157 Pls
3227 4168 Pls
3258 4124 Pls
3289 4179 Pls
3320 4180 Pls
3351 4150 Pls
3382 4184 Pls
3413 4212 Pls
3445 4184 Pls
3476 4204 Pls
3507 4202 Pls
3538 4144 Pls
3569 4178 Pls
3600 4176 Pls
3631 4201 Pls
3662 4187 Pls
3693 4177 Pls
3724 4177 Pls
3756 4212 Pls
3787 4177 Pls
3818 4226 Pls
3849 4236 Pls
3880 4232 Pls
3911 4189 Pls
3942 4228 Pls
3973 4174 Pls
4004 4162 Pls
4035 4202 Pls
4067 4244 Pls
4098 4254 Pls
4129 4170 Pls
4160 4203 Pls
4191 4207 Pls
4222 4212 Pls
4253 4182 Pls
4284 4232 Pls
4315 4239 Pls
4346 4191 Pls
4378 4180 Pls
4409 4230 Pls
4440 4214 Pls
4471 4260 Pls
4502 4277 Pls
4533 4237 Pls
4564 4254 Pls
4595 4259 Pls
4626 4231 Pls
4657 4165 Pls
4689 4162 Pls
4720 4087 Pls
4751 4032 Pls
4782 4024 Pls
4813 3964 Pls
4844 3945 Pls
4875 3881 Pls
4906 3840 Pls
4937 3763 Pls
4968 3734 Pls
5000 3670 Pls
5031 3647 Pls
5062 3593 Pls
5093 3531 Pls
5124 3474 Pls
5155 3438 Pls
5186 3361 Pls
5217 3335 Pls
5248 3289 Pls
5279 3247 Pls
5311 3224 Pls
5342 3135 Pls
5373 3123 Pls
5404 3062 Pls
5435 3068 Pls
5466 3002 Pls
5497 2972 Pls
5528 2942 Pls
5559 2855 Pls
5590 2832 Pls
5622 2784 Pls
5653 2754 Pls
5684 2652 Pls
5715 2723 Pls
5746 2525 Pls
5777 2621 Pls
5808 2496 Pls
5839 2503 Pls
5870 2467 Pls
5901 2391 Pls
5933 2414 Pls
5964 2297 Pls
5995 2311 Pls
6026 2239 Pls
6057 2304 Pls
6088 2270 Pls
6119 2420 Pls
6150 2468 Pls
6181 2620 Pls
6212 2575 Pls
6244 2643 Pls
6275 2420 Pls
6306 2225 Pls
6337 1997 Pls
6368 1538 Pls
6399 1273 Pls
6430 1010 Pls
6461 956 Pls
6492 780 Pls
6523 774 Pls
6555 654 Pls
6586 673 Pls
6617 585 Pls
6648 580 Pls
6679 550 Pls
6710 531 Pls
6741 528 Pls
6772 512 Pls
6803 508 Pls
6834 499 Pls
6866 504 Pls
6897 500 Pls
6928 498 Pls
6959 493 Pls
6990 494 Pls
1725 4487 Pls
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
