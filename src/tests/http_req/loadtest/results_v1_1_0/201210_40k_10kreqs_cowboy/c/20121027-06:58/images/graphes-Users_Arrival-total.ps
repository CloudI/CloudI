%!PS-Adobe-2.0
%%Title: images/graphes-Users_Arrival-total.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 00:37:33 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-Users_Arrival-total.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 00:37:33 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
5968 0 V
stroke
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
938 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 912 M
5968 0 V
stroke
LTb
1022 912 M
63 0 V
5905 0 R
-63 0 V
938 912 M
( 5000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 1375 M
5968 0 V
stroke
LTb
1022 1375 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 10000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 1839 M
5968 0 V
stroke
LTb
1022 1839 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 15000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 2302 M
5968 0 V
stroke
LTb
1022 2302 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 2766 M
5968 0 V
stroke
LTb
1022 2766 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 25000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 3229 M
5968 0 V
stroke
LTb
1022 3229 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 30000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 3693 M
5968 0 V
stroke
LTb
1022 3693 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 35000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 4156 M
5968 0 V
stroke
LTb
1022 4156 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 4620 M
5968 0 V
stroke
LTb
1022 4620 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 45000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
0 4172 V
stroke
LTb
1022 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2216 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
2216 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3409 448 M
0 4172 V
stroke
LTb
3409 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4603 448 M
0 4172 V
stroke
LTb
4603 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5796 448 M
0 4172 V
stroke
LTb
5796 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total) Cshow
grestore
LTb
LCb setrgbcolor
4006 98 M
(unit = sec ) Cshow
LTb
4006 4830 M
( total) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2618 4487 M
(users_count) Rshow
LT0
2702 4487 M
399 0 V
1022 449 M
24 55 V
24 69 V
24 64 V
23 62 V
24 65 V
24 65 V
24 66 V
24 65 V
24 65 V
24 67 V
24 65 V
23 68 V
24 69 V
24 61 V
24 65 V
24 65 V
24 64 V
24 64 V
24 61 V
23 66 V
24 68 V
24 67 V
24 62 V
24 61 V
24 64 V
24 61 V
24 66 V
23 69 V
24 63 V
24 62 V
24 67 V
24 66 V
24 63 V
24 64 V
24 63 V
23 62 V
24 67 V
24 65 V
24 63 V
24 67 V
24 68 V
24 64 V
23 65 V
24 68 V
24 65 V
24 64 V
24 65 V
24 66 V
24 69 V
24 65 V
23 66 V
24 66 V
24 66 V
24 64 V
24 65 V
24 65 V
24 67 V
24 65 V
23 66 V
24 65 V
24 10 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
stroke 3457 4354 M
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
24 0 V
23 0 V
15 0 V
1022 449 Pls
1046 504 Pls
1070 573 Pls
1094 637 Pls
1117 699 Pls
1141 764 Pls
1165 829 Pls
1189 895 Pls
1213 960 Pls
1237 1025 Pls
1261 1092 Pls
1285 1157 Pls
1308 1225 Pls
1332 1294 Pls
1356 1355 Pls
1380 1420 Pls
1404 1485 Pls
1428 1549 Pls
1452 1613 Pls
1476 1674 Pls
1499 1740 Pls
1523 1808 Pls
1547 1875 Pls
1571 1937 Pls
1595 1998 Pls
1619 2062 Pls
1643 2123 Pls
1667 2189 Pls
1690 2258 Pls
1714 2321 Pls
1738 2383 Pls
1762 2450 Pls
1786 2516 Pls
1810 2579 Pls
1834 2643 Pls
1858 2706 Pls
1881 2768 Pls
1905 2835 Pls
1929 2900 Pls
1953 2963 Pls
1977 3030 Pls
2001 3098 Pls
2025 3162 Pls
2048 3227 Pls
2072 3295 Pls
2096 3360 Pls
2120 3424 Pls
2144 3489 Pls
2168 3555 Pls
2192 3624 Pls
2216 3689 Pls
2239 3755 Pls
2263 3821 Pls
2287 3887 Pls
2311 3951 Pls
2335 4016 Pls
2359 4081 Pls
2383 4148 Pls
2407 4213 Pls
2430 4279 Pls
2454 4344 Pls
2478 4354 Pls
2502 4354 Pls
2526 4354 Pls
2550 4354 Pls
2574 4354 Pls
2598 4354 Pls
2621 4354 Pls
2645 4354 Pls
2669 4354 Pls
2693 4354 Pls
2717 4354 Pls
2741 4354 Pls
2765 4354 Pls
2789 4354 Pls
2812 4354 Pls
2836 4354 Pls
2860 4354 Pls
2884 4354 Pls
2908 4354 Pls
2932 4354 Pls
2956 4354 Pls
2980 4354 Pls
3003 4354 Pls
3027 4354 Pls
3051 4354 Pls
3075 4354 Pls
3099 4354 Pls
3123 4354 Pls
3147 4354 Pls
3170 4354 Pls
3194 4354 Pls
3218 4354 Pls
3242 4354 Pls
3266 4354 Pls
3290 4354 Pls
3314 4354 Pls
3338 4354 Pls
3361 4354 Pls
3385 4354 Pls
3409 4354 Pls
3433 4354 Pls
3457 4354 Pls
3481 4354 Pls
3505 4354 Pls
3529 4354 Pls
3552 4354 Pls
3576 4354 Pls
3600 4354 Pls
3624 4354 Pls
3648 4354 Pls
3672 4354 Pls
3696 4354 Pls
3720 4354 Pls
3743 4354 Pls
3767 4354 Pls
3791 4354 Pls
3815 4354 Pls
3839 4354 Pls
3863 4354 Pls
3887 4354 Pls
3911 4354 Pls
3934 4354 Pls
3958 4354 Pls
3982 4354 Pls
4006 4354 Pls
4030 4354 Pls
4054 4354 Pls
4078 4354 Pls
4101 4354 Pls
4125 4354 Pls
4149 4354 Pls
4173 4354 Pls
4197 4354 Pls
4221 4354 Pls
4245 4354 Pls
4269 4354 Pls
4292 4354 Pls
4316 4354 Pls
4340 4354 Pls
4364 4354 Pls
4388 4354 Pls
4412 4354 Pls
4436 4354 Pls
4460 4354 Pls
4483 4354 Pls
4507 4354 Pls
4531 4354 Pls
4555 4354 Pls
4579 4354 Pls
4603 4354 Pls
4627 4354 Pls
4651 4354 Pls
4674 4354 Pls
4698 4354 Pls
4722 4354 Pls
4746 4354 Pls
4770 4354 Pls
4794 4354 Pls
4818 4354 Pls
4842 4354 Pls
4865 4354 Pls
4889 4354 Pls
4913 4354 Pls
4937 4354 Pls
4961 4354 Pls
4985 4354 Pls
5009 4354 Pls
5032 4354 Pls
5056 4354 Pls
5080 4354 Pls
5104 4354 Pls
5128 4354 Pls
5152 4354 Pls
5176 4354 Pls
5200 4354 Pls
5223 4354 Pls
5247 4354 Pls
5271 4354 Pls
5295 4354 Pls
5319 4354 Pls
5343 4354 Pls
5367 4354 Pls
5391 4354 Pls
5414 4354 Pls
5438 4354 Pls
5462 4354 Pls
5486 4354 Pls
5510 4354 Pls
5534 4354 Pls
5558 4354 Pls
5582 4354 Pls
5605 4354 Pls
5629 4354 Pls
5653 4354 Pls
5677 4354 Pls
5701 4354 Pls
5725 4354 Pls
5749 4354 Pls
5773 4354 Pls
5796 4354 Pls
5811 4354 Pls
2901 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
2618 4347 M
(finish_users_count) Rshow
LT1
2702 4347 M
399 0 V
3624 448 M
24 0 V
24 0 V
24 0 V
24 1 V
23 1 V
24 2 V
24 2 V
24 4 V
24 6 V
24 9 V
24 12 V
24 18 V
23 22 V
24 28 V
24 35 V
24 36 V
24 45 V
24 50 V
24 52 V
23 57 V
24 60 V
24 59 V
24 59 V
24 65 V
24 63 V
24 60 V
24 65 V
23 65 V
24 67 V
24 64 V
24 66 V
24 64 V
24 64 V
24 65 V
24 65 V
23 65 V
24 63 V
24 65 V
24 62 V
24 68 V
24 68 V
24 61 V
24 64 V
23 64 V
24 64 V
24 64 V
24 66 V
24 64 V
24 67 V
24 69 V
24 61 V
23 66 V
24 67 V
24 63 V
24 64 V
24 66 V
24 68 V
24 68 V
23 65 V
24 68 V
24 65 V
24 64 V
24 69 V
24 67 V
24 64 V
24 64 V
23 62 V
24 58 V
24 55 V
24 56 V
24 50 V
24 46 V
24 45 V
24 34 V
23 34 V
24 25 V
24 23 V
24 18 V
24 14 V
24 10 V
24 7 V
24 5 V
23 4 V
24 2 V
24 1 V
24 2 V
24 0 V
24 1 V
24 0 V
24 0 V
23 0 V
15 0 V
3624 448 Crs
3648 448 Crs
3672 448 Crs
3696 448 Crs
3720 449 Crs
3743 450 Crs
3767 452 Crs
3791 454 Crs
3815 458 Crs
3839 464 Crs
3863 473 Crs
3887 485 Crs
3911 503 Crs
3934 525 Crs
3958 553 Crs
3982 588 Crs
4006 624 Crs
4030 669 Crs
4054 719 Crs
4078 771 Crs
4101 828 Crs
4125 888 Crs
4149 947 Crs
4173 1006 Crs
4197 1071 Crs
4221 1134 Crs
4245 1194 Crs
4269 1259 Crs
4292 1324 Crs
4316 1391 Crs
4340 1455 Crs
4364 1521 Crs
4388 1585 Crs
4412 1649 Crs
4436 1714 Crs
4460 1779 Crs
4483 1844 Crs
4507 1907 Crs
4531 1972 Crs
4555 2034 Crs
4579 2102 Crs
4603 2170 Crs
4627 2231 Crs
4651 2295 Crs
4674 2359 Crs
4698 2423 Crs
4722 2487 Crs
4746 2553 Crs
4770 2617 Crs
4794 2684 Crs
4818 2753 Crs
4842 2814 Crs
4865 2880 Crs
4889 2947 Crs
4913 3010 Crs
4937 3074 Crs
4961 3140 Crs
4985 3208 Crs
5009 3276 Crs
5032 3341 Crs
5056 3409 Crs
5080 3474 Crs
5104 3538 Crs
5128 3607 Crs
5152 3674 Crs
5176 3738 Crs
5200 3802 Crs
5223 3864 Crs
5247 3922 Crs
5271 3977 Crs
5295 4033 Crs
5319 4083 Crs
5343 4129 Crs
5367 4174 Crs
5391 4208 Crs
5414 4242 Crs
5438 4267 Crs
5462 4290 Crs
5486 4308 Crs
5510 4322 Crs
5534 4332 Crs
5558 4339 Crs
5582 4344 Crs
5605 4348 Crs
5629 4350 Crs
5653 4351 Crs
5677 4353 Crs
5701 4353 Crs
5725 4354 Crs
5749 4354 Crs
5773 4354 Crs
5796 4354 Crs
5811 4354 Crs
2901 4347 Crs
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
