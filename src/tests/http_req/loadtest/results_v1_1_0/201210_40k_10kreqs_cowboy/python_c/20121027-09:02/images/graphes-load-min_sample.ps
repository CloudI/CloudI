%!PS-Adobe-2.0
%%Title: images/graphes-load-min_sample.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 02:39:25 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-min_sample.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 02:39:25 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
5800 0 V
stroke
LTb
1190 448 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.0116) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1282 M
5800 0 V
stroke
LTb
1190 1282 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.01165) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2117 M
5800 0 V
stroke
LTb
1190 2117 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.0117) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2951 M
5800 0 V
stroke
LTb
1190 2951 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.01175) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 3786 M
5800 0 V
stroke
LTb
1190 3786 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.0118) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 4620 M
5800 0 V
stroke
LTb
1190 4620 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0.01185) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
0 4172 V
stroke
LTb
1190 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2350 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2350 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3510 448 M
0 4172 V
stroke
LTb
3510 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4670 448 M
0 4172 V
stroke
LTb
4670 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5830 448 M
0 4172 V
stroke
LTb
5830 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
4090 98 M
(unit = sec ) Cshow
LTb
4090 4830 M
( min_sample) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1946 4487 M
(load@mc1) Rshow
LT0
2030 4487 M
399 0 V
1190 2430 M
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
stroke 3556 2430 M
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
23 0 V
24 0 V
23 0 V
23 0 V
23 0 V
stroke 5969 2430 M
23 0 V
24 0 V
23 0 V
1190 2430 Pls
1213 2430 Pls
1236 2430 Pls
1260 2430 Pls
1283 2430 Pls
1306 2430 Pls
1329 2430 Pls
1352 2430 Pls
1376 2430 Pls
1399 2430 Pls
1422 2430 Pls
1445 2430 Pls
1468 2430 Pls
1492 2430 Pls
1515 2430 Pls
1538 2430 Pls
1561 2430 Pls
1584 2430 Pls
1608 2430 Pls
1631 2430 Pls
1654 2430 Pls
1677 2430 Pls
1700 2430 Pls
1724 2430 Pls
1747 2430 Pls
1770 2430 Pls
1793 2430 Pls
1816 2430 Pls
1840 2430 Pls
1863 2430 Pls
1886 2430 Pls
1909 2430 Pls
1932 2430 Pls
1956 2430 Pls
1979 2430 Pls
2002 2430 Pls
2025 2430 Pls
2048 2430 Pls
2072 2430 Pls
2095 2430 Pls
2118 2430 Pls
2141 2430 Pls
2164 2430 Pls
2188 2430 Pls
2211 2430 Pls
2234 2430 Pls
2257 2430 Pls
2280 2430 Pls
2304 2430 Pls
2327 2430 Pls
2350 2430 Pls
2373 2430 Pls
2396 2430 Pls
2420 2430 Pls
2443 2430 Pls
2466 2430 Pls
2489 2430 Pls
2512 2430 Pls
2536 2430 Pls
2559 2430 Pls
2582 2430 Pls
2605 2430 Pls
2628 2430 Pls
2652 2430 Pls
2675 2430 Pls
2698 2430 Pls
2721 2430 Pls
2744 2430 Pls
2768 2430 Pls
2791 2430 Pls
2814 2430 Pls
2837 2430 Pls
2860 2430 Pls
2884 2430 Pls
2907 2430 Pls
2930 2430 Pls
2953 2430 Pls
2976 2430 Pls
3000 2430 Pls
3023 2430 Pls
3046 2430 Pls
3069 2430 Pls
3092 2430 Pls
3116 2430 Pls
3139 2430 Pls
3162 2430 Pls
3185 2430 Pls
3208 2430 Pls
3232 2430 Pls
3255 2430 Pls
3278 2430 Pls
3301 2430 Pls
3324 2430 Pls
3348 2430 Pls
3371 2430 Pls
3394 2430 Pls
3417 2430 Pls
3440 2430 Pls
3464 2430 Pls
3487 2430 Pls
3510 2430 Pls
3533 2430 Pls
3556 2430 Pls
3580 2430 Pls
3603 2430 Pls
3626 2430 Pls
3649 2430 Pls
3672 2430 Pls
3696 2430 Pls
3719 2430 Pls
3742 2430 Pls
3765 2430 Pls
3788 2430 Pls
3812 2430 Pls
3835 2430 Pls
3858 2430 Pls
3881 2430 Pls
3904 2430 Pls
3928 2430 Pls
3951 2430 Pls
3974 2430 Pls
3997 2430 Pls
4020 2430 Pls
4044 2430 Pls
4067 2430 Pls
4090 2430 Pls
4113 2430 Pls
4136 2430 Pls
4160 2430 Pls
4183 2430 Pls
4206 2430 Pls
4229 2430 Pls
4252 2430 Pls
4276 2430 Pls
4299 2430 Pls
4322 2430 Pls
4345 2430 Pls
4368 2430 Pls
4392 2430 Pls
4415 2430 Pls
4438 2430 Pls
4461 2430 Pls
4484 2430 Pls
4508 2430 Pls
4531 2430 Pls
4554 2430 Pls
4577 2430 Pls
4600 2430 Pls
4624 2430 Pls
4647 2430 Pls
4670 2430 Pls
4693 2430 Pls
4716 2430 Pls
4740 2430 Pls
4763 2430 Pls
4786 2430 Pls
4809 2430 Pls
4832 2430 Pls
4856 2430 Pls
4879 2430 Pls
4902 2430 Pls
4925 2430 Pls
4948 2430 Pls
4972 2430 Pls
4995 2430 Pls
5018 2430 Pls
5041 2430 Pls
5064 2430 Pls
5088 2430 Pls
5111 2430 Pls
5134 2430 Pls
5157 2430 Pls
5180 2430 Pls
5204 2430 Pls
5227 2430 Pls
5250 2430 Pls
5273 2430 Pls
5296 2430 Pls
5320 2430 Pls
5343 2430 Pls
5366 2430 Pls
5389 2430 Pls
5412 2430 Pls
5436 2430 Pls
5459 2430 Pls
5482 2430 Pls
5505 2430 Pls
5528 2430 Pls
5552 2430 Pls
5575 2430 Pls
5598 2430 Pls
5621 2430 Pls
5644 2430 Pls
5668 2430 Pls
5691 2430 Pls
5714 2430 Pls
5737 2430 Pls
5760 2430 Pls
5784 2430 Pls
5807 2430 Pls
5830 2430 Pls
5853 2430 Pls
5876 2430 Pls
5900 2430 Pls
5923 2430 Pls
5946 2430 Pls
5969 2430 Pls
5992 2430 Pls
6016 2430 Pls
6039 2430 Pls
2229 4487 Pls
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
