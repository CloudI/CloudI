%!PS-Adobe-2.0
%%Title: images/graphes-Transactions-stdvar.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 01:17:31 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-Transactions-stdvar.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 01:17:31 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
854 448 M
6136 0 V
stroke
LTb
854 448 M
63 0 V
6073 0 R
-63 0 V
770 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 865 M
6136 0 V
stroke
LTb
854 865 M
63 0 V
6073 0 R
-63 0 V
770 865 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1282 M
6136 0 V
stroke
LTb
854 1282 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 1700 M
6136 0 V
stroke
LTb
854 1700 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2117 M
6136 0 V
stroke
LTb
854 2117 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2534 M
6136 0 V
stroke
LTb
854 2534 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 2951 M
6136 0 V
stroke
LTb
854 2951 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3368 M
6136 0 V
stroke
LTb
854 3368 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 3786 M
6136 0 V
stroke
LTb
854 3786 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4203 M
6136 0 V
stroke
LTb
854 4203 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 90) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 4620 M
6136 0 V
stroke
LTb
854 4620 M
63 0 V
6073 0 R
-63 0 V
-6157 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
854 448 M
0 4172 V
stroke
LTb
854 448 M
0 63 V
0 4109 R
0 -63 V
854 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2081 448 M
0 4172 V
stroke
LTb
2081 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3308 448 M
0 4172 V
stroke
LTb
3308 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4536 448 M
0 4172 V
stroke
LTb
4536 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5763 448 M
0 4172 V
stroke
LTb
5763 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(msec) Cshow
grestore
LTb
LCb setrgbcolor
3922 98 M
(unit = sec ) Cshow
LTb
3922 4830 M
( stdvar) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1274 4487 M
(page) Rshow
LT0
1358 4487 M
399 0 V
854 992 M
879 483 L
24 -6 V
25 1 V
24 12 V
25 -8 V
24 2 V
25 7 V
24 -2 V
25 6 V
24 7 V
25 0 V
25 -1 V
24 31 V
25 -6 V
24 19 V
25 28 V
24 29 V
25 64 V
24 71 V
25 7 V
24 45 V
25 32 V
25 42 V
24 -46 V
25 -20 V
24 42 V
25 12 V
24 2 V
25 -29 V
24 51 V
25 -43 V
24 108 V
25 -52 V
24 41 V
25 -105 V
25 106 V
24 -3 V
25 35 V
24 -53 V
25 45 V
24 50 V
25 29 V
24 -99 V
25 -13 V
24 -36 V
25 132 V
25 -23 V
24 -37 V
25 201 V
24 12 V
25 -98 V
24 408 V
25 727 V
24 -365 V
25 2641 V
24 -972 V
25 -69 V
25 -358 V
24 -1013 V
25 1364 V
24 -1546 V
25 1115 V
24 -993 V
25 -43 V
24 -546 V
25 1200 V
24 -447 V
25 418 V
25 -242 V
24 301 V
25 379 V
24 -1111 V
25 -409 V
24 2158 V
25 -127 V
24 -278 V
25 -1128 V
24 -139 V
25 -156 V
25 -169 V
24 6 V
25 392 V
24 837 V
25 -666 V
24 1991 V
25 -1281 V
24 358 V
25 -1611 V
24 1704 V
25 -1608 V
25 596 V
24 1051 V
25 -1879 V
24 189 V
25 949 V
24 674 V
25 -1203 V
24 -300 V
25 926 V
24 -1074 V
25 763 V
24 -697 V
25 -203 V
25 431 V
24 521 V
stroke 3431 2538 M
25 488 V
24 -947 V
25 -134 V
24 -436 V
25 1565 V
24 -740 V
25 -45 V
24 -698 V
25 869 V
25 -991 V
24 256 V
25 -453 V
24 1525 V
25 -744 V
24 -14 V
25 566 V
24 -732 V
25 692 V
24 -648 V
25 -591 V
25 398 V
24 -305 V
25 28 V
24 775 V
25 -728 V
24 1105 V
25 -430 V
24 -386 V
25 61 V
24 -61 V
25 997 V
25 -701 V
24 -891 V
25 1496 V
24 -487 V
25 70 V
24 -495 V
25 577 V
24 -1299 V
25 -35 V
24 -188 V
25 -22 V
25 -44 V
24 -5 V
25 5 V
24 -27 V
25 23 V
24 -30 V
25 0 V
24 -5 V
25 12 V
24 -33 V
25 5 V
24 -3 V
25 0 V
25 0 V
24 -14 V
25 0 V
24 11 V
25 -22 V
24 6 V
25 -7 V
24 -6 V
25 -14 V
24 19 V
25 -7 V
25 -2 V
24 -5 V
25 -2 V
24 -14 V
25 -8 V
24 13 V
25 -18 V
24 19 V
25 -19 V
24 -3 V
25 5 V
25 -2 V
24 -1 V
25 -7 V
24 4 V
25 4 V
24 -12 V
25 3 V
24 -6 V
25 -6 V
24 0 V
25 -33 V
25 26 V
24 -6 V
25 -7 V
24 11 V
25 -24 V
24 9 V
25 34 V
24 -30 V
25 43 V
24 0 V
25 -178 V
25 -3 V
24 2 V
25 -2 V
24 2 V
25 -1 V
stroke 5984 455 M
854 992 Pls
879 483 Pls
903 477 Pls
928 478 Pls
952 490 Pls
977 482 Pls
1001 484 Pls
1026 491 Pls
1050 489 Pls
1075 495 Pls
1099 502 Pls
1124 502 Pls
1149 501 Pls
1173 532 Pls
1198 526 Pls
1222 545 Pls
1247 573 Pls
1271 602 Pls
1296 666 Pls
1320 737 Pls
1345 744 Pls
1369 789 Pls
1394 821 Pls
1419 863 Pls
1443 817 Pls
1468 797 Pls
1492 839 Pls
1517 851 Pls
1541 853 Pls
1566 824 Pls
1590 875 Pls
1615 832 Pls
1639 940 Pls
1664 888 Pls
1688 929 Pls
1713 824 Pls
1738 930 Pls
1762 927 Pls
1787 962 Pls
1811 909 Pls
1836 954 Pls
1860 1004 Pls
1885 1033 Pls
1909 934 Pls
1934 921 Pls
1958 885 Pls
1983 1017 Pls
2008 994 Pls
2032 957 Pls
2057 1158 Pls
2081 1170 Pls
2106 1072 Pls
2130 1480 Pls
2155 2207 Pls
2179 1842 Pls
2204 4483 Pls
2228 3511 Pls
2253 3442 Pls
2278 3084 Pls
2302 2071 Pls
2327 3435 Pls
2351 1889 Pls
2376 3004 Pls
2400 2011 Pls
2425 1968 Pls
2449 1422 Pls
2474 2622 Pls
2498 2175 Pls
2523 2593 Pls
2548 2351 Pls
2572 2652 Pls
2597 3031 Pls
2621 1920 Pls
2646 1511 Pls
2670 3669 Pls
2695 3542 Pls
2719 3264 Pls
2744 2136 Pls
2768 1997 Pls
2793 1841 Pls
2818 1672 Pls
2842 1678 Pls
2867 2070 Pls
2891 2907 Pls
2916 2241 Pls
2940 4232 Pls
2965 2951 Pls
2989 3309 Pls
3014 1698 Pls
3038 3402 Pls
3063 1794 Pls
3088 2390 Pls
3112 3441 Pls
3137 1562 Pls
3161 1751 Pls
3186 2700 Pls
3210 3374 Pls
3235 2171 Pls
3259 1871 Pls
3284 2797 Pls
3308 1723 Pls
3333 2486 Pls
3357 1789 Pls
3382 1586 Pls
3407 2017 Pls
3431 2538 Pls
3456 3026 Pls
3480 2079 Pls
3505 1945 Pls
3529 1509 Pls
3554 3074 Pls
3578 2334 Pls
3603 2289 Pls
3627 1591 Pls
3652 2460 Pls
3677 1469 Pls
3701 1725 Pls
3726 1272 Pls
3750 2797 Pls
3775 2053 Pls
3799 2039 Pls
3824 2605 Pls
3848 1873 Pls
3873 2565 Pls
3897 1917 Pls
3922 1326 Pls
3947 1724 Pls
3971 1419 Pls
3996 1447 Pls
4020 2222 Pls
4045 1494 Pls
4069 2599 Pls
4094 2169 Pls
4118 1783 Pls
4143 1844 Pls
4167 1783 Pls
4192 2780 Pls
4217 2079 Pls
4241 1188 Pls
4266 2684 Pls
4290 2197 Pls
4315 2267 Pls
4339 1772 Pls
4364 2349 Pls
4388 1050 Pls
4413 1015 Pls
4437 827 Pls
4462 805 Pls
4487 761 Pls
4511 756 Pls
4536 761 Pls
4560 734 Pls
4585 757 Pls
4609 727 Pls
4634 727 Pls
4658 722 Pls
4683 734 Pls
4707 701 Pls
4732 706 Pls
4756 703 Pls
4781 703 Pls
4806 703 Pls
4830 689 Pls
4855 689 Pls
4879 700 Pls
4904 678 Pls
4928 684 Pls
4953 677 Pls
4977 671 Pls
5002 657 Pls
5026 676 Pls
5051 669 Pls
5076 667 Pls
5100 662 Pls
5125 660 Pls
5149 646 Pls
5174 638 Pls
5198 651 Pls
5223 633 Pls
5247 652 Pls
5272 633 Pls
5296 630 Pls
5321 635 Pls
5346 633 Pls
5370 632 Pls
5395 625 Pls
5419 629 Pls
5444 633 Pls
5468 621 Pls
5493 624 Pls
5517 618 Pls
5542 612 Pls
5566 612 Pls
5591 579 Pls
5616 605 Pls
5640 599 Pls
5665 592 Pls
5689 603 Pls
5714 579 Pls
5738 588 Pls
5763 622 Pls
5787 592 Pls
5812 635 Pls
5836 635 Pls
5861 457 Pls
5886 454 Pls
5910 456 Pls
5935 454 Pls
5959 456 Pls
5984 455 Pls
1557 4487 Pls
1.000 UL
LTb
854 4620 N
854 448 L
6136 0 V
0 4172 V
-6136 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
