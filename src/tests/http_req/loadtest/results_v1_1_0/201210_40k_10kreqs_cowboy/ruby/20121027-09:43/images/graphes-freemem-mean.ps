%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 03:25:33 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 03:25:33 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 4400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 865 M
6052 0 V
stroke
LTb
938 865 M
63 0 V
5989 0 R
-63 0 V
854 865 M
( 4600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1282 M
6052 0 V
stroke
LTb
938 1282 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 4800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1700 M
6052 0 V
stroke
LTb
938 1700 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 5000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2117 M
6052 0 V
stroke
LTb
938 2117 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 5200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2534 M
6052 0 V
stroke
LTb
938 2534 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 5400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2951 M
6052 0 V
stroke
LTb
938 2951 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 5600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3368 M
6052 0 V
stroke
LTb
938 3368 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 5800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3786 M
6052 0 V
stroke
LTb
938 3786 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4203 M
6052 0 V
stroke
LTb
938 4203 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4620 M
6052 0 V
stroke
LTb
938 4620 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4172 V
stroke
LTb
938 448 M
0 63 V
0 4109 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2148 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2148 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3359 448 M
0 4172 V
stroke
LTb
3359 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4569 448 M
0 4172 V
stroke
LTb
4569 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5780 448 M
0 4172 V
stroke
LTb
5780 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(unit = sec ) Cshow
LTb
3964 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1946 4487 M
(freemem@mc1) Rshow
LT0
2030 4487 M
399 0 V
938 4557 M
24 -6 V
24 -27 V
25 -46 V
24 -68 V
24 -61 V
24 -53 V
24 -49 V
25 -48 V
24 -49 V
24 -50 V
24 -49 V
24 -45 V
25 -59 V
24 -49 V
24 -64 V
24 -72 V
25 -47 V
24 -41 V
24 -59 V
24 -39 V
24 -51 V
25 -45 V
24 -53 V
24 -60 V
24 -135 V
24 -87 V
25 -62 V
24 -53 V
24 -38 V
24 -74 V
24 -36 V
25 -37 V
24 -60 V
24 -42 V
24 -6 V
24 -105 V
25 -63 V
24 -45 V
24 -54 V
24 -99 V
25 -109 V
24 -151 V
24 -277 V
24 -74 V
24 -54 V
25 -35 V
24 -31 V
24 -72 V
24 -94 V
24 -115 V
25 -33 V
24 71 V
24 -67 V
24 -194 V
24 44 V
25 23 V
24 -161 V
24 112 V
24 -128 V
24 -92 V
25 -123 V
24 95 V
24 69 V
24 -137 V
25 107 V
24 64 V
24 -139 V
24 144 V
24 -207 V
25 42 V
24 -77 V
24 125 V
24 -8 V
24 -119 V
25 102 V
24 -184 V
24 119 V
24 -161 V
24 135 V
25 65 V
24 -16 V
24 130 V
24 -182 V
24 60 V
25 -7 V
24 70 V
24 -80 V
24 -31 V
25 145 V
24 -84 V
24 -48 V
24 -16 V
24 94 V
25 -92 V
24 -4 V
24 136 V
24 -101 V
24 25 V
25 -55 V
24 115 V
24 -38 V
24 -67 V
stroke 3407 800 M
24 79 V
25 -172 V
24 134 V
24 -77 V
24 18 V
24 94 V
25 -110 V
24 99 V
24 72 V
24 -115 V
25 118 V
24 -111 V
24 8 V
24 0 V
24 -10 V
25 24 V
24 51 V
24 -302 V
24 236 V
24 89 V
25 -255 V
24 232 V
24 -96 V
24 84 V
24 -205 V
25 144 V
24 -9 V
24 39 V
24 -87 V
24 130 V
25 25 V
24 -148 V
24 50 V
24 50 V
24 -57 V
25 -39 V
24 101 V
24 -73 V
24 -26 V
25 -9 V
24 102 V
24 -230 V
24 143 V
24 -54 V
25 114 V
24 9 V
24 -65 V
24 85 V
24 -38 V
25 16 V
24 -99 V
24 171 V
24 -153 V
24 84 V
25 -189 V
24 72 V
24 -51 V
24 126 V
24 -160 V
25 115 V
24 86 V
24 -52 V
24 74 V
25 -101 V
24 53 V
24 -18 V
24 -4 V
24 -102 V
25 112 V
24 -96 V
24 91 V
24 -32 V
24 -68 V
25 -29 V
24 123 V
24 84 V
24 -228 V
24 236 V
25 -128 V
24 125 V
24 -334 V
24 302 V
24 -107 V
25 71 V
24 -188 V
24 218 V
24 -181 V
25 48 V
24 -76 V
24 203 V
24 -43 V
24 -120 V
25 194 V
24 -128 V
24 -13 V
24 -28 V
24 130 V
25 -26 V
24 -27 V
24 -8 V
24 -162 V
24 129 V
25 68 V
24 -118 V
stroke 5925 704 M
24 16 V
24 134 V
24 -115 V
938 4557 Pls
962 4551 Pls
986 4524 Pls
1011 4478 Pls
1035 4410 Pls
1059 4349 Pls
1083 4296 Pls
1107 4247 Pls
1132 4199 Pls
1156 4150 Pls
1180 4100 Pls
1204 4051 Pls
1228 4006 Pls
1253 3947 Pls
1277 3898 Pls
1301 3834 Pls
1325 3762 Pls
1350 3715 Pls
1374 3674 Pls
1398 3615 Pls
1422 3576 Pls
1446 3525 Pls
1471 3480 Pls
1495 3427 Pls
1519 3367 Pls
1543 3232 Pls
1567 3145 Pls
1592 3083 Pls
1616 3030 Pls
1640 2992 Pls
1664 2918 Pls
1688 2882 Pls
1713 2845 Pls
1737 2785 Pls
1761 2743 Pls
1785 2737 Pls
1809 2632 Pls
1834 2569 Pls
1858 2524 Pls
1882 2470 Pls
1906 2371 Pls
1931 2262 Pls
1955 2111 Pls
1979 1834 Pls
2003 1760 Pls
2027 1706 Pls
2052 1671 Pls
2076 1640 Pls
2100 1568 Pls
2124 1474 Pls
2148 1359 Pls
2173 1326 Pls
2197 1397 Pls
2221 1330 Pls
2245 1136 Pls
2269 1180 Pls
2294 1203 Pls
2318 1042 Pls
2342 1154 Pls
2366 1026 Pls
2390 934 Pls
2415 811 Pls
2439 906 Pls
2463 975 Pls
2487 838 Pls
2512 945 Pls
2536 1009 Pls
2560 870 Pls
2584 1014 Pls
2608 807 Pls
2633 849 Pls
2657 772 Pls
2681 897 Pls
2705 889 Pls
2729 770 Pls
2754 872 Pls
2778 688 Pls
2802 807 Pls
2826 646 Pls
2850 781 Pls
2875 846 Pls
2899 830 Pls
2923 960 Pls
2947 778 Pls
2971 838 Pls
2996 831 Pls
3020 901 Pls
3044 821 Pls
3068 790 Pls
3093 935 Pls
3117 851 Pls
3141 803 Pls
3165 787 Pls
3189 881 Pls
3214 789 Pls
3238 785 Pls
3262 921 Pls
3286 820 Pls
3310 845 Pls
3335 790 Pls
3359 905 Pls
3383 867 Pls
3407 800 Pls
3431 879 Pls
3456 707 Pls
3480 841 Pls
3504 764 Pls
3528 782 Pls
3552 876 Pls
3577 766 Pls
3601 865 Pls
3625 937 Pls
3649 822 Pls
3674 940 Pls
3698 829 Pls
3722 837 Pls
3746 837 Pls
3770 827 Pls
3795 851 Pls
3819 902 Pls
3843 600 Pls
3867 836 Pls
3891 925 Pls
3916 670 Pls
3940 902 Pls
3964 806 Pls
3988 890 Pls
4012 685 Pls
4037 829 Pls
4061 820 Pls
4085 859 Pls
4109 772 Pls
4133 902 Pls
4158 927 Pls
4182 779 Pls
4206 829 Pls
4230 879 Pls
4254 822 Pls
4279 783 Pls
4303 884 Pls
4327 811 Pls
4351 785 Pls
4376 776 Pls
4400 878 Pls
4424 648 Pls
4448 791 Pls
4472 737 Pls
4497 851 Pls
4521 860 Pls
4545 795 Pls
4569 880 Pls
4593 842 Pls
4618 858 Pls
4642 759 Pls
4666 930 Pls
4690 777 Pls
4714 861 Pls
4739 672 Pls
4763 744 Pls
4787 693 Pls
4811 819 Pls
4835 659 Pls
4860 774 Pls
4884 860 Pls
4908 808 Pls
4932 882 Pls
4957 781 Pls
4981 834 Pls
5005 816 Pls
5029 812 Pls
5053 710 Pls
5078 822 Pls
5102 726 Pls
5126 817 Pls
5150 785 Pls
5174 717 Pls
5199 688 Pls
5223 811 Pls
5247 895 Pls
5271 667 Pls
5295 903 Pls
5320 775 Pls
5344 900 Pls
5368 566 Pls
5392 868 Pls
5416 761 Pls
5441 832 Pls
5465 644 Pls
5489 862 Pls
5513 681 Pls
5538 729 Pls
5562 653 Pls
5586 856 Pls
5610 813 Pls
5634 693 Pls
5659 887 Pls
5683 759 Pls
5707 746 Pls
5731 718 Pls
5755 848 Pls
5780 822 Pls
5804 795 Pls
5828 787 Pls
5852 625 Pls
5876 754 Pls
5901 822 Pls
5925 704 Pls
5949 720 Pls
5973 854 Pls
5997 739 Pls
2229 4487 Pls
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
