%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 21:59:49 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 21:59:49 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
770 448 M
6220 0 V
stroke
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 912 M
6220 0 V
stroke
LTb
770 912 M
63 0 V
6157 0 R
-63 0 V
686 912 M
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1375 M
6220 0 V
stroke
LTb
770 1375 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1839 M
6220 0 V
stroke
LTb
770 1839 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2302 M
6220 0 V
stroke
LTb
770 2302 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2766 M
6220 0 V
stroke
LTb
770 2766 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3229 M
6220 0 V
stroke
LTb
770 3229 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3693 M
6220 0 V
stroke
LTb
770 3693 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 70) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4156 M
6220 0 V
stroke
LTb
770 4156 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 80) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4620 M
6220 0 V
stroke
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 90) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 4172 V
stroke
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
770 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2014 448 M
0 4172 V
stroke
LTb
2014 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3258 448 M
0 4172 V
stroke
LTb
3258 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4502 448 M
0 4172 V
stroke
LTb
4502 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5746 448 M
0 4172 V
stroke
LTb
5746 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3880 98 M
(unit = sec ) Cshow
LTb
3880 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1442 4487 M
(cpu@mc1) Rshow
LT0
1526 4487 M
399 0 V
770 650 M
795 497 L
25 210 V
25 127 V
25 60 V
24 92 V
25 87 V
25 17 V
25 44 V
25 67 V
25 79 V
25 69 V
25 137 V
24 112 V
25 48 V
25 138 V
25 132 V
25 119 V
25 119 V
25 128 V
25 66 V
24 170 V
25 14 V
25 22 V
25 117 V
25 3 V
25 53 V
25 55 V
25 23 V
25 52 V
24 69 V
25 -54 V
25 78 V
25 73 V
25 52 V
25 39 V
25 93 V
25 -16 V
24 38 V
25 45 V
25 47 V
25 26 V
25 65 V
25 0 V
25 51 V
25 47 V
24 76 V
25 43 V
25 25 V
25 63 V
25 39 V
25 38 V
25 21 V
25 22 V
25 98 V
24 70 V
25 61 V
25 53 V
25 -24 V
25 -36 V
25 18 V
25 -57 V
25 6 V
24 9 V
25 15 V
25 -2 V
25 7 V
25 18 V
25 1 V
25 -21 V
25 34 V
24 -56 V
25 -14 V
25 55 V
25 -20 V
25 16 V
25 5 V
25 -44 V
25 8 V
25 -15 V
24 73 V
25 -39 V
25 0 V
25 24 V
25 17 V
25 -79 V
25 117 V
25 -62 V
24 24 V
25 -16 V
25 -19 V
25 10 V
25 20 V
25 -62 V
25 89 V
25 -31 V
24 -9 V
25 13 V
25 -8 V
25 37 V
25 -80 V
25 35 V
25 -36 V
25 87 V
25 6 V
24 -16 V
stroke 3382 4117 M
25 -23 V
25 14 V
25 -11 V
25 41 V
25 -55 V
25 12 V
25 9 V
24 -11 V
25 34 V
25 4 V
25 -16 V
25 -59 V
25 29 V
25 -3 V
25 -12 V
24 12 V
25 10 V
25 3 V
25 41 V
25 -17 V
25 4 V
25 -24 V
25 -41 V
25 16 V
24 16 V
25 14 V
25 53 V
25 -24 V
25 -3 V
25 26 V
25 1 V
25 4 V
24 -86 V
25 -81 V
25 -78 V
25 8 V
25 -94 V
25 -44 V
25 -62 V
25 -32 V
24 -79 V
25 -51 V
25 -27 V
25 -91 V
25 -4 V
25 -72 V
25 -57 V
25 -49 V
25 -28 V
24 -68 V
25 -27 V
25 -10 V
25 -96 V
25 -51 V
25 -16 V
25 -57 V
25 -54 V
24 14 V
25 -76 V
25 -66 V
25 -11 V
25 -87 V
25 -33 V
25 -71 V
25 -63 V
24 -77 V
25 -2 V
25 -40 V
25 -79 V
25 0 V
25 -9 V
25 43 V
25 77 V
25 150 V
24 57 V
25 -11 V
25 7 V
25 -366 V
25 -582 V
25 -346 V
25 -107 V
25 -51 V
24 -114 V
25 -124 V
25 -54 V
25 -92 V
25 -74 V
25 -39 V
25 -37 V
25 -73 V
24 -22 V
25 -10 V
25 -4 V
25 -8 V
25 2 V
25 4 V
25 -1 V
25 5 V
25 -2 V
770 650 Pls
795 497 Pls
820 707 Pls
845 834 Pls
870 894 Pls
894 986 Pls
919 1073 Pls
944 1090 Pls
969 1134 Pls
994 1201 Pls
1019 1280 Pls
1044 1349 Pls
1069 1486 Pls
1093 1598 Pls
1118 1646 Pls
1143 1784 Pls
1168 1916 Pls
1193 2035 Pls
1218 2154 Pls
1243 2282 Pls
1268 2348 Pls
1292 2518 Pls
1317 2532 Pls
1342 2554 Pls
1367 2671 Pls
1392 2674 Pls
1417 2727 Pls
1442 2782 Pls
1467 2805 Pls
1492 2857 Pls
1516 2926 Pls
1541 2872 Pls
1566 2950 Pls
1591 3023 Pls
1616 3075 Pls
1641 3114 Pls
1666 3207 Pls
1691 3191 Pls
1715 3229 Pls
1740 3274 Pls
1765 3321 Pls
1790 3347 Pls
1815 3412 Pls
1840 3412 Pls
1865 3463 Pls
1890 3510 Pls
1914 3586 Pls
1939 3629 Pls
1964 3654 Pls
1989 3717 Pls
2014 3756 Pls
2039 3794 Pls
2064 3815 Pls
2089 3837 Pls
2114 3935 Pls
2138 4005 Pls
2163 4066 Pls
2188 4119 Pls
2213 4095 Pls
2238 4059 Pls
2263 4077 Pls
2288 4020 Pls
2313 4026 Pls
2337 4035 Pls
2362 4050 Pls
2387 4048 Pls
2412 4055 Pls
2437 4073 Pls
2462 4074 Pls
2487 4053 Pls
2512 4087 Pls
2536 4031 Pls
2561 4017 Pls
2586 4072 Pls
2611 4052 Pls
2636 4068 Pls
2661 4073 Pls
2686 4029 Pls
2711 4037 Pls
2736 4022 Pls
2760 4095 Pls
2785 4056 Pls
2810 4056 Pls
2835 4080 Pls
2860 4097 Pls
2885 4018 Pls
2910 4135 Pls
2935 4073 Pls
2959 4097 Pls
2984 4081 Pls
3009 4062 Pls
3034 4072 Pls
3059 4092 Pls
3084 4030 Pls
3109 4119 Pls
3134 4088 Pls
3158 4079 Pls
3183 4092 Pls
3208 4084 Pls
3233 4121 Pls
3258 4041 Pls
3283 4076 Pls
3308 4040 Pls
3333 4127 Pls
3358 4133 Pls
3382 4117 Pls
3407 4094 Pls
3432 4108 Pls
3457 4097 Pls
3482 4138 Pls
3507 4083 Pls
3532 4095 Pls
3557 4104 Pls
3581 4093 Pls
3606 4127 Pls
3631 4131 Pls
3656 4115 Pls
3681 4056 Pls
3706 4085 Pls
3731 4082 Pls
3756 4070 Pls
3780 4082 Pls
3805 4092 Pls
3830 4095 Pls
3855 4136 Pls
3880 4119 Pls
3905 4123 Pls
3930 4099 Pls
3955 4058 Pls
3980 4074 Pls
4004 4090 Pls
4029 4104 Pls
4054 4157 Pls
4079 4133 Pls
4104 4130 Pls
4129 4156 Pls
4154 4157 Pls
4179 4161 Pls
4203 4075 Pls
4228 3994 Pls
4253 3916 Pls
4278 3924 Pls
4303 3830 Pls
4328 3786 Pls
4353 3724 Pls
4378 3692 Pls
4402 3613 Pls
4427 3562 Pls
4452 3535 Pls
4477 3444 Pls
4502 3440 Pls
4527 3368 Pls
4552 3311 Pls
4577 3262 Pls
4602 3234 Pls
4626 3166 Pls
4651 3139 Pls
4676 3129 Pls
4701 3033 Pls
4726 2982 Pls
4751 2966 Pls
4776 2909 Pls
4801 2855 Pls
4825 2869 Pls
4850 2793 Pls
4875 2727 Pls
4900 2716 Pls
4925 2629 Pls
4950 2596 Pls
4975 2525 Pls
5000 2462 Pls
5024 2385 Pls
5049 2383 Pls
5074 2343 Pls
5099 2264 Pls
5124 2264 Pls
5149 2255 Pls
5174 2298 Pls
5199 2375 Pls
5224 2525 Pls
5248 2582 Pls
5273 2571 Pls
5298 2578 Pls
5323 2212 Pls
5348 1630 Pls
5373 1284 Pls
5398 1177 Pls
5423 1126 Pls
5447 1012 Pls
5472 888 Pls
5497 834 Pls
5522 742 Pls
5547 668 Pls
5572 629 Pls
5597 592 Pls
5622 519 Pls
5646 497 Pls
5671 487 Pls
5696 483 Pls
5721 475 Pls
5746 477 Pls
5771 481 Pls
5796 480 Pls
5821 485 Pls
5846 483 Pls
1725 4487 Pls
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
