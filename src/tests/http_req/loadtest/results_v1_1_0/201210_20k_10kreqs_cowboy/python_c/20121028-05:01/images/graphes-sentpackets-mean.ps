%!PS-Adobe-2.0
%%Title: images/graphes-sentpackets-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 22:36:52 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-sentpackets-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 22:36:52 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1044 M
5884 0 V
stroke
LTb
1106 1044 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1640 M
5884 0 V
stroke
LTb
1106 1640 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2236 M
5884 0 V
stroke
LTb
1106 2236 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2832 M
5884 0 V
stroke
LTb
1106 2832 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 3428 M
5884 0 V
stroke
LTb
1106 3428 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 4024 M
5884 0 V
stroke
LTb
1106 4024 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 120000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 140000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4172 V
stroke
LTb
1106 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2283 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2283 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3460 448 M
0 4172 V
stroke
LTb
3460 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4636 448 M
0 4172 V
stroke
LTb
4636 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5813 448 M
0 4172 V
stroke
LTb
5813 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(sentpackets) Cshow
grestore
LTb
LCb setrgbcolor
4048 98 M
(unit = sec ) Cshow
LTb
4048 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2450 4487 M
(sentpackets@mc1) Rshow
LT0
2534 4487 M
399 0 V
1130 454 M
23 75 V
24 82 V
23 74 V
24 71 V
23 77 V
24 78 V
23 68 V
24 68 V
23 74 V
24 69 V
23 74 V
24 70 V
24 75 V
23 83 V
24 77 V
23 79 V
24 76 V
23 76 V
24 78 V
23 72 V
24 62 V
23 58 V
24 90 V
23 63 V
24 91 V
23 76 V
24 51 V
24 95 V
23 79 V
24 74 V
23 42 V
24 94 V
23 83 V
24 92 V
23 62 V
24 71 V
23 51 V
24 79 V
23 99 V
24 84 V
24 106 V
23 58 V
24 47 V
23 94 V
24 57 V
23 68 V
24 70 V
23 107 V
24 34 V
23 72 V
24 -36 V
23 -7 V
24 3 V
23 -60 V
24 -39 V
24 102 V
23 11 V
24 6 V
23 -140 V
24 -6 V
23 9 V
24 8 V
23 8 V
24 59 V
23 -157 V
24 79 V
23 59 V
24 34 V
24 -55 V
23 -30 V
24 18 V
23 25 V
24 -10 V
23 -48 V
24 34 V
23 30 V
24 -47 V
23 80 V
24 -68 V
23 34 V
24 16 V
23 -25 V
24 -51 V
24 20 V
23 48 V
24 -92 V
23 60 V
24 -12 V
23 79 V
24 -43 V
23 -13 V
24 -43 V
23 62 V
24 25 V
23 -86 V
24 51 V
24 41 V
23 -60 V
24 -18 V
23 20 V
24 16 V
23 5 V
stroke 3530 4055 M
24 -8 V
23 40 V
24 -101 V
23 46 V
24 11 V
23 19 V
24 -31 V
23 28 V
24 -41 V
24 19 V
23 6 V
24 -35 V
23 24 V
24 -69 V
23 132 V
24 -17 V
23 28 V
24 -86 V
23 -31 V
24 64 V
23 45 V
24 -123 V
24 96 V
23 -21 V
24 -91 V
23 84 V
24 62 V
23 -51 V
24 -58 V
23 6 V
24 7 V
23 -14 V
24 46 V
23 -19 V
24 5 V
24 -59 V
23 3 V
24 154 V
23 24 V
24 -17 V
23 -93 V
24 -1 V
23 88 V
24 43 V
23 -17 V
24 107 V
23 -185 V
24 41 V
23 61 V
24 -73 V
24 -115 V
23 -41 V
24 -67 V
23 -77 V
24 -65 V
23 -85 V
24 -47 V
23 -96 V
24 -35 V
23 -88 V
24 -120 V
23 -52 V
24 -85 V
24 -25 V
23 -133 V
24 -66 V
23 -110 V
24 -53 V
23 -55 V
24 -67 V
23 -83 V
24 -49 V
23 -78 V
24 -92 V
23 -87 V
24 -77 V
23 -97 V
24 -37 V
24 -96 V
23 -92 V
24 -87 V
23 -78 V
24 -80 V
23 -82 V
24 -70 V
23 -78 V
24 -79 V
23 -68 V
24 -96 V
23 -84 V
24 -76 V
24 -95 V
23 -80 V
24 -71 V
23 -60 V
24 -51 V
23 -45 V
24 -31 V
23 -22 V
24 -22 V
23 -12 V
24 -7 V
23 -4 V
24 -3 V
stroke 5978 452 M
23 -2 V
24 0 V
1130 454 Pls
1153 529 Pls
1177 611 Pls
1200 685 Pls
1224 756 Pls
1247 833 Pls
1271 911 Pls
1294 979 Pls
1318 1047 Pls
1341 1121 Pls
1365 1190 Pls
1388 1264 Pls
1412 1334 Pls
1436 1409 Pls
1459 1492 Pls
1483 1569 Pls
1506 1648 Pls
1530 1724 Pls
1553 1800 Pls
1577 1878 Pls
1600 1950 Pls
1624 2012 Pls
1647 2070 Pls
1671 2160 Pls
1694 2223 Pls
1718 2314 Pls
1741 2390 Pls
1765 2441 Pls
1789 2536 Pls
1812 2615 Pls
1836 2689 Pls
1859 2731 Pls
1883 2825 Pls
1906 2908 Pls
1930 3000 Pls
1953 3062 Pls
1977 3133 Pls
2000 3184 Pls
2024 3263 Pls
2047 3362 Pls
2071 3446 Pls
2095 3552 Pls
2118 3610 Pls
2142 3657 Pls
2165 3751 Pls
2189 3808 Pls
2212 3876 Pls
2236 3946 Pls
2259 4053 Pls
2283 4087 Pls
2306 4159 Pls
2330 4123 Pls
2353 4116 Pls
2377 4119 Pls
2400 4059 Pls
2424 4020 Pls
2448 4122 Pls
2471 4133 Pls
2495 4139 Pls
2518 3999 Pls
2542 3993 Pls
2565 4002 Pls
2589 4010 Pls
2612 4018 Pls
2636 4077 Pls
2659 3920 Pls
2683 3999 Pls
2706 4058 Pls
2730 4092 Pls
2754 4037 Pls
2777 4007 Pls
2801 4025 Pls
2824 4050 Pls
2848 4040 Pls
2871 3992 Pls
2895 4026 Pls
2918 4056 Pls
2942 4009 Pls
2965 4089 Pls
2989 4021 Pls
3012 4055 Pls
3036 4071 Pls
3059 4046 Pls
3083 3995 Pls
3107 4015 Pls
3130 4063 Pls
3154 3971 Pls
3177 4031 Pls
3201 4019 Pls
3224 4098 Pls
3248 4055 Pls
3271 4042 Pls
3295 3999 Pls
3318 4061 Pls
3342 4086 Pls
3365 4000 Pls
3389 4051 Pls
3413 4092 Pls
3436 4032 Pls
3460 4014 Pls
3483 4034 Pls
3507 4050 Pls
3530 4055 Pls
3554 4047 Pls
3577 4087 Pls
3601 3986 Pls
3624 4032 Pls
3648 4043 Pls
3671 4062 Pls
3695 4031 Pls
3718 4059 Pls
3742 4018 Pls
3766 4037 Pls
3789 4043 Pls
3813 4008 Pls
3836 4032 Pls
3860 3963 Pls
3883 4095 Pls
3907 4078 Pls
3930 4106 Pls
3954 4020 Pls
3977 3989 Pls
4001 4053 Pls
4024 4098 Pls
4048 3975 Pls
4072 4071 Pls
4095 4050 Pls
4119 3959 Pls
4142 4043 Pls
4166 4105 Pls
4189 4054 Pls
4213 3996 Pls
4236 4002 Pls
4260 4009 Pls
4283 3995 Pls
4307 4041 Pls
4330 4022 Pls
4354 4027 Pls
4378 3968 Pls
4401 3971 Pls
4425 4125 Pls
4448 4149 Pls
4472 4132 Pls
4495 4039 Pls
4519 4038 Pls
4542 4126 Pls
4566 4169 Pls
4589 4152 Pls
4613 4259 Pls
4636 4074 Pls
4660 4115 Pls
4683 4176 Pls
4707 4103 Pls
4731 3988 Pls
4754 3947 Pls
4778 3880 Pls
4801 3803 Pls
4825 3738 Pls
4848 3653 Pls
4872 3606 Pls
4895 3510 Pls
4919 3475 Pls
4942 3387 Pls
4966 3267 Pls
4989 3215 Pls
5013 3130 Pls
5037 3105 Pls
5060 2972 Pls
5084 2906 Pls
5107 2796 Pls
5131 2743 Pls
5154 2688 Pls
5178 2621 Pls
5201 2538 Pls
5225 2489 Pls
5248 2411 Pls
5272 2319 Pls
5295 2232 Pls
5319 2155 Pls
5342 2058 Pls
5366 2021 Pls
5390 1925 Pls
5413 1833 Pls
5437 1746 Pls
5460 1668 Pls
5484 1588 Pls
5507 1506 Pls
5531 1436 Pls
5554 1358 Pls
5578 1279 Pls
5601 1211 Pls
5625 1115 Pls
5648 1031 Pls
5672 955 Pls
5696 860 Pls
5719 780 Pls
5743 709 Pls
5766 649 Pls
5790 598 Pls
5813 553 Pls
5837 522 Pls
5860 500 Pls
5884 478 Pls
5907 466 Pls
5931 459 Pls
5954 455 Pls
5978 452 Pls
6001 450 Pls
6025 450 Pls
2733 4487 Pls
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
