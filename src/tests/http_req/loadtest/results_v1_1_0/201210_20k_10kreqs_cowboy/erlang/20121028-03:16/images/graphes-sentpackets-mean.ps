%!PS-Adobe-2.0
%%Title: images/graphes-sentpackets-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 20:49:45 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-sentpackets-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 20:49:45 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
5884 0 V
stroke
LTb
1106 448 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 970 M
5884 0 V
stroke
LTb
1106 970 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 20000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 1491 M
5884 0 V
stroke
LTb
1106 1491 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 40000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2013 M
5884 0 V
stroke
LTb
1106 2013 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 60000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 2534 M
5884 0 V
stroke
LTb
1106 2534 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 80000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 3056 M
5884 0 V
stroke
LTb
1106 3056 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 100000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 3577 M
5884 0 V
stroke
LTb
1106 3577 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 120000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 4099 M
5884 0 V
stroke
LTb
1106 4099 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 140000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 4620 M
5884 0 V
stroke
LTb
1106 4620 M
63 0 V
5821 0 R
-63 0 V
-5905 0 R
( 160000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1106 448 M
0 4172 V
stroke
LTb
1106 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1694 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1694 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2283 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2283 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
2871 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2871 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
3460 448 M
0 4172 V
stroke
LTb
3460 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
4048 448 M
0 4172 V
stroke
LTb
4048 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4636 448 M
0 4172 V
stroke
LTb
4636 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1200) Cshow
1.000 UL
LTb
1.000 UL
LTa
5225 448 M
0 4172 V
stroke
LTb
5225 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1400) Cshow
1.000 UL
LTb
1.000 UL
LTa
5813 448 M
0 4172 V
stroke
LTb
5813 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1600) Cshow
1.000 UL
LTb
1.000 UL
LTa
6402 448 M
0 4172 V
stroke
LTb
6402 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1800) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(sentpackets) Cshow
grestore
LTb
LCb setrgbcolor
4048 98 M
(unit = sec ) Cshow
LTb
4048 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2450 4487 M
(sentpackets@mc1) Rshow
LT0
2534 4487 M
399 0 V
1165 515 M
29 65 V
30 68 V
29 71 V
30 66 V
29 71 V
29 67 V
30 67 V
29 70 V
30 79 V
29 65 V
29 70 V
30 63 V
29 69 V
30 66 V
29 62 V
30 63 V
29 69 V
29 65 V
30 68 V
29 60 V
30 58 V
29 71 V
30 71 V
29 72 V
29 42 V
30 83 V
29 66 V
30 69 V
29 79 V
29 54 V
30 67 V
29 79 V
30 53 V
29 56 V
30 82 V
29 44 V
29 83 V
30 62 V
29 19 V
30 104 V
29 63 V
29 51 V
30 91 V
29 62 V
30 2 V
29 120 V
30 32 V
29 67 V
29 75 V
30 50 V
29 51 V
30 72 V
29 45 V
30 94 V
29 24 V
29 78 V
30 -215 V
29 163 V
30 43 V
29 20 V
29 109 V
30 -145 V
29 189 V
30 -41 V
29 22 V
30 20 V
29 -48 V
29 38 V
30 14 V
29 -7 V
30 -4 V
29 -30 V
30 41 V
29 -35 V
29 10 V
30 29 V
29 3 V
30 -2 V
29 13 V
29 2 V
30 -19 V
29 -38 V
30 19 V
29 11 V
30 -13 V
29 15 V
29 21 V
30 -32 V
29 34 V
30 -11 V
29 -31 V
29 29 V
30 -18 V
29 32 V
30 -22 V
29 0 V
30 18 V
29 -2 V
29 -7 V
30 -15 V
29 17 V
30 -10 V
stroke 4166 4317 M
29 10 V
30 -1 V
29 -25 V
29 10 V
30 27 V
29 -36 V
30 22 V
29 13 V
29 -7 V
30 -10 V
29 9 V
30 -16 V
29 9 V
30 36 V
29 -93 V
29 17 V
30 -37 V
29 -9 V
30 -17 V
29 -58 V
30 -60 V
29 -66 V
29 -20 V
30 -89 V
29 -50 V
30 -46 V
29 -128 V
29 -47 V
30 -46 V
29 -76 V
30 -73 V
29 -88 V
30 -38 V
29 -78 V
29 -72 V
30 -49 V
29 -67 V
30 -43 V
29 -81 V
29 -63 V
30 -64 V
29 -39 V
30 -125 V
29 -59 V
30 -81 V
29 -71 V
29 -42 V
30 -76 V
29 -51 V
30 -70 V
29 -60 V
30 -67 V
29 -57 V
29 -87 V
30 -62 V
29 -66 V
30 -40 V
29 -81 V
29 -67 V
30 -76 V
29 -47 V
30 -72 V
29 -57 V
30 -65 V
29 -66 V
29 -61 V
30 -61 V
29 -68 V
30 -53 V
29 -68 V
30 -55 V
29 -79 V
29 -55 V
30 -50 V
29 -58 V
30 -44 V
29 -34 V
29 -26 V
30 -27 V
29 -14 V
30 -12 V
29 -5 V
30 -5 V
29 -4 V
29 -2 V
30 -2 V
29 0 V
30 -1 V
1165 515 Pls
1194 580 Pls
1224 648 Pls
1253 719 Pls
1283 785 Pls
1312 856 Pls
1341 923 Pls
1371 990 Pls
1400 1060 Pls
1430 1139 Pls
1459 1204 Pls
1488 1274 Pls
1518 1337 Pls
1547 1406 Pls
1577 1472 Pls
1606 1534 Pls
1636 1597 Pls
1665 1666 Pls
1694 1731 Pls
1724 1799 Pls
1753 1859 Pls
1783 1917 Pls
1812 1988 Pls
1842 2059 Pls
1871 2131 Pls
1900 2173 Pls
1930 2256 Pls
1959 2322 Pls
1989 2391 Pls
2018 2470 Pls
2047 2524 Pls
2077 2591 Pls
2106 2670 Pls
2136 2723 Pls
2165 2779 Pls
2195 2861 Pls
2224 2905 Pls
2253 2988 Pls
2283 3050 Pls
2312 3069 Pls
2342 3173 Pls
2371 3236 Pls
2400 3287 Pls
2430 3378 Pls
2459 3440 Pls
2489 3442 Pls
2518 3562 Pls
2548 3594 Pls
2577 3661 Pls
2606 3736 Pls
2636 3786 Pls
2665 3837 Pls
2695 3909 Pls
2724 3954 Pls
2754 4048 Pls
2783 4072 Pls
2812 4150 Pls
2842 3935 Pls
2871 4098 Pls
2901 4141 Pls
2930 4161 Pls
2959 4270 Pls
2989 4125 Pls
3018 4314 Pls
3048 4273 Pls
3077 4295 Pls
3107 4315 Pls
3136 4267 Pls
3165 4305 Pls
3195 4319 Pls
3224 4312 Pls
3254 4308 Pls
3283 4278 Pls
3313 4319 Pls
3342 4284 Pls
3371 4294 Pls
3401 4323 Pls
3430 4326 Pls
3460 4324 Pls
3489 4337 Pls
3518 4339 Pls
3548 4320 Pls
3577 4282 Pls
3607 4301 Pls
3636 4312 Pls
3666 4299 Pls
3695 4314 Pls
3724 4335 Pls
3754 4303 Pls
3783 4337 Pls
3813 4326 Pls
3842 4295 Pls
3871 4324 Pls
3901 4306 Pls
3930 4338 Pls
3960 4316 Pls
3989 4316 Pls
4019 4334 Pls
4048 4332 Pls
4077 4325 Pls
4107 4310 Pls
4136 4327 Pls
4166 4317 Pls
4195 4327 Pls
4225 4326 Pls
4254 4301 Pls
4283 4311 Pls
4313 4338 Pls
4342 4302 Pls
4372 4324 Pls
4401 4337 Pls
4430 4330 Pls
4460 4320 Pls
4489 4329 Pls
4519 4313 Pls
4548 4322 Pls
4578 4358 Pls
4607 4265 Pls
4636 4282 Pls
4666 4245 Pls
4695 4236 Pls
4725 4219 Pls
4754 4161 Pls
4784 4101 Pls
4813 4035 Pls
4842 4015 Pls
4872 3926 Pls
4901 3876 Pls
4931 3830 Pls
4960 3702 Pls
4989 3655 Pls
5019 3609 Pls
5048 3533 Pls
5078 3460 Pls
5107 3372 Pls
5137 3334 Pls
5166 3256 Pls
5195 3184 Pls
5225 3135 Pls
5254 3068 Pls
5284 3025 Pls
5313 2944 Pls
5342 2881 Pls
5372 2817 Pls
5401 2778 Pls
5431 2653 Pls
5460 2594 Pls
5490 2513 Pls
5519 2442 Pls
5548 2400 Pls
5578 2324 Pls
5607 2273 Pls
5637 2203 Pls
5666 2143 Pls
5696 2076 Pls
5725 2019 Pls
5754 1932 Pls
5784 1870 Pls
5813 1804 Pls
5843 1764 Pls
5872 1683 Pls
5901 1616 Pls
5931 1540 Pls
5960 1493 Pls
5990 1421 Pls
6019 1364 Pls
6049 1299 Pls
6078 1233 Pls
6107 1172 Pls
6137 1111 Pls
6166 1043 Pls
6196 990 Pls
6225 922 Pls
6255 867 Pls
6284 788 Pls
6313 733 Pls
6343 683 Pls
6372 625 Pls
6402 581 Pls
6431 547 Pls
6460 521 Pls
6490 494 Pls
6519 480 Pls
6549 468 Pls
6578 463 Pls
6608 458 Pls
6637 454 Pls
6666 452 Pls
6696 450 Pls
6725 450 Pls
6755 449 Pls
2733 4487 Pls
1.000 UL
LTb
1106 4620 N
0 -4172 V
5884 0 V
0 4172 V
-5884 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
