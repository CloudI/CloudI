%!PS-Adobe-2.0
%%Title: images/graphes-Size-total.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 21:23:57 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-Size-total.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 21:23:57 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
5800 0 V
stroke
LTb
1190 448 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 970 M
5800 0 V
stroke
LTb
1190 970 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 200000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1491 M
5800 0 V
stroke
LTb
1190 1491 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 400000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2013 M
5800 0 V
stroke
LTb
1190 2013 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 600000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2534 M
5800 0 V
stroke
LTb
1190 2534 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 800000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 3056 M
5800 0 V
stroke
LTb
1190 3056 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 3577 M
5800 0 V
stroke
LTb
1190 3577 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1.2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 4099 M
5800 0 V
stroke
LTb
1190 4099 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1.4e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 4620 M
5800 0 V
stroke
LTb
1190 4620 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1.6e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
0 4172 V
stroke
LTb
1190 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1770 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
1770 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
2350 448 M
0 3829 V
0 280 R
0 63 V
stroke
LTb
2350 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
2930 448 M
0 4172 V
stroke
LTb
2930 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
3510 448 M
0 4172 V
stroke
LTb
3510 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
4090 448 M
0 4172 V
stroke
LTb
4090 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4670 448 M
0 4172 V
stroke
LTb
4670 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1200) Cshow
1.000 UL
LTb
1.000 UL
LTa
5250 448 M
0 4172 V
stroke
LTb
5250 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1400) Cshow
1.000 UL
LTb
1.000 UL
LTa
5830 448 M
0 4172 V
stroke
LTb
5830 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1600) Cshow
1.000 UL
LTb
1.000 UL
LTa
6410 448 M
0 4172 V
stroke
LTb
6410 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1800) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total Kbits) Cshow
grestore
LTb
LCb setrgbcolor
4090 98 M
(unit = sec ) Cshow
LTb
4090 4830 M
( total) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
2030 4487 M
(size_sent) Rshow
LT0
2114 4487 M
399 0 V
1219 448 M
29 1 V
29 1 V
29 2 V
29 3 V
29 3 V
29 3 V
29 4 V
29 5 V
29 5 V
29 6 V
29 6 V
29 7 V
29 7 V
29 8 V
29 8 V
29 9 V
29 10 V
29 10 V
29 11 V
29 11 V
29 11 V
29 12 V
29 13 V
29 13 V
29 14 V
29 14 V
29 15 V
29 15 V
29 16 V
29 17 V
29 17 V
29 18 V
29 18 V
29 18 V
29 20 V
29 19 V
29 20 V
29 21 V
29 21 V
29 22 V
29 22 V
29 23 V
29 23 V
29 24 V
29 25 V
29 25 V
29 26 V
29 26 V
29 26 V
29 27 V
29 28 V
29 28 V
29 28 V
29 29 V
29 30 V
29 30 V
29 31 V
29 30 V
29 32 V
29 32 V
29 33 V
29 32 V
29 32 V
29 31 V
29 33 V
29 31 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 33 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 33 V
29 32 V
29 31 V
29 32 V
29 32 V
29 32 V
29 33 V
29 32 V
29 32 V
29 32 V
29 33 V
29 31 V
29 32 V
29 32 V
29 33 V
29 32 V
29 32 V
29 32 V
29 32 V
29 33 V
29 32 V
stroke 4177 2795 M
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 32 V
29 33 V
29 32 V
29 32 V
29 32 V
29 33 V
29 31 V
29 32 V
29 33 V
29 32 V
29 32 V
29 32 V
29 32 V
29 31 V
29 31 V
29 30 V
29 31 V
29 29 V
29 29 V
29 29 V
29 27 V
29 28 V
29 27 V
29 26 V
29 26 V
29 26 V
29 25 V
29 23 V
29 24 V
29 23 V
29 23 V
29 22 V
29 22 V
29 21 V
29 20 V
29 20 V
29 19 V
29 19 V
29 19 V
29 18 V
29 17 V
29 17 V
29 16 V
29 15 V
29 15 V
29 15 V
29 14 V
29 13 V
29 13 V
29 13 V
29 12 V
29 11 V
29 11 V
29 10 V
29 10 V
29 9 V
29 8 V
29 8 V
29 8 V
29 7 V
29 6 V
29 6 V
29 5 V
29 5 V
29 4 V
29 4 V
29 3 V
29 3 V
29 2 V
29 2 V
29 1 V
29 1 V
29 1 V
29 1 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
1219 448 Pls
1248 449 Pls
1277 450 Pls
1306 452 Pls
1335 455 Pls
1364 458 Pls
1393 461 Pls
1422 465 Pls
1451 470 Pls
1480 475 Pls
1509 481 Pls
1538 487 Pls
1567 494 Pls
1596 501 Pls
1625 509 Pls
1654 517 Pls
1683 526 Pls
1712 536 Pls
1741 546 Pls
1770 557 Pls
1799 568 Pls
1828 579 Pls
1857 591 Pls
1886 604 Pls
1915 617 Pls
1944 631 Pls
1973 645 Pls
2002 660 Pls
2031 675 Pls
2060 691 Pls
2089 708 Pls
2118 725 Pls
2147 743 Pls
2176 761 Pls
2205 779 Pls
2234 799 Pls
2263 818 Pls
2292 838 Pls
2321 859 Pls
2350 880 Pls
2379 902 Pls
2408 924 Pls
2437 947 Pls
2466 970 Pls
2495 994 Pls
2524 1019 Pls
2553 1044 Pls
2582 1070 Pls
2611 1096 Pls
2640 1122 Pls
2669 1149 Pls
2698 1177 Pls
2727 1205 Pls
2756 1233 Pls
2785 1262 Pls
2814 1292 Pls
2843 1322 Pls
2872 1353 Pls
2901 1383 Pls
2930 1415 Pls
2959 1447 Pls
2988 1480 Pls
3017 1512 Pls
3046 1544 Pls
3075 1575 Pls
3104 1608 Pls
3133 1639 Pls
3162 1671 Pls
3191 1703 Pls
3220 1735 Pls
3249 1767 Pls
3278 1799 Pls
3307 1831 Pls
3336 1863 Pls
3365 1895 Pls
3394 1927 Pls
3423 1960 Pls
3452 1992 Pls
3481 2024 Pls
3510 2056 Pls
3539 2088 Pls
3568 2120 Pls
3597 2153 Pls
3626 2185 Pls
3655 2216 Pls
3684 2248 Pls
3713 2280 Pls
3742 2312 Pls
3771 2345 Pls
3800 2377 Pls
3829 2409 Pls
3858 2441 Pls
3887 2474 Pls
3916 2505 Pls
3945 2537 Pls
3974 2569 Pls
4003 2602 Pls
4032 2634 Pls
4061 2666 Pls
4090 2698 Pls
4119 2730 Pls
4148 2763 Pls
4177 2795 Pls
4206 2827 Pls
4235 2859 Pls
4264 2891 Pls
4293 2923 Pls
4322 2955 Pls
4351 2987 Pls
4380 3020 Pls
4409 3052 Pls
4438 3084 Pls
4467 3116 Pls
4496 3149 Pls
4525 3180 Pls
4554 3212 Pls
4583 3245 Pls
4612 3277 Pls
4641 3309 Pls
4670 3341 Pls
4699 3373 Pls
4728 3404 Pls
4757 3435 Pls
4786 3465 Pls
4815 3496 Pls
4844 3525 Pls
4873 3554 Pls
4902 3583 Pls
4931 3610 Pls
4960 3638 Pls
4989 3665 Pls
5018 3691 Pls
5047 3717 Pls
5076 3743 Pls
5105 3768 Pls
5134 3791 Pls
5163 3815 Pls
5192 3838 Pls
5221 3861 Pls
5250 3883 Pls
5279 3905 Pls
5308 3926 Pls
5337 3946 Pls
5366 3966 Pls
5395 3985 Pls
5424 4004 Pls
5453 4023 Pls
5482 4041 Pls
5511 4058 Pls
5540 4075 Pls
5569 4091 Pls
5598 4106 Pls
5627 4121 Pls
5656 4136 Pls
5685 4150 Pls
5714 4163 Pls
5743 4176 Pls
5772 4189 Pls
5801 4201 Pls
5830 4212 Pls
5859 4223 Pls
5888 4233 Pls
5917 4243 Pls
5946 4252 Pls
5975 4260 Pls
6004 4268 Pls
6033 4276 Pls
6062 4283 Pls
6091 4289 Pls
6120 4295 Pls
6149 4300 Pls
6178 4305 Pls
6207 4309 Pls
6236 4313 Pls
6265 4316 Pls
6294 4319 Pls
6323 4321 Pls
6352 4323 Pls
6381 4324 Pls
6410 4325 Pls
6439 4326 Pls
6468 4327 Pls
6497 4327 Pls
6526 4327 Pls
6555 4327 Pls
6584 4327 Pls
6613 4327 Pls
6642 4327 Pls
6671 4327 Pls
6700 4327 Pls
6729 4327 Pls
6758 4327 Pls
6758 4327 Pls
2313 4487 Pls
1.000 UP
1.000 UL
LT1
LTb
2030 4347 M
(size_rcv) Rshow
LT1
2114 4347 M
399 0 V
1219 448 M
29 0 V
29 1 V
29 0 V
29 1 V
29 1 V
29 1 V
29 1 V
29 1 V
29 2 V
29 1 V
29 3 V
29 2 V
29 3 V
29 4 V
29 4 V
29 5 V
29 7 V
29 7 V
29 8 V
29 8 V
29 9 V
29 10 V
29 10 V
29 10 V
29 12 V
29 12 V
29 13 V
29 13 V
29 14 V
29 14 V
29 16 V
29 15 V
29 16 V
29 17 V
29 17 V
29 18 V
29 19 V
29 19 V
29 20 V
29 20 V
29 20 V
29 22 V
29 22 V
29 23 V
29 23 V
29 24 V
29 24 V
29 25 V
29 25 V
29 27 V
29 27 V
29 27 V
29 28 V
29 28 V
29 30 V
29 30 V
29 30 V
29 30 V
29 31 V
29 30 V
29 30 V
29 30 V
29 29 V
29 30 V
29 29 V
29 29 V
29 29 V
29 29 V
29 28 V
29 29 V
29 29 V
29 29 V
29 28 V
29 29 V
29 28 V
29 28 V
29 28 V
29 29 V
29 28 V
29 28 V
29 28 V
29 28 V
29 27 V
29 27 V
29 27 V
29 28 V
29 28 V
29 27 V
29 28 V
29 27 V
29 28 V
29 27 V
29 27 V
29 28 V
29 27 V
29 27 V
29 28 V
29 27 V
29 28 V
29 27 V
29 27 V
29 28 V
stroke 4177 2508 M
29 27 V
29 27 V
29 27 V
29 27 V
29 28 V
29 27 V
29 28 V
29 27 V
29 28 V
29 27 V
29 28 V
29 27 V
29 27 V
29 27 V
29 27 V
29 28 V
29 27 V
29 27 V
29 26 V
29 26 V
29 26 V
29 25 V
29 24 V
29 25 V
29 23 V
29 23 V
29 22 V
29 21 V
29 20 V
29 20 V
29 20 V
29 19 V
29 18 V
29 17 V
29 17 V
29 15 V
29 16 V
29 14 V
29 14 V
29 13 V
29 12 V
29 12 V
29 12 V
29 10 V
29 10 V
29 10 V
29 9 V
29 8 V
29 8 V
29 7 V
29 7 V
29 7 V
29 6 V
29 5 V
29 6 V
29 4 V
29 5 V
29 4 V
29 4 V
29 3 V
29 3 V
29 3 V
29 2 V
29 3 V
29 2 V
29 2 V
29 1 V
29 2 V
29 1 V
29 1 V
29 1 V
29 1 V
29 0 V
29 1 V
29 1 V
29 0 V
29 0 V
29 0 V
29 0 V
29 1 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
29 0 V
1219 448 Crs
1248 448 Crs
1277 449 Crs
1306 449 Crs
1335 450 Crs
1364 451 Crs
1393 452 Crs
1422 453 Crs
1451 454 Crs
1480 456 Crs
1509 457 Crs
1538 460 Crs
1567 462 Crs
1596 465 Crs
1625 469 Crs
1654 473 Crs
1683 478 Crs
1712 485 Crs
1741 492 Crs
1770 500 Crs
1799 508 Crs
1828 517 Crs
1857 527 Crs
1886 537 Crs
1915 547 Crs
1944 559 Crs
1973 571 Crs
2002 584 Crs
2031 597 Crs
2060 611 Crs
2089 625 Crs
2118 641 Crs
2147 656 Crs
2176 672 Crs
2205 689 Crs
2234 706 Crs
2263 724 Crs
2292 743 Crs
2321 762 Crs
2350 782 Crs
2379 802 Crs
2408 822 Crs
2437 844 Crs
2466 866 Crs
2495 889 Crs
2524 912 Crs
2553 936 Crs
2582 960 Crs
2611 985 Crs
2640 1010 Crs
2669 1037 Crs
2698 1064 Crs
2727 1091 Crs
2756 1119 Crs
2785 1147 Crs
2814 1177 Crs
2843 1207 Crs
2872 1237 Crs
2901 1267 Crs
2930 1298 Crs
2959 1328 Crs
2988 1358 Crs
3017 1388 Crs
3046 1417 Crs
3075 1447 Crs
3104 1476 Crs
3133 1505 Crs
3162 1534 Crs
3191 1563 Crs
3220 1591 Crs
3249 1620 Crs
3278 1649 Crs
3307 1678 Crs
3336 1706 Crs
3365 1735 Crs
3394 1763 Crs
3423 1791 Crs
3452 1819 Crs
3481 1848 Crs
3510 1876 Crs
3539 1904 Crs
3568 1932 Crs
3597 1960 Crs
3626 1987 Crs
3655 2014 Crs
3684 2041 Crs
3713 2069 Crs
3742 2097 Crs
3771 2124 Crs
3800 2152 Crs
3829 2179 Crs
3858 2207 Crs
3887 2234 Crs
3916 2261 Crs
3945 2289 Crs
3974 2316 Crs
4003 2343 Crs
4032 2371 Crs
4061 2398 Crs
4090 2426 Crs
4119 2453 Crs
4148 2480 Crs
4177 2508 Crs
4206 2535 Crs
4235 2562 Crs
4264 2589 Crs
4293 2616 Crs
4322 2644 Crs
4351 2671 Crs
4380 2699 Crs
4409 2726 Crs
4438 2754 Crs
4467 2781 Crs
4496 2809 Crs
4525 2836 Crs
4554 2863 Crs
4583 2890 Crs
4612 2917 Crs
4641 2945 Crs
4670 2972 Crs
4699 2999 Crs
4728 3025 Crs
4757 3051 Crs
4786 3077 Crs
4815 3102 Crs
4844 3126 Crs
4873 3151 Crs
4902 3174 Crs
4931 3197 Crs
4960 3219 Crs
4989 3240 Crs
5018 3260 Crs
5047 3280 Crs
5076 3300 Crs
5105 3319 Crs
5134 3337 Crs
5163 3354 Crs
5192 3371 Crs
5221 3386 Crs
5250 3402 Crs
5279 3416 Crs
5308 3430 Crs
5337 3443 Crs
5366 3455 Crs
5395 3467 Crs
5424 3479 Crs
5453 3489 Crs
5482 3499 Crs
5511 3509 Crs
5540 3518 Crs
5569 3526 Crs
5598 3534 Crs
5627 3541 Crs
5656 3548 Crs
5685 3555 Crs
5714 3561 Crs
5743 3566 Crs
5772 3572 Crs
5801 3576 Crs
5830 3581 Crs
5859 3585 Crs
5888 3589 Crs
5917 3592 Crs
5946 3595 Crs
5975 3598 Crs
6004 3600 Crs
6033 3603 Crs
6062 3605 Crs
6091 3607 Crs
6120 3608 Crs
6149 3610 Crs
6178 3611 Crs
6207 3612 Crs
6236 3613 Crs
6265 3614 Crs
6294 3614 Crs
6323 3615 Crs
6352 3616 Crs
6381 3616 Crs
6410 3616 Crs
6439 3616 Crs
6468 3616 Crs
6497 3617 Crs
6526 3617 Crs
6555 3617 Crs
6584 3617 Crs
6613 3617 Crs
6642 3617 Crs
6671 3617 Crs
6700 3617 Crs
6729 3617 Crs
6758 3617 Crs
6758 3617 Crs
2313 4347 Crs
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
