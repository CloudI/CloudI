%!PS-Adobe-2.0
%%Title: images/graphes-load-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 17:35:33 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-load-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 17:35:33 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
686 448 M
6304 0 V
stroke
LTb
686 448 M
63 0 V
6241 0 R
-63 0 V
602 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 912 M
6304 0 V
stroke
LTb
686 912 M
63 0 V
6241 0 R
-63 0 V
602 912 M
( 1) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1375 M
6304 0 V
stroke
LTb
686 1375 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 1839 M
6304 0 V
stroke
LTb
686 1839 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 3) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2302 M
6304 0 V
stroke
LTb
686 2302 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 4) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 2766 M
6304 0 V
stroke
LTb
686 2766 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 5) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3229 M
6304 0 V
stroke
LTb
686 3229 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 6) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 3693 M
6304 0 V
stroke
LTb
686 3693 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 7) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4156 M
6304 0 V
stroke
LTb
686 4156 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 8) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 4620 M
6304 0 V
stroke
LTb
686 4620 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 9) Rshow
1.000 UL
LTb
1.000 UL
LTa
686 448 M
0 4172 V
stroke
LTb
686 448 M
0 63 V
0 4109 R
0 -63 V
686 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1316 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1316 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 200) Cshow
1.000 UL
LTb
1.000 UL
LTa
1947 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1947 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 400) Cshow
1.000 UL
LTb
1.000 UL
LTa
2577 448 M
0 4172 V
stroke
LTb
2577 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 600) Cshow
1.000 UL
LTb
1.000 UL
LTa
3208 448 M
0 4172 V
stroke
LTb
3208 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 800) Cshow
1.000 UL
LTb
1.000 UL
LTa
3838 448 M
0 4172 V
stroke
LTb
3838 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4468 448 M
0 4172 V
stroke
LTb
4468 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1200) Cshow
1.000 UL
LTb
1.000 UL
LTa
5099 448 M
0 4172 V
stroke
LTb
5099 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1400) Cshow
1.000 UL
LTb
1.000 UL
LTa
5729 448 M
0 4172 V
stroke
LTb
5729 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1600) Cshow
1.000 UL
LTb
1.000 UL
LTa
6360 448 M
0 4172 V
stroke
LTb
6360 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1800) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(load) Cshow
grestore
LTb
LCb setrgbcolor
3838 98 M
(unit = sec ) Cshow
LTb
3838 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1442 4487 M
(load@mc1) Rshow
LT0
1526 4487 M
399 0 V
718 499 M
31 -9 V
32 -6 V
31 62 V
32 18 V
31 51 V
32 41 V
31 42 V
32 214 V
31 175 V
32 9 V
31 -63 V
32 116 V
31 74 V
32 -47 V
31 458 V
32 24 V
31 175 V
32 85 V
31 -228 V
32 -190 V
31 273 V
32 -65 V
31 377 V
32 167 V
32 -39 V
31 297 V
32 -23 V
31 -36 V
32 41 V
31 -166 V
32 9 V
31 60 V
32 -200 V
31 18 V
32 229 V
31 264 V
32 -9 V
31 -315 V
32 18 V
31 273 V
32 4 V
31 154 V
32 -71 V
31 178 V
32 223 V
31 152 V
32 59 V
31 -134 V
32 -88 V
32 47 V
31 38 V
32 105 V
31 157 V
32 104 V
31 50 V
32 -143 V
31 -14 V
32 65 V
31 92 V
32 -32 V
31 9 V
32 -69 V
31 54 V
32 53 V
31 0 V
32 74 V
31 63 V
32 20 V
31 -103 V
32 103 V
31 87 V
32 6 V
31 -38 V
32 41 V
32 38 V
31 -157 V
32 88 V
31 42 V
32 36 V
31 66 V
32 -15 V
31 56 V
32 15 V
31 -29 V
32 50 V
31 6 V
32 9 V
31 -27 V
32 -29 V
31 -22 V
32 18 V
31 51 V
32 0 V
31 -353 V
32 -111 V
31 78 V
32 65 V
31 94 V
32 -163 V
32 -9 V
31 33 V
32 -9 V
stroke 3933 3740 M
31 134 V
32 14 V
31 -94 V
32 51 V
31 53 V
32 110 V
31 18 V
32 20 V
31 18 V
32 9 V
31 -23 V
32 50 V
31 9 V
32 42 V
31 74 V
32 -9 V
31 -9 V
32 -116 V
31 -65 V
32 -51 V
31 66 V
32 56 V
32 45 V
31 -241 V
32 38 V
31 -98 V
32 47 V
31 42 V
32 -80 V
31 -88 V
32 -9 V
31 -256 V
32 98 V
31 -18 V
32 -134 V
31 9 V
32 -320 V
31 195 V
32 -163 V
31 116 V
32 205 V
31 68 V
32 -199 V
31 -166 V
32 148 V
31 -80 V
32 48 V
32 -297 V
31 -78 V
32 -38 V
31 121 V
32 42 V
31 -335 V
32 11 V
31 -220 V
32 -172 V
31 -72 V
32 31 V
31 148 V
32 9 V
31 -27 V
32 -9 V
31 -56 V
32 -226 V
31 235 V
32 33 V
31 -51 V
32 -217 V
31 -223 V
32 -89 V
31 112 V
32 -115 V
32 -98 V
31 -56 V
32 -120 V
31 -166 V
32 -75 V
31 -97 V
32 -116 V
31 -98 V
32 -83 V
31 -75 V
32 -59 V
31 -51 V
32 -42 V
31 -38 V
32 -27 V
31 -29 V
32 -22 V
718 499 Pls
749 490 Pls
781 484 Pls
812 546 Pls
844 564 Pls
875 615 Pls
907 656 Pls
938 698 Pls
970 912 Pls
1001 1087 Pls
1033 1096 Pls
1064 1033 Pls
1096 1149 Pls
1127 1223 Pls
1159 1176 Pls
1190 1634 Pls
1222 1658 Pls
1253 1833 Pls
1285 1918 Pls
1316 1690 Pls
1348 1500 Pls
1379 1773 Pls
1411 1708 Pls
1442 2085 Pls
1474 2252 Pls
1506 2213 Pls
1537 2510 Pls
1569 2487 Pls
1600 2451 Pls
1632 2492 Pls
1663 2326 Pls
1695 2335 Pls
1726 2395 Pls
1758 2195 Pls
1789 2213 Pls
1821 2442 Pls
1852 2706 Pls
1884 2697 Pls
1915 2382 Pls
1947 2400 Pls
1978 2673 Pls
2010 2677 Pls
2041 2831 Pls
2073 2760 Pls
2104 2938 Pls
2136 3161 Pls
2167 3313 Pls
2199 3372 Pls
2230 3238 Pls
2262 3150 Pls
2294 3197 Pls
2325 3235 Pls
2357 3340 Pls
2388 3497 Pls
2420 3601 Pls
2451 3651 Pls
2483 3508 Pls
2514 3494 Pls
2546 3559 Pls
2577 3651 Pls
2609 3619 Pls
2640 3628 Pls
2672 3559 Pls
2703 3613 Pls
2735 3666 Pls
2766 3666 Pls
2798 3740 Pls
2829 3803 Pls
2861 3823 Pls
2892 3720 Pls
2924 3823 Pls
2955 3910 Pls
2987 3916 Pls
3018 3878 Pls
3050 3919 Pls
3082 3957 Pls
3113 3800 Pls
3145 3888 Pls
3176 3930 Pls
3208 3966 Pls
3239 4032 Pls
3271 4017 Pls
3302 4073 Pls
3334 4088 Pls
3365 4059 Pls
3397 4109 Pls
3428 4115 Pls
3460 4124 Pls
3491 4097 Pls
3523 4068 Pls
3554 4046 Pls
3586 4064 Pls
3617 4115 Pls
3649 4115 Pls
3680 3762 Pls
3712 3651 Pls
3743 3729 Pls
3775 3794 Pls
3806 3888 Pls
3838 3725 Pls
3870 3716 Pls
3901 3749 Pls
3933 3740 Pls
3964 3874 Pls
3996 3888 Pls
4027 3794 Pls
4059 3845 Pls
4090 3898 Pls
4122 4008 Pls
4153 4026 Pls
4185 4046 Pls
4216 4064 Pls
4248 4073 Pls
4279 4050 Pls
4311 4100 Pls
4342 4109 Pls
4374 4151 Pls
4405 4225 Pls
4437 4216 Pls
4468 4207 Pls
4500 4091 Pls
4531 4026 Pls
4563 3975 Pls
4594 4041 Pls
4626 4097 Pls
4658 4142 Pls
4689 3901 Pls
4721 3939 Pls
4752 3841 Pls
4784 3888 Pls
4815 3930 Pls
4847 3850 Pls
4878 3762 Pls
4910 3753 Pls
4941 3497 Pls
4973 3595 Pls
5004 3577 Pls
5036 3443 Pls
5067 3452 Pls
5099 3132 Pls
5130 3327 Pls
5162 3164 Pls
5193 3280 Pls
5225 3485 Pls
5256 3553 Pls
5288 3354 Pls
5319 3188 Pls
5351 3336 Pls
5382 3256 Pls
5414 3304 Pls
5446 3007 Pls
5477 2929 Pls
5509 2891 Pls
5540 3012 Pls
5572 3054 Pls
5603 2719 Pls
5635 2730 Pls
5666 2510 Pls
5698 2338 Pls
5729 2266 Pls
5761 2297 Pls
5792 2445 Pls
5824 2454 Pls
5855 2427 Pls
5887 2418 Pls
5918 2362 Pls
5950 2136 Pls
5981 2371 Pls
6013 2404 Pls
6044 2353 Pls
6076 2136 Pls
6107 1913 Pls
6139 1824 Pls
6170 1936 Pls
6202 1821 Pls
6234 1723 Pls
6265 1667 Pls
6297 1547 Pls
6328 1381 Pls
6360 1306 Pls
6391 1209 Pls
6423 1093 Pls
6454 995 Pls
6486 912 Pls
6517 837 Pls
6549 778 Pls
6580 727 Pls
6612 685 Pls
6643 647 Pls
6675 620 Pls
6706 591 Pls
6738 569 Pls
1725 4487 Pls
1.000 UL
LTb
686 4620 N
686 448 L
6304 0 V
0 4172 V
-6304 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
