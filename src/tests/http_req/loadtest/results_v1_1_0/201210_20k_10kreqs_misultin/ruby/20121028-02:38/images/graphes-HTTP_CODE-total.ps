%!PS-Adobe-2.0
%%Title: images/graphes-HTTP_CODE-total.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sat Oct 27 20:13:43 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-HTTP_CODE-total.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Oct 27 20:13:43 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
5968 0 V
stroke
LTb
1022 448 M
63 0 V
5905 0 R
-63 0 V
938 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 1044 M
5968 0 V
stroke
LTb
1022 1044 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 1640 M
5968 0 V
stroke
LTb
1022 1640 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 2236 M
5968 0 V
stroke
LTb
1022 2236 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 3e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 2832 M
5968 0 V
stroke
LTb
1022 2832 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 4e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 3428 M
5968 0 V
stroke
LTb
1022 3428 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 4024 M
5968 0 V
stroke
LTb
1022 4024 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 6e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 4620 M
5968 0 V
stroke
LTb
1022 4620 M
63 0 V
5905 0 R
-63 0 V
-5989 0 R
( 7e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1022 448 M
0 4172 V
stroke
LTb
1022 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2216 448 M
0 4172 V
stroke
LTb
2216 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
3409 448 M
0 4172 V
stroke
LTb
3409 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4603 448 M
0 4172 V
stroke
LTb
4603 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
5796 448 M
0 4172 V
stroke
LTb
5796 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total) Cshow
grestore
LTb
LCb setrgbcolor
4006 98 M
(unit = sec ) Cshow
LTb
4006 4830 M
( total) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1358 4487 M
(200) Rshow
LT0
1442 4487 M
399 0 V
1046 449 M
24 1 V
24 2 V
23 4 V
24 4 V
24 6 V
24 7 V
24 7 V
24 9 V
24 10 V
24 10 V
23 12 V
24 13 V
24 14 V
24 14 V
24 16 V
24 17 V
24 18 V
24 19 V
23 20 V
24 20 V
24 21 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
23 21 V
24 20 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
24 21 V
23 22 V
24 20 V
24 21 V
24 21 V
24 20 V
24 21 V
24 20 V
23 21 V
24 21 V
24 20 V
24 21 V
24 21 V
24 20 V
24 20 V
24 20 V
23 20 V
24 21 V
24 20 V
24 21 V
24 21 V
24 20 V
24 21 V
24 20 V
23 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
23 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
24 20 V
23 22 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
24 21 V
24 21 V
23 21 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
24 22 V
23 21 V
24 21 V
24 20 V
24 21 V
24 21 V
24 20 V
24 21 V
24 21 V
23 21 V
24 20 V
24 22 V
24 20 V
24 21 V
24 21 V
stroke 3481 2376 M
24 21 V
24 21 V
23 21 V
24 20 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
23 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 20 V
24 21 V
24 21 V
23 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 21 V
24 20 V
23 21 V
24 20 V
24 21 V
24 21 V
24 20 V
24 21 V
24 21 V
24 21 V
23 20 V
24 21 V
24 20 V
24 21 V
24 20 V
24 21 V
24 20 V
24 20 V
23 21 V
24 20 V
24 21 V
24 21 V
24 21 V
24 20 V
24 20 V
24 21 V
23 20 V
24 21 V
24 20 V
24 21 V
24 20 V
24 21 V
24 20 V
24 21 V
23 20 V
24 21 V
24 20 V
24 20 V
24 21 V
24 20 V
24 20 V
23 21 V
24 20 V
24 21 V
24 21 V
24 20 V
24 20 V
24 20 V
24 21 V
23 20 V
24 21 V
24 20 V
24 20 V
24 20 V
24 20 V
24 21 V
24 20 V
23 20 V
24 21 V
24 20 V
24 20 V
24 20 V
24 21 V
24 19 V
24 21 V
23 21 V
24 20 V
24 20 V
24 21 V
24 19 V
24 21 V
24 20 V
24 20 V
23 20 V
24 21 V
24 20 V
24 20 V
24 20 V
24 20 V
24 20 V
24 20 V
stroke 5964 4509 M
23 20 V
24 20 V
1046 449 Pls
1070 450 Pls
1094 452 Pls
1117 456 Pls
1141 460 Pls
1165 466 Pls
1189 473 Pls
1213 480 Pls
1237 489 Pls
1261 499 Pls
1285 509 Pls
1308 521 Pls
1332 534 Pls
1356 548 Pls
1380 562 Pls
1404 578 Pls
1428 595 Pls
1452 613 Pls
1476 632 Pls
1499 652 Pls
1523 672 Pls
1547 693 Pls
1571 714 Pls
1595 735 Pls
1619 756 Pls
1643 776 Pls
1667 797 Pls
1690 818 Pls
1714 838 Pls
1738 859 Pls
1762 880 Pls
1786 901 Pls
1810 921 Pls
1834 942 Pls
1858 963 Pls
1881 985 Pls
1905 1005 Pls
1929 1026 Pls
1953 1047 Pls
1977 1067 Pls
2001 1088 Pls
2025 1108 Pls
2048 1129 Pls
2072 1150 Pls
2096 1170 Pls
2120 1191 Pls
2144 1212 Pls
2168 1232 Pls
2192 1252 Pls
2216 1272 Pls
2239 1292 Pls
2263 1313 Pls
2287 1333 Pls
2311 1354 Pls
2335 1375 Pls
2359 1395 Pls
2383 1416 Pls
2407 1436 Pls
2430 1457 Pls
2454 1478 Pls
2478 1499 Pls
2502 1520 Pls
2526 1541 Pls
2550 1562 Pls
2574 1583 Pls
2598 1604 Pls
2621 1625 Pls
2645 1646 Pls
2669 1667 Pls
2693 1688 Pls
2717 1709 Pls
2741 1729 Pls
2765 1750 Pls
2789 1770 Pls
2812 1792 Pls
2836 1813 Pls
2860 1834 Pls
2884 1855 Pls
2908 1875 Pls
2932 1896 Pls
2956 1917 Pls
2980 1938 Pls
3003 1959 Pls
3027 1980 Pls
3051 2001 Pls
3075 2022 Pls
3099 2042 Pls
3123 2063 Pls
3147 2085 Pls
3170 2106 Pls
3194 2127 Pls
3218 2147 Pls
3242 2168 Pls
3266 2189 Pls
3290 2209 Pls
3314 2230 Pls
3338 2251 Pls
3361 2272 Pls
3385 2292 Pls
3409 2314 Pls
3433 2334 Pls
3457 2355 Pls
3481 2376 Pls
3505 2397 Pls
3529 2418 Pls
3552 2439 Pls
3576 2459 Pls
3600 2480 Pls
3624 2501 Pls
3648 2522 Pls
3672 2543 Pls
3696 2564 Pls
3720 2585 Pls
3743 2606 Pls
3767 2627 Pls
3791 2648 Pls
3815 2669 Pls
3839 2690 Pls
3863 2710 Pls
3887 2731 Pls
3911 2752 Pls
3934 2773 Pls
3958 2794 Pls
3982 2815 Pls
4006 2836 Pls
4030 2857 Pls
4054 2878 Pls
4078 2898 Pls
4101 2919 Pls
4125 2939 Pls
4149 2960 Pls
4173 2981 Pls
4197 3001 Pls
4221 3022 Pls
4245 3043 Pls
4269 3064 Pls
4292 3084 Pls
4316 3105 Pls
4340 3125 Pls
4364 3146 Pls
4388 3166 Pls
4412 3187 Pls
4436 3207 Pls
4460 3227 Pls
4483 3248 Pls
4507 3268 Pls
4531 3289 Pls
4555 3310 Pls
4579 3331 Pls
4603 3351 Pls
4627 3371 Pls
4651 3392 Pls
4674 3412 Pls
4698 3433 Pls
4722 3453 Pls
4746 3474 Pls
4770 3494 Pls
4794 3515 Pls
4818 3535 Pls
4842 3556 Pls
4865 3576 Pls
4889 3597 Pls
4913 3617 Pls
4937 3637 Pls
4961 3658 Pls
4985 3678 Pls
5009 3698 Pls
5032 3719 Pls
5056 3739 Pls
5080 3760 Pls
5104 3781 Pls
5128 3801 Pls
5152 3821 Pls
5176 3841 Pls
5200 3862 Pls
5223 3882 Pls
5247 3903 Pls
5271 3923 Pls
5295 3943 Pls
5319 3963 Pls
5343 3983 Pls
5367 4004 Pls
5391 4024 Pls
5414 4044 Pls
5438 4065 Pls
5462 4085 Pls
5486 4105 Pls
5510 4125 Pls
5534 4146 Pls
5558 4165 Pls
5582 4186 Pls
5605 4207 Pls
5629 4227 Pls
5653 4247 Pls
5677 4268 Pls
5701 4287 Pls
5725 4308 Pls
5749 4328 Pls
5773 4348 Pls
5796 4368 Pls
5820 4389 Pls
5844 4409 Pls
5868 4429 Pls
5892 4449 Pls
5916 4469 Pls
5940 4489 Pls
5964 4509 Pls
5987 4529 Pls
6011 4549 Pls
1641 4487 Pls
1.000 UL
LTb
1022 4620 N
0 -4172 V
5968 0 V
0 4172 V
-5968 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
