%!PS-Adobe-2.0
%%Title: images/graphes-freemem-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Jun 24 11:21:17 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-freemem-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 24 11:21:17 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
938 448 M
6052 0 V
stroke
LTb
938 448 M
63 0 V
5989 0 R
-63 0 V
854 448 M
( 6200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1044 M
6052 0 V
stroke
LTb
938 1044 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 1640 M
6052 0 V
stroke
LTb
938 1640 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2236 M
6052 0 V
stroke
LTb
938 2236 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 6800) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 2832 M
6052 0 V
stroke
LTb
938 2832 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7000) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 3428 M
6052 0 V
stroke
LTb
938 3428 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7200) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4024 M
6052 0 V
stroke
LTb
938 4024 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7400) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 4620 M
6052 0 V
stroke
LTb
938 4620 M
63 0 V
5989 0 R
-63 0 V
-6073 0 R
( 7600) Rshow
1.000 UL
LTb
1.000 UL
LTa
938 448 M
0 4172 V
stroke
LTb
938 448 M
0 63 V
0 4109 R
0 -63 V
938 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1803 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1803 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2667 448 M
0 4172 V
stroke
LTb
2667 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3532 448 M
0 4172 V
stroke
LTb
3532 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4396 448 M
0 4172 V
stroke
LTb
4396 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5261 448 M
0 4172 V
stroke
LTb
5261 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6125 448 M
0 4172 V
stroke
LTb
6125 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(freemem) Cshow
grestore
LTb
LCb setrgbcolor
3964 98 M
(unit = sec ) Cshow
LTb
3964 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1946 4487 M
(freemem@mc1) Rshow
LT0
2030 4487 M
399 0 V
955 4469 M
18 -31 V
17 -77 V
17 -43 V
17 -52 V
18 -48 V
17 -48 V
17 -60 V
18 -41 V
17 -46 V
17 -45 V
17 -48 V
18 -45 V
17 -26 V
17 -43 V
18 -65 V
17 -28 V
17 -50 V
18 -55 V
17 -65 V
17 -86 V
17 -57 V
18 -56 V
17 -47 V
17 -47 V
18 -59 V
17 -55 V
17 -42 V
17 -65 V
18 -3 V
17 -92 V
17 -17 V
18 -34 V
17 -59 V
17 -109 V
17 0 V
18 -94 V
17 -54 V
17 -28 V
18 20 V
17 -169 V
17 36 V
18 -65 V
17 -97 V
17 -16 V
17 -105 V
18 9 V
17 -72 V
17 -75 V
18 -45 V
17 -50 V
17 -121 V
17 -2 V
18 -114 V
17 42 V
17 -166 V
18 -8 V
17 -70 V
17 -43 V
17 -70 V
18 24 V
17 11 V
17 -128 V
18 44 V
17 -21 V
17 65 V
18 -119 V
17 54 V
17 52 V
17 -108 V
18 -74 V
17 135 V
17 -74 V
18 89 V
17 -77 V
17 83 V
17 9 V
18 -37 V
17 -66 V
17 78 V
18 -74 V
17 -38 V
17 61 V
17 63 V
18 -223 V
17 135 V
17 75 V
18 10 V
17 -51 V
17 67 V
18 -37 V
17 -56 V
17 19 V
17 11 V
18 -56 V
17 57 V
17 56 V
18 -68 V
17 -47 V
17 52 V
17 -89 V
18 132 V
17 -25 V
stroke 2719 1282 M
17 -59 V
18 106 V
17 -98 V
17 -158 V
17 214 V
18 -100 V
17 146 V
17 -25 V
18 -46 V
17 -7 V
17 -66 V
18 180 V
17 -64 V
17 -83 V
17 38 V
18 -34 V
17 -124 V
17 139 V
18 -22 V
17 -14 V
17 121 V
17 -114 V
18 19 V
17 9 V
17 16 V
18 -40 V
17 84 V
17 -127 V
17 35 V
18 76 V
17 -84 V
17 34 V
18 27 V
17 93 V
17 -84 V
18 -29 V
17 86 V
17 18 V
17 -188 V
18 124 V
17 -41 V
17 14 V
18 63 V
17 -11 V
17 -123 V
17 138 V
18 -51 V
17 -136 V
17 144 V
18 13 V
17 -79 V
17 52 V
17 13 V
18 -47 V
17 3 V
17 19 V
18 59 V
17 -112 V
17 84 V
18 76 V
17 -73 V
17 48 V
17 2 V
18 -155 V
17 72 V
17 65 V
18 -43 V
17 23 V
17 16 V
17 -69 V
18 36 V
17 21 V
17 -18 V
18 31 V
17 11 V
17 -88 V
17 44 V
18 -41 V
17 -17 V
17 98 V
18 -140 V
17 24 V
17 76 V
17 16 V
18 -90 V
17 60 V
17 -38 V
18 152 V
17 -187 V
17 112 V
18 -62 V
17 -4 V
17 33 V
17 -9 V
18 -20 V
17 -5 V
17 86 V
18 -104 V
17 70 V
17 45 V
17 -65 V
18 -126 V
17 128 V
17 -9 V
stroke 4517 1265 M
18 27 V
17 -32 V
17 10 V
17 24 V
18 31 V
17 -92 V
17 98 V
18 -61 V
17 -37 V
17 48 V
18 -51 V
17 25 V
17 -31 V
17 40 V
18 -226 V
17 160 V
17 -3 V
18 -81 V
17 80 V
17 -34 V
17 -30 V
18 -12 V
17 73 V
17 -146 V
18 83 V
17 77 V
17 -138 V
17 159 V
18 -129 V
17 32 V
17 38 V
18 26 V
17 -201 V
17 247 V
18 -60 V
17 -90 V
17 73 V
17 30 V
18 -52 V
17 79 V
17 -95 V
18 112 V
17 -4 V
17 -22 V
17 34 V
18 -35 V
17 89 V
17 -27 V
18 -71 V
17 69 V
17 -64 V
17 124 V
18 -161 V
17 87 V
17 28 V
18 7 V
17 115 V
17 -40 V
18 53 V
17 -6 V
17 -122 V
17 89 V
18 23 V
17 -37 V
17 27 V
18 31 V
17 -35 V
17 80 V
17 -38 V
18 -24 V
17 -29 V
17 50 V
18 12 V
17 -1 V
17 8 V
17 -11 V
18 -9 V
17 51 V
17 -27 V
18 65 V
17 -4 V
17 -2 V
18 64 V
17 -8 V
17 39 V
17 -24 V
18 57 V
17 -4 V
17 65 V
18 15 V
17 79 V
17 1 V
17 57 V
18 25 V
17 16 V
17 10 V
18 15 V
17 15 V
17 13 V
17 17 V
18 19 V
17 21 V
17 99 V
18 120 V
stroke 6316 2220 M
17 260 V
17 478 V
18 453 V
17 246 V
17 260 V
17 170 V
18 84 V
17 49 V
955 4469 Pls
973 4438 Pls
990 4361 Pls
1007 4318 Pls
1024 4266 Pls
1042 4218 Pls
1059 4170 Pls
1076 4110 Pls
1094 4069 Pls
1111 4023 Pls
1128 3978 Pls
1145 3930 Pls
1163 3885 Pls
1180 3859 Pls
1197 3816 Pls
1215 3751 Pls
1232 3723 Pls
1249 3673 Pls
1267 3618 Pls
1284 3553 Pls
1301 3467 Pls
1318 3410 Pls
1336 3354 Pls
1353 3307 Pls
1370 3260 Pls
1388 3201 Pls
1405 3146 Pls
1422 3104 Pls
1439 3039 Pls
1457 3036 Pls
1474 2944 Pls
1491 2927 Pls
1509 2893 Pls
1526 2834 Pls
1543 2725 Pls
1560 2725 Pls
1578 2631 Pls
1595 2577 Pls
1612 2549 Pls
1630 2569 Pls
1647 2400 Pls
1664 2436 Pls
1682 2371 Pls
1699 2274 Pls
1716 2258 Pls
1733 2153 Pls
1751 2162 Pls
1768 2090 Pls
1785 2015 Pls
1803 1970 Pls
1820 1920 Pls
1837 1799 Pls
1854 1797 Pls
1872 1683 Pls
1889 1725 Pls
1906 1559 Pls
1924 1551 Pls
1941 1481 Pls
1958 1438 Pls
1975 1368 Pls
1993 1392 Pls
2010 1403 Pls
2027 1275 Pls
2045 1319 Pls
2062 1298 Pls
2079 1363 Pls
2097 1244 Pls
2114 1298 Pls
2131 1350 Pls
2148 1242 Pls
2166 1168 Pls
2183 1303 Pls
2200 1229 Pls
2218 1318 Pls
2235 1241 Pls
2252 1324 Pls
2269 1333 Pls
2287 1296 Pls
2304 1230 Pls
2321 1308 Pls
2339 1234 Pls
2356 1196 Pls
2373 1257 Pls
2390 1320 Pls
2408 1097 Pls
2425 1232 Pls
2442 1307 Pls
2460 1317 Pls
2477 1266 Pls
2494 1333 Pls
2512 1296 Pls
2529 1240 Pls
2546 1259 Pls
2563 1270 Pls
2581 1214 Pls
2598 1271 Pls
2615 1327 Pls
2633 1259 Pls
2650 1212 Pls
2667 1264 Pls
2684 1175 Pls
2702 1307 Pls
2719 1282 Pls
2736 1223 Pls
2754 1329 Pls
2771 1231 Pls
2788 1073 Pls
2805 1287 Pls
2823 1187 Pls
2840 1333 Pls
2857 1308 Pls
2875 1262 Pls
2892 1255 Pls
2909 1189 Pls
2927 1369 Pls
2944 1305 Pls
2961 1222 Pls
2978 1260 Pls
2996 1226 Pls
3013 1102 Pls
3030 1241 Pls
3048 1219 Pls
3065 1205 Pls
3082 1326 Pls
3099 1212 Pls
3117 1231 Pls
3134 1240 Pls
3151 1256 Pls
3169 1216 Pls
3186 1300 Pls
3203 1173 Pls
3220 1208 Pls
3238 1284 Pls
3255 1200 Pls
3272 1234 Pls
3290 1261 Pls
3307 1354 Pls
3324 1270 Pls
3342 1241 Pls
3359 1327 Pls
3376 1345 Pls
3393 1157 Pls
3411 1281 Pls
3428 1240 Pls
3445 1254 Pls
3463 1317 Pls
3480 1306 Pls
3497 1183 Pls
3514 1321 Pls
3532 1270 Pls
3549 1134 Pls
3566 1278 Pls
3584 1291 Pls
3601 1212 Pls
3618 1264 Pls
3635 1277 Pls
3653 1230 Pls
3670 1233 Pls
3687 1252 Pls
3705 1311 Pls
3722 1199 Pls
3739 1283 Pls
3757 1359 Pls
3774 1286 Pls
3791 1334 Pls
3808 1336 Pls
3826 1181 Pls
3843 1253 Pls
3860 1318 Pls
3878 1275 Pls
3895 1298 Pls
3912 1314 Pls
3929 1245 Pls
3947 1281 Pls
3964 1302 Pls
3981 1284 Pls
3999 1315 Pls
4016 1326 Pls
4033 1238 Pls
4050 1282 Pls
4068 1241 Pls
4085 1224 Pls
4102 1322 Pls
4120 1182 Pls
4137 1206 Pls
4154 1282 Pls
4171 1298 Pls
4189 1208 Pls
4206 1268 Pls
4223 1230 Pls
4241 1382 Pls
4258 1195 Pls
4275 1307 Pls
4293 1245 Pls
4310 1241 Pls
4327 1274 Pls
4344 1265 Pls
4362 1245 Pls
4379 1240 Pls
4396 1326 Pls
4414 1222 Pls
4431 1292 Pls
4448 1337 Pls
4465 1272 Pls
4483 1146 Pls
4500 1274 Pls
4517 1265 Pls
4535 1292 Pls
4552 1260 Pls
4569 1270 Pls
4586 1294 Pls
4604 1325 Pls
4621 1233 Pls
4638 1331 Pls
4656 1270 Pls
4673 1233 Pls
4690 1281 Pls
4708 1230 Pls
4725 1255 Pls
4742 1224 Pls
4759 1264 Pls
4777 1038 Pls
4794 1198 Pls
4811 1195 Pls
4829 1114 Pls
4846 1194 Pls
4863 1160 Pls
4880 1130 Pls
4898 1118 Pls
4915 1191 Pls
4932 1045 Pls
4950 1128 Pls
4967 1205 Pls
4984 1067 Pls
5001 1226 Pls
5019 1097 Pls
5036 1129 Pls
5053 1167 Pls
5071 1193 Pls
5088 992 Pls
5105 1239 Pls
5123 1179 Pls
5140 1089 Pls
5157 1162 Pls
5174 1192 Pls
5192 1140 Pls
5209 1219 Pls
5226 1124 Pls
5244 1236 Pls
5261 1232 Pls
5278 1210 Pls
5295 1244 Pls
5313 1209 Pls
5330 1298 Pls
5347 1271 Pls
5365 1200 Pls
5382 1269 Pls
5399 1205 Pls
5416 1329 Pls
5434 1168 Pls
5451 1255 Pls
5468 1283 Pls
5486 1290 Pls
5503 1405 Pls
5520 1365 Pls
5538 1418 Pls
5555 1412 Pls
5572 1290 Pls
5589 1379 Pls
5607 1402 Pls
5624 1365 Pls
5641 1392 Pls
5659 1423 Pls
5676 1388 Pls
5693 1468 Pls
5710 1430 Pls
5728 1406 Pls
5745 1377 Pls
5762 1427 Pls
5780 1439 Pls
5797 1438 Pls
5814 1446 Pls
5831 1435 Pls
5849 1426 Pls
5866 1477 Pls
5883 1450 Pls
5901 1515 Pls
5918 1511 Pls
5935 1509 Pls
5953 1573 Pls
5970 1565 Pls
5987 1604 Pls
6004 1580 Pls
6022 1637 Pls
6039 1633 Pls
6056 1698 Pls
6074 1713 Pls
6091 1792 Pls
6108 1793 Pls
6125 1850 Pls
6143 1875 Pls
6160 1891 Pls
6177 1901 Pls
6195 1916 Pls
6212 1931 Pls
6229 1944 Pls
6246 1961 Pls
6264 1980 Pls
6281 2001 Pls
6298 2100 Pls
6316 2220 Pls
6333 2480 Pls
6350 2958 Pls
6368 3411 Pls
6385 3657 Pls
6402 3917 Pls
6419 4087 Pls
6437 4171 Pls
6454 4220 Pls
2229 4487 Pls
1.000 UL
LTb
938 4620 N
938 448 L
6052 0 V
0 4172 V
-6052 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
