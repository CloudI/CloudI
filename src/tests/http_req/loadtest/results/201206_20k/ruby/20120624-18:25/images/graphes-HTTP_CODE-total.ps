%!PS-Adobe-2.0
%%Title: images/graphes-HTTP_CODE-total.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Jun 24 12:23:54 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-HTTP_CODE-total.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 24 12:23:54 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
5800 0 V
stroke
LTb
1190 448 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1044 M
5800 0 V
stroke
LTb
1190 1044 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 1640 M
5800 0 V
stroke
LTb
1190 1640 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 4e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2236 M
5800 0 V
stroke
LTb
1190 2236 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 6e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 2832 M
5800 0 V
stroke
LTb
1190 2832 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 8e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 3428 M
5800 0 V
stroke
LTb
1190 3428 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 4024 M
5800 0 V
stroke
LTb
1190 4024 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1.2e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 4620 M
5800 0 V
stroke
LTb
1190 4620 M
63 0 V
5737 0 R
-63 0 V
-5821 0 R
( 1.4e+07) Rshow
1.000 UL
LTb
1.000 UL
LTa
1190 448 M
0 4172 V
stroke
LTb
1190 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
2019 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
2019 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2847 448 M
0 4172 V
stroke
LTb
2847 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3676 448 M
0 4172 V
stroke
LTb
3676 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4504 448 M
0 4172 V
stroke
LTb
4504 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5333 448 M
0 4172 V
stroke
LTb
5333 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6161 448 M
0 4172 V
stroke
LTb
6161 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(total) Cshow
grestore
LTb
LCb setrgbcolor
4090 98 M
(unit = sec ) Cshow
LTb
4090 4830 M
( total) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1526 4487 M
(200) Rshow
LT0
1610 4487 M
399 0 V
1190 448 M
17 0 V
16 1 V
17 2 V
16 2 V
17 2 V
16 3 V
17 3 V
17 4 V
16 4 V
17 5 V
16 5 V
17 6 V
16 6 V
17 7 V
17 7 V
16 7 V
17 8 V
16 9 V
17 9 V
16 10 V
17 10 V
17 11 V
16 11 V
17 11 V
16 12 V
17 12 V
16 11 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
17 11 V
16 12 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
17 12 V
16 11 V
17 12 V
16 13 V
17 11 V
16 12 V
17 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 11 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
stroke 2880 1517 M
17 12 V
16 12 V
17 11 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 11 V
17 12 V
17 13 V
16 11 V
17 13 V
16 11 V
17 12 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 11 V
17 13 V
16 11 V
17 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 11 V
17 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 12 V
16 12 V
17 11 V
17 12 V
16 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
16 12 V
17 12 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 12 V
16 12 V
17 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
16 11 V
17 12 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
16 11 V
17 12 V
17 11 V
16 11 V
17 12 V
16 11 V
17 11 V
16 12 V
17 12 V
17 11 V
16 12 V
17 12 V
stroke 4604 2739 M
16 11 V
17 12 V
16 12 V
17 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
16 11 V
17 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
16 12 V
17 12 V
17 12 V
16 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
17 11 V
16 12 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
17 12 V
16 11 V
17 11 V
16 12 V
17 11 V
16 12 V
17 11 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
17 12 V
16 11 V
17 11 V
16 12 V
17 11 V
16 11 V
17 12 V
17 11 V
16 12 V
17 11 V
16 12 V
17 12 V
16 11 V
17 12 V
17 11 V
16 11 V
17 12 V
16 11 V
17 12 V
16 11 V
17 12 V
17 11 V
16 12 V
stroke 6327 3939 M
17 12 V
16 11 V
17 12 V
16 12 V
17 11 V
17 10 V
16 10 V
17 9 V
16 7 V
17 7 V
16 6 V
17 5 V
17 4 V
16 2 V
17 2 V
16 2 V
17 0 V
16 1 V
17 0 V
17 0 V
16 0 V
17 0 V
16 0 V
17 0 V
16 0 V
10 0 V
1190 448 Pls
1207 448 Pls
1223 449 Pls
1240 451 Pls
1256 453 Pls
1273 455 Pls
1289 458 Pls
1306 461 Pls
1323 465 Pls
1339 469 Pls
1356 474 Pls
1372 479 Pls
1389 485 Pls
1405 491 Pls
1422 498 Pls
1439 505 Pls
1455 512 Pls
1472 520 Pls
1488 529 Pls
1505 538 Pls
1521 548 Pls
1538 558 Pls
1555 569 Pls
1571 580 Pls
1588 591 Pls
1604 603 Pls
1621 615 Pls
1637 626 Pls
1654 638 Pls
1671 650 Pls
1687 662 Pls
1704 674 Pls
1720 686 Pls
1737 698 Pls
1753 710 Pls
1770 722 Pls
1787 733 Pls
1803 745 Pls
1820 757 Pls
1836 769 Pls
1853 780 Pls
1869 792 Pls
1886 804 Pls
1903 816 Pls
1919 828 Pls
1936 840 Pls
1952 851 Pls
1969 863 Pls
1985 875 Pls
2002 887 Pls
2019 899 Pls
2035 910 Pls
2052 922 Pls
2068 934 Pls
2085 945 Pls
2101 957 Pls
2118 969 Pls
2135 981 Pls
2151 993 Pls
2168 1005 Pls
2184 1017 Pls
2201 1028 Pls
2217 1040 Pls
2234 1052 Pls
2251 1064 Pls
2267 1076 Pls
2284 1088 Pls
2300 1100 Pls
2317 1112 Pls
2333 1124 Pls
2350 1136 Pls
2367 1148 Pls
2383 1159 Pls
2400 1171 Pls
2416 1184 Pls
2433 1195 Pls
2449 1207 Pls
2466 1219 Pls
2483 1231 Pls
2499 1242 Pls
2516 1254 Pls
2532 1266 Pls
2549 1278 Pls
2565 1290 Pls
2582 1302 Pls
2599 1314 Pls
2615 1326 Pls
2632 1338 Pls
2648 1350 Pls
2665 1362 Pls
2681 1374 Pls
2698 1386 Pls
2715 1398 Pls
2731 1410 Pls
2748 1422 Pls
2764 1434 Pls
2781 1446 Pls
2797 1457 Pls
2814 1469 Pls
2831 1481 Pls
2847 1493 Pls
2864 1505 Pls
2880 1517 Pls
2897 1529 Pls
2913 1541 Pls
2930 1552 Pls
2947 1564 Pls
2963 1576 Pls
2980 1588 Pls
2996 1600 Pls
3013 1612 Pls
3029 1623 Pls
3046 1635 Pls
3063 1648 Pls
3079 1659 Pls
3096 1672 Pls
3112 1683 Pls
3129 1695 Pls
3145 1707 Pls
3162 1719 Pls
3179 1731 Pls
3195 1743 Pls
3212 1755 Pls
3228 1766 Pls
3245 1779 Pls
3261 1790 Pls
3278 1802 Pls
3295 1814 Pls
3311 1825 Pls
3328 1837 Pls
3344 1849 Pls
3361 1861 Pls
3377 1873 Pls
3394 1885 Pls
3411 1897 Pls
3427 1909 Pls
3444 1921 Pls
3460 1933 Pls
3477 1945 Pls
3493 1956 Pls
3510 1968 Pls
3527 1980 Pls
3543 1992 Pls
3560 2004 Pls
3576 2016 Pls
3593 2028 Pls
3609 2040 Pls
3626 2051 Pls
3643 2063 Pls
3659 2075 Pls
3676 2087 Pls
3692 2098 Pls
3709 2110 Pls
3725 2122 Pls
3742 2133 Pls
3759 2145 Pls
3775 2157 Pls
3792 2168 Pls
3808 2180 Pls
3825 2192 Pls
3841 2204 Pls
3858 2216 Pls
3875 2228 Pls
3891 2239 Pls
3908 2251 Pls
3924 2263 Pls
3941 2274 Pls
3957 2286 Pls
3974 2298 Pls
3991 2310 Pls
4007 2321 Pls
4024 2333 Pls
4040 2344 Pls
4057 2356 Pls
4073 2368 Pls
4090 2379 Pls
4107 2391 Pls
4123 2402 Pls
4140 2414 Pls
4156 2426 Pls
4173 2438 Pls
4189 2450 Pls
4206 2461 Pls
4223 2473 Pls
4239 2484 Pls
4256 2496 Pls
4272 2508 Pls
4289 2519 Pls
4305 2530 Pls
4322 2542 Pls
4339 2554 Pls
4355 2566 Pls
4372 2577 Pls
4388 2589 Pls
4405 2601 Pls
4421 2612 Pls
4438 2624 Pls
4455 2635 Pls
4471 2646 Pls
4488 2658 Pls
4504 2669 Pls
4521 2680 Pls
4537 2692 Pls
4554 2704 Pls
4571 2715 Pls
4587 2727 Pls
4604 2739 Pls
4620 2750 Pls
4637 2762 Pls
4653 2774 Pls
4670 2785 Pls
4687 2797 Pls
4703 2809 Pls
4720 2820 Pls
4736 2832 Pls
4753 2844 Pls
4769 2855 Pls
4786 2866 Pls
4803 2878 Pls
4819 2889 Pls
4836 2901 Pls
4852 2913 Pls
4869 2924 Pls
4885 2936 Pls
4902 2948 Pls
4919 2959 Pls
4935 2971 Pls
4952 2982 Pls
4968 2994 Pls
4985 3005 Pls
5001 3017 Pls
5018 3028 Pls
5035 3040 Pls
5051 3051 Pls
5068 3063 Pls
5084 3075 Pls
5101 3086 Pls
5117 3098 Pls
5134 3110 Pls
5151 3122 Pls
5167 3134 Pls
5184 3145 Pls
5200 3157 Pls
5217 3168 Pls
5233 3180 Pls
5250 3191 Pls
5267 3203 Pls
5283 3214 Pls
5300 3226 Pls
5316 3237 Pls
5333 3249 Pls
5349 3261 Pls
5366 3272 Pls
5383 3283 Pls
5399 3295 Pls
5416 3307 Pls
5432 3318 Pls
5449 3330 Pls
5465 3341 Pls
5482 3353 Pls
5499 3364 Pls
5515 3376 Pls
5532 3387 Pls
5548 3399 Pls
5565 3410 Pls
5581 3422 Pls
5598 3433 Pls
5615 3445 Pls
5631 3456 Pls
5648 3467 Pls
5664 3479 Pls
5681 3490 Pls
5697 3502 Pls
5714 3513 Pls
5731 3525 Pls
5747 3536 Pls
5764 3548 Pls
5780 3559 Pls
5797 3571 Pls
5813 3582 Pls
5830 3594 Pls
5847 3606 Pls
5863 3617 Pls
5880 3629 Pls
5896 3640 Pls
5913 3652 Pls
5929 3663 Pls
5946 3675 Pls
5963 3687 Pls
5979 3698 Pls
5996 3709 Pls
6012 3721 Pls
6029 3732 Pls
6045 3743 Pls
6062 3755 Pls
6079 3766 Pls
6095 3778 Pls
6112 3789 Pls
6128 3801 Pls
6145 3813 Pls
6161 3824 Pls
6178 3836 Pls
6195 3847 Pls
6211 3858 Pls
6228 3870 Pls
6244 3881 Pls
6261 3893 Pls
6277 3904 Pls
6294 3916 Pls
6311 3927 Pls
6327 3939 Pls
6344 3951 Pls
6360 3962 Pls
6377 3974 Pls
6393 3986 Pls
6410 3997 Pls
6427 4007 Pls
6443 4017 Pls
6460 4026 Pls
6476 4033 Pls
6493 4040 Pls
6509 4046 Pls
6526 4051 Pls
6543 4055 Pls
6559 4057 Pls
6576 4059 Pls
6592 4061 Pls
6609 4061 Pls
6625 4062 Pls
6642 4062 Pls
6659 4062 Pls
6675 4062 Pls
6692 4062 Pls
6708 4062 Pls
6725 4062 Pls
6741 4062 Pls
6751 4062 Pls
1809 4487 Pls
1.000 UL
LTb
1190 4620 N
0 -4172 V
5800 0 V
0 4172 V
-5800 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
