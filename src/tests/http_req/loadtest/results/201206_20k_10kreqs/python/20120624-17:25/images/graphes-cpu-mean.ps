%!PS-Adobe-2.0
%%Title: images/graphes-cpu-mean.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Jun 24 11:21:17 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (images/graphes-cpu-mean.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (ubuntu)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 24 11:21:17 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
770 448 M
6220 0 V
stroke
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1143 M
6220 0 V
stroke
LTb
770 1143 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 10) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 1839 M
6220 0 V
stroke
LTb
770 1839 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 20) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 2534 M
6220 0 V
stroke
LTb
770 2534 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3229 M
6220 0 V
stroke
LTb
770 3229 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 3925 M
6220 0 V
stroke
LTb
770 3925 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 4620 M
6220 0 V
stroke
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 4172 V
stroke
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
770 308 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1659 448 M
0 3969 V
0 140 R
0 63 V
stroke
LTb
1659 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 500) Cshow
1.000 UL
LTb
1.000 UL
LTa
2547 448 M
0 4172 V
stroke
LTb
2547 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3436 448 M
0 4172 V
stroke
LTb
3436 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 1500) Cshow
1.000 UL
LTb
1.000 UL
LTa
4324 448 M
0 4172 V
stroke
LTb
4324 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5213 448 M
0 4172 V
stroke
LTb
5213 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 2500) Cshow
1.000 UL
LTb
1.000 UL
LTa
6101 448 M
0 4172 V
stroke
LTb
6101 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6990 448 M
0 4172 V
stroke
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 3500) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(cpu) Cshow
grestore
LTb
LCb setrgbcolor
3880 98 M
(unit = sec ) Cshow
LTb
3880 4830 M
( mean) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1442 4487 M
(cpu@mc1) Rshow
LT0
1526 4487 M
399 0 V
788 514 M
18 181 V
17 291 V
18 261 V
18 210 V
18 105 V
17 248 V
18 344 V
18 278 V
18 249 V
17 170 V
18 106 V
18 56 V
18 83 V
18 354 V
17 -31 V
18 -199 V
18 140 V
18 147 V
17 331 V
18 203 V
18 92 V
18 108 V
18 -32 V
17 57 V
18 32 V
18 39 V
18 18 V
17 -133 V
18 129 V
18 -65 V
18 20 V
17 -37 V
18 117 V
18 0 V
18 -62 V
18 -24 V
17 -6 V
18 -9 V
18 6 V
18 9 V
17 20 V
18 -6 V
18 -11 V
18 44 V
17 -78 V
18 -20 V
18 162 V
18 -94 V
18 12 V
17 -24 V
18 23 V
18 -40 V
18 54 V
17 -32 V
18 -70 V
18 115 V
18 -11 V
18 7 V
17 3 V
18 25 V
18 -42 V
18 -17 V
17 15 V
18 43 V
18 -75 V
18 -24 V
17 86 V
18 27 V
18 -54 V
18 -38 V
18 -32 V
17 69 V
18 -22 V
18 41 V
18 6 V
17 -106 V
18 88 V
18 63 V
18 -83 V
17 31 V
18 0 V
18 26 V
18 -15 V
18 -13 V
17 -3 V
18 46 V
18 -41 V
18 -37 V
17 32 V
18 -11 V
18 -28 V
18 11 V
18 51 V
17 32 V
18 -55 V
18 -47 V
18 38 V
17 1 V
18 -37 V
18 -3 V
18 26 V
17 -2 V
stroke 2600 4326 M
18 -15 V
18 3 V
18 -54 V
18 100 V
17 28 V
18 -26 V
18 22 V
18 -67 V
17 -27 V
18 35 V
18 9 V
18 -29 V
17 35 V
18 -32 V
18 81 V
18 -83 V
18 52 V
17 -62 V
18 16 V
18 62 V
18 -63 V
17 13 V
18 -29 V
18 14 V
18 -8 V
18 -46 V
17 30 V
18 33 V
18 39 V
18 -33 V
17 -16 V
18 47 V
18 -64 V
18 56 V
17 -32 V
18 -25 V
18 -7 V
18 38 V
18 28 V
17 -54 V
18 1 V
18 13 V
18 -4 V
17 -1 V
18 15 V
18 -11 V
18 64 V
17 -62 V
18 -21 V
18 -3 V
18 21 V
18 -21 V
17 38 V
18 22 V
18 -108 V
18 42 V
17 56 V
18 -100 V
18 43 V
18 38 V
18 35 V
17 -13 V
18 10 V
18 -65 V
18 48 V
17 -86 V
18 50 V
18 -24 V
18 26 V
17 18 V
18 48 V
18 -53 V
18 -74 V
18 111 V
17 -79 V
18 48 V
18 -2 V
18 -48 V
17 87 V
18 -48 V
18 -26 V
18 12 V
17 -36 V
18 -6 V
18 52 V
18 17 V
18 9 V
17 -17 V
18 -72 V
18 58 V
18 -28 V
17 -12 V
18 66 V
18 47 V
18 -78 V
18 -73 V
17 134 V
18 -7 V
18 -11 V
18 -80 V
17 -5 V
18 32 V
18 -14 V
18 42 V
stroke 4449 4310 M
17 37 V
18 -78 V
18 55 V
18 -21 V
18 -19 V
17 29 V
18 -40 V
18 10 V
18 28 V
17 -31 V
18 17 V
18 -66 V
18 55 V
17 43 V
18 -70 V
18 23 V
18 30 V
18 27 V
17 -75 V
18 103 V
18 -24 V
18 -6 V
17 -22 V
18 -75 V
18 76 V
18 -31 V
18 20 V
17 -74 V
18 64 V
18 24 V
18 7 V
17 -19 V
18 16 V
18 -3 V
18 -14 V
17 14 V
18 -43 V
18 48 V
18 29 V
18 -26 V
17 -126 V
18 98 V
18 -59 V
18 47 V
17 -33 V
18 28 V
18 44 V
18 -60 V
17 -60 V
18 46 V
18 42 V
18 -18 V
18 61 V
17 -20 V
18 -42 V
18 -31 V
18 97 V
17 20 V
18 -27 V
18 4 V
18 -108 V
18 -37 V
17 33 V
18 70 V
18 -62 V
18 41 V
17 41 V
18 -87 V
18 -32 V
18 67 V
17 -57 V
18 80 V
18 -56 V
18 71 V
18 30 V
17 -22 V
18 -51 V
18 -103 V
18 48 V
17 30 V
18 -28 V
18 -24 V
18 67 V
17 5 V
18 24 V
18 -24 V
18 -34 V
18 89 V
17 0 V
18 -58 V
18 -11 V
18 -71 V
17 -99 V
18 -134 V
18 -131 V
18 -207 V
18 -80 V
17 4 V
18 330 V
18 323 V
18 -233 V
17 -883 V
18 -1180 V
18 -592 V
stroke 6297 1288 M
18 -296 V
17 -166 V
18 -204 V
18 -86 V
18 -36 V
18 -22 V
17 -14 V
18 -7 V
788 514 Pls
806 695 Pls
823 986 Pls
841 1247 Pls
859 1457 Pls
877 1562 Pls
894 1810 Pls
912 2154 Pls
930 2432 Pls
948 2681 Pls
965 2851 Pls
983 2957 Pls
1001 3013 Pls
1019 3096 Pls
1037 3450 Pls
1054 3419 Pls
1072 3220 Pls
1090 3360 Pls
1108 3507 Pls
1125 3838 Pls
1143 4041 Pls
1161 4133 Pls
1179 4241 Pls
1197 4209 Pls
1214 4266 Pls
1232 4298 Pls
1250 4337 Pls
1268 4355 Pls
1285 4222 Pls
1303 4351 Pls
1321 4286 Pls
1339 4306 Pls
1356 4269 Pls
1374 4386 Pls
1392 4386 Pls
1410 4324 Pls
1428 4300 Pls
1445 4294 Pls
1463 4285 Pls
1481 4291 Pls
1499 4300 Pls
1516 4320 Pls
1534 4314 Pls
1552 4303 Pls
1570 4347 Pls
1587 4269 Pls
1605 4249 Pls
1623 4411 Pls
1641 4317 Pls
1659 4329 Pls
1676 4305 Pls
1694 4328 Pls
1712 4288 Pls
1730 4342 Pls
1747 4310 Pls
1765 4240 Pls
1783 4355 Pls
1801 4344 Pls
1819 4351 Pls
1836 4354 Pls
1854 4379 Pls
1872 4337 Pls
1890 4320 Pls
1907 4335 Pls
1925 4378 Pls
1943 4303 Pls
1961 4279 Pls
1978 4365 Pls
1996 4392 Pls
2014 4338 Pls
2032 4300 Pls
2050 4268 Pls
2067 4337 Pls
2085 4315 Pls
2103 4356 Pls
2121 4362 Pls
2138 4256 Pls
2156 4344 Pls
2174 4407 Pls
2192 4324 Pls
2209 4355 Pls
2227 4355 Pls
2245 4381 Pls
2263 4366 Pls
2281 4353 Pls
2298 4350 Pls
2316 4396 Pls
2334 4355 Pls
2352 4318 Pls
2369 4350 Pls
2387 4339 Pls
2405 4311 Pls
2423 4322 Pls
2441 4373 Pls
2458 4405 Pls
2476 4350 Pls
2494 4303 Pls
2512 4341 Pls
2529 4342 Pls
2547 4305 Pls
2565 4302 Pls
2583 4328 Pls
2600 4326 Pls
2618 4311 Pls
2636 4314 Pls
2654 4260 Pls
2672 4360 Pls
2689 4388 Pls
2707 4362 Pls
2725 4384 Pls
2743 4317 Pls
2760 4290 Pls
2778 4325 Pls
2796 4334 Pls
2814 4305 Pls
2831 4340 Pls
2849 4308 Pls
2867 4389 Pls
2885 4306 Pls
2903 4358 Pls
2920 4296 Pls
2938 4312 Pls
2956 4374 Pls
2974 4311 Pls
2991 4324 Pls
3009 4295 Pls
3027 4309 Pls
3045 4301 Pls
3063 4255 Pls
3080 4285 Pls
3098 4318 Pls
3116 4357 Pls
3134 4324 Pls
3151 4308 Pls
3169 4355 Pls
3187 4291 Pls
3205 4347 Pls
3222 4315 Pls
3240 4290 Pls
3258 4283 Pls
3276 4321 Pls
3294 4349 Pls
3311 4295 Pls
3329 4296 Pls
3347 4309 Pls
3365 4305 Pls
3382 4304 Pls
3400 4319 Pls
3418 4308 Pls
3436 4372 Pls
3453 4310 Pls
3471 4289 Pls
3489 4286 Pls
3507 4307 Pls
3525 4286 Pls
3542 4324 Pls
3560 4346 Pls
3578 4238 Pls
3596 4280 Pls
3613 4336 Pls
3631 4236 Pls
3649 4279 Pls
3667 4317 Pls
3685 4352 Pls
3702 4339 Pls
3720 4349 Pls
3738 4284 Pls
3756 4332 Pls
3773 4246 Pls
3791 4296 Pls
3809 4272 Pls
3827 4298 Pls
3844 4316 Pls
3862 4364 Pls
3880 4311 Pls
3898 4237 Pls
3916 4348 Pls
3933 4269 Pls
3951 4317 Pls
3969 4315 Pls
3987 4267 Pls
4004 4354 Pls
4022 4306 Pls
4040 4280 Pls
4058 4292 Pls
4075 4256 Pls
4093 4250 Pls
4111 4302 Pls
4129 4319 Pls
4147 4328 Pls
4164 4311 Pls
4182 4239 Pls
4200 4297 Pls
4218 4269 Pls
4235 4257 Pls
4253 4323 Pls
4271 4370 Pls
4289 4292 Pls
4307 4219 Pls
4324 4353 Pls
4342 4346 Pls
4360 4335 Pls
4378 4255 Pls
4395 4250 Pls
4413 4282 Pls
4431 4268 Pls
4449 4310 Pls
4466 4347 Pls
4484 4269 Pls
4502 4324 Pls
4520 4303 Pls
4538 4284 Pls
4555 4313 Pls
4573 4273 Pls
4591 4283 Pls
4609 4311 Pls
4626 4280 Pls
4644 4297 Pls
4662 4231 Pls
4680 4286 Pls
4697 4329 Pls
4715 4259 Pls
4733 4282 Pls
4751 4312 Pls
4769 4339 Pls
4786 4264 Pls
4804 4367 Pls
4822 4343 Pls
4840 4337 Pls
4857 4315 Pls
4875 4240 Pls
4893 4316 Pls
4911 4285 Pls
4929 4305 Pls
4946 4231 Pls
4964 4295 Pls
4982 4319 Pls
5000 4326 Pls
5017 4307 Pls
5035 4323 Pls
5053 4320 Pls
5071 4306 Pls
5088 4320 Pls
5106 4277 Pls
5124 4325 Pls
5142 4354 Pls
5160 4328 Pls
5177 4202 Pls
5195 4300 Pls
5213 4241 Pls
5231 4288 Pls
5248 4255 Pls
5266 4283 Pls
5284 4327 Pls
5302 4267 Pls
5319 4207 Pls
5337 4253 Pls
5355 4295 Pls
5373 4277 Pls
5391 4338 Pls
5408 4318 Pls
5426 4276 Pls
5444 4245 Pls
5462 4342 Pls
5479 4362 Pls
5497 4335 Pls
5515 4339 Pls
5533 4231 Pls
5551 4194 Pls
5568 4227 Pls
5586 4297 Pls
5604 4235 Pls
5622 4276 Pls
5639 4317 Pls
5657 4230 Pls
5675 4198 Pls
5693 4265 Pls
5710 4208 Pls
5728 4288 Pls
5746 4232 Pls
5764 4303 Pls
5782 4333 Pls
5799 4311 Pls
5817 4260 Pls
5835 4157 Pls
5853 4205 Pls
5870 4235 Pls
5888 4207 Pls
5906 4183 Pls
5924 4250 Pls
5941 4255 Pls
5959 4279 Pls
5977 4255 Pls
5995 4221 Pls
6013 4310 Pls
6030 4310 Pls
6048 4252 Pls
6066 4241 Pls
6084 4170 Pls
6101 4071 Pls
6119 3937 Pls
6137 3806 Pls
6155 3599 Pls
6173 3519 Pls
6190 3523 Pls
6208 3853 Pls
6226 4176 Pls
6244 3943 Pls
6261 3060 Pls
6279 1880 Pls
6297 1288 Pls
6315 992 Pls
6332 826 Pls
6350 622 Pls
6368 536 Pls
6386 500 Pls
6404 478 Pls
6421 464 Pls
6439 457 Pls
1725 4487 Pls
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
