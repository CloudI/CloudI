Items waiting for after the release of version 1.2.3
----------------------------------------------------
Add more examples, specifically one for including CloudI in an Erlang release
   with other Erlang applications
Solve accept block on OSX in "local" protocol socket within NIF
Add websockets cowboy integration
Add to http://0install.net/ ?
X-HTTP-Method-Override usage in cowboy integration
Add https://github.com/Amadiro/erlang-statistics integration
    or something similar
EC2 automatic node configuration
    * working with external/nodefinder/ec2nodefinder/
      but with sane ec2 integration
ATOM_CACHE_REF change
    * binary erlang term format, effects python/ruby CloudI API serialization
      (the ATOM_CACHE_REF will/is not be used by the CloudI API, the change
       is just for completeness)
Add better database integration
    * add native Riak support
    * add native CouchDB support
    * add MongoDB support
    * add Kyoto Tycoon support?
Add more features to the HTTP integration
    * websockets integration
Lua CloudI API
    * can base this on the Python-C CloudI API integration
      (within api/python/cloudi_py.cpp)
Perl CloudI API
    * all-Perl implementation using updated code for the
      binary erlang binary term format, similar to
      http://search.cpan.org/~hio/Erlang-Port-0.04/lib/Erlang/Port.pm
R CloudI API
    * R w/C++ integration using Rcpp
      http://cran.r-project.org/web/packages/Rcpp/vignettes/Rcpp-introduction.pdf
Ocaml CloudI API
    * all-Ocaml implementation
    * see https://github.com/EchoTeam/ocaml-erlang-port
Haskell CloudI API
    * all-Haskell implementation

