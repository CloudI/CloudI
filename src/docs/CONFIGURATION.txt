================================================================================
ABOUT
================================================================================

Configuration notes that were created to replicate the cloud node configuration.
Not much explanation, but the essential information and steps are below.
The configuration assumes a system running on Ubuntu.

You will need to change the following in the root Makefile:
ERLANG_PATH=/home/user/installed
ERLWARE_PATH=/home/user/installed/erlware

host1 and host2 are placeholders in Makefile and cloud.conf.  Usage of host2
is commented out in the Makefile but can easily be changed.

================================================================================
RUNTIME CONFIGURATION
================================================================================

BUILD AND INSTALL ERLANG IN A LOCATION ACCESSIBLE BY THE PATH VARIABLE

tar zxvf otp_src_R13B01.tar.gz
cd otp_src_R13B01
./configure --enable-threads --enable-smp-support --enable-kernel-poll --disable-hipe --prefix=/home/user/installed
tar zxvf otp_doc_html_R13B01.tar.gz -C /home/user/installed/lib/erlang/
tar zxvf otp_doc_man_R13B01.tar.gz -C /home/user/installed/

#add to /etc/manpath.config
MANDATORY_MANPATH                       /home/user/installed/man
MANPATH_MAP     /home/user/installed  /home/user/installed/man



MAKE SSH PASSWORD-LESS (FOR LOGIN FROM A -> B)

(on host A as user a)
ssh-keygen -t rsa
ssh b@B mkdir -p .ssh
cat .ssh/id_rsa.pub | ssh b@B 'cat >> .ssh/authorized_keys'
(if the default location of the key pair conflicts with a previous key
 then alter ~/.ssh/config:
 Host host2
   TCPKeepAlive yes
   IdentityFile ~/.ssh/id_rsa.host2
 to reference id_rsa.host2 and id_rsa.host2.pub)



ADD TO /etc/ssh/sshd_config

# allow user environment files 
# "Specifies whether ~/.ssh/environment and environment= options in
#            ~/.ssh/authorized_keys are processed by sshd(8)."
PermitUserEnvironment yes



ADD LOCAL PATHS TO SSH (FOR NON-INTERACTIVE USE), FILE ~/.ssh/environment

PATH=/home/user/bin:/home/user/installed/bin:/home/user/installed/erlware/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games



ADD ENTRIES TO /etc/hosts ON ALL CLOUD NODE HOSTS

#192.168.1.2     host1 (current host)
192.168.1.3     host2
...



================================================================================
BUILD CONFIGURATION
================================================================================

CODE REQUIRES SINAN, SINAN REQUIRES FAXIEN

curl -O http://faxien.googlecode.com/files/faxien-launcher-universal-0.3.4.py
python faxien-launcher-universal-0.3.4.py
#Enter the install prefix: [/usr/local/erlware] /home/user/installed/erlware/
#Do you want to run the bootstrapper now? ([y]/n) y
faxien install-release sinan
#(later on all machines, doesn't seem to always work, fresh install then)
faxien upgrade-all-releases
#install lighttpd for private repo
apt-get install lighttpd lighttpd-mod-webdav
#directions here:
#http://www.trapexit.org/Using_Faxien_and_Sinan#Creating_new_repository
/etc/init.d/lighttpd start
#changes to /etc/lighttpd/lighttpd.conf
           "mod_webdav",
server.port               = 3001
#(append to /etc/lighttpd/lighttpd.conf)
webdav.activate = "enable"
webdav.is-readonly = "disable"
webdav.sqlite-db-name = "/var/run/lighttpd/lighttpd.webdav_lock.db"
#then create repo as a link
ln -s /home/user/organized/work/erlang/faxien_lighttpd_repo /var/www/repo



CODE REQUIRES boost, asn1, etc.

# minimal dependency for building g++ (on a 64bit system)
apt-get install libc6-dev-i386
# minimal dependency for building boost
apt-get install libbz2-dev zlib1g-dev



POSTGRES FOR DATABASE

apt-get install postgres postgresql-client-8.3 postgres-client-common python-pygresql postgresql-doc-8.3 postgresql-doc python-pygresql-dbg
#python bindings of postgres interface library
apt-get install python-psycopg2



POSTGRES SETUP

user$ sudo su
Password:
root# su postgres
postgres$ psql
Welcome to psql 8.3.7, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit

postgres=# ALTER USER Postgres WITH PASSWORD 'XXXXXXXX';
ALTER ROLE
postgres=# \q



CREATE cloudi_tests AND cloudi_examples DATABASES

postgres$ psql -h 127.0.0.1
Password:
Welcome to psql 8.3.7, the PostgreSQL interactive terminal.

Type:  \copyright for distribution terms
       \h for help with SQL commands
       \? for help with psql commands
       \g or terminate with semicolon to execute query
       \q to quit

SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)

postgres=# CREATE USER cloudi WITH PASSWORD 'XXXXXXXX';
CREATE ROLE
postgres=# CREATE DATABASE cloudi_tests;
CREATE DATABASE
postgres=# CREATE DATABASE cloudi_examples;
CREATE DATABASE
postgres=# GRANT ALL PRIVILEGES ON DATABASE cloudi_tests to cloudi;
GRANT
postgres=# GRANT ALL PRIVILEGES ON DATABASE cloudi_examples to cloudi;
GRANT
postgres=# \q
postgres$ exit
root# exit
user$



DEBUG

apt-get install libc6-dbg

