= cowboy_req:resp_header(3)

== Name

cowboy_req:resp_header - Response header

== Description

[source,erlang]
----
resp_header(Name, Req)          -> resp_header(Name, Req, undefined)
resp_header(Name, Req, Default) -> binary() | Default

Name    :: binary()          %% lowercase; case insensitive
Req     :: cowboy_req:req()
Default :: any()
----

Return the value for the given response header.

The response header must have been set previously using
link:man:cowboy_req:set_resp_header(3)[cowboy_req:set_resp_header(3)] or
link:man:cowboy_req:set_resp_headers(3)[cowboy_req:set_resp_headers(3)].

The header name must be given as a lowercase binary string.
While header names are case insensitive, Cowboy requires them
to be given as lowercase to function properly.

== Arguments

Name::

Desired response header name as a lowercase binary string.

Req::

The Req object.

Default::

Default value returned when the header is missing.

== Return value

The header value is returned as a binary string. When the
header is missing, the default argument is returned.

== Changelog

* *2.0*: Function introduced.

== Examples

.Get the content-type response header
[source,erlang]
----
Type = cowboy_req:resp_header(<<"content-type">>, Req).
----

.Get the content-type response header with a default value
[source,erlang]
----
Type = cowboy_req:resp_header(<<"content-type">>, Req, <<"text/html">>).
----

== See also

link:man:cowboy_req(3)[cowboy_req(3)],
link:man:cowboy_req:resp_headers(3)[cowboy_req:resp_headers(3)],
link:man:cowboy_req:set_resp_header(3)[cowboy_req:set_resp_header(3)],
link:man:cowboy_req:set_resp_headers(3)[cowboy_req:set_resp_headers(3)]
